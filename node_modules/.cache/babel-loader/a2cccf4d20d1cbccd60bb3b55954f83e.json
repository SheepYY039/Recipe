{"ast":null,"code":"var _jsxFileName = \"/Users/yeungj12/Projects/FrontEnd/ReactJS/frontend014_recipe/src/CardSimpleBar.js\";\nimport React, { useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport SimpleBarJS from \"simplebar/dist/simplebar-core.esm\";\nimport style from \"./Recipe.module.css\";\n/* Deprecated\n * Hardcore this here until we can safely deprecated it.\n * Helper function to retrieve options from element attributes\n */\n\nconst getOptions = function (obj) {\n  const options = Array.prototype.reduce.call(obj, (acc, attribute) => {\n    const option = attribute.name.match(/data-simplebar-(.+)/);\n\n    if (option) {\n      const key = option[1].replace(/\\W+(.)/g, (x, chr) => chr.toUpperCase());\n\n      switch (attribute.value) {\n        case \"true\":\n          acc[key] = true;\n          break;\n\n        case \"false\":\n          acc[key] = false;\n          break;\n\n        case undefined:\n          acc[key] = true;\n          break;\n\n        default:\n          acc[key] = attribute.value;\n      }\n    }\n\n    return acc;\n  }, {});\n  return options;\n};\n\nconst SimpleBar = React.forwardRef(({\n  children,\n  scrollableNodeProps = {},\n  ...otherProps\n}, ref) => {\n  let instance;\n  let scrollableNodeRef = useRef();\n  const elRef = useRef();\n  const contentNodeRef = useRef();\n  let options = {};\n  let rest = {};\n  let deprecatedOptions = [];\n  Object.keys(otherProps).forEach(key => {\n    if (Object.prototype.hasOwnProperty.call(SimpleBarJS.defaultOptions, key)) {\n      options[key] = otherProps[key];\n    } else if (key.match(/data-simplebar-(.+)/) && key !== \"data-simplebar-direction\") {\n      deprecatedOptions.push({\n        name: key,\n        value: otherProps[key]\n      });\n    } else {\n      rest[key] = otherProps[key];\n    }\n  });\n\n  if (deprecatedOptions.length) {\n    console.warn(`simplebar-react: this way of passing options is deprecated. Pass it like normal props instead:\n        'data-simplebar-auto-hide=\"false\"' â€”> 'autoHide=\"false\"'\n      `);\n  }\n\n  useEffect(() => {\n    scrollableNodeRef = scrollableNodeProps.ref || scrollableNodeRef;\n\n    if (elRef.current) {\n      instance = new SimpleBarJS(elRef.current, { ...getOptions(deprecatedOptions),\n        ...options,\n        ...(scrollableNodeRef && {\n          scrollableNode: scrollableNodeRef.current\n        }),\n        ...(contentNodeRef.current && {\n          contentNode: contentNodeRef.current\n        })\n      });\n\n      if (ref) {\n        ref.current = instance;\n      }\n    }\n\n    return () => {\n      instance.unMount();\n      instance = null;\n    };\n  }, []); // !Changed original className for styling\n\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    ref: elRef,\n    \"data-simplebar\": true\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: style.simplebarWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: style.simplebarHeightAutoObserverWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: style.simplebarHeightAutoObserver,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: style.simplebarMask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: style.simplebarOffset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, typeof children === \"function\" ? children({\n    scrollableNodeRef,\n    contentNodeRef\n  }) : /*#__PURE__*/React.createElement(\"div\", Object.assign({}, scrollableNodeProps, {\n    className: `simplebar-content-wrapper${scrollableNodeProps.className ? ` ${scrollableNodeProps.className}` : \"\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: style.simplebarContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 19\n    }\n  }, children)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: style.simplebarPlaceholder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: `${style.simplebarTrack} ${style.simplebarHorizontal}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: style.simplebarScrollbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: `${style.simplebarTrack} ${style.simplebarVertical}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: style.simplebarScrollbar,\n    style: backgroundColor = orange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  })));\n});\nSimpleBar.displayName = \"SimpleBar\";\nSimpleBar.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  scrollableNodeProps: PropTypes.object\n};\nexport default SimpleBar;","map":{"version":3,"sources":["/Users/yeungj12/Projects/FrontEnd/ReactJS/frontend014_recipe/src/CardSimpleBar.js"],"names":["React","useEffect","useRef","PropTypes","SimpleBarJS","style","getOptions","obj","options","Array","prototype","reduce","call","acc","attribute","option","name","match","key","replace","x","chr","toUpperCase","value","undefined","SimpleBar","forwardRef","children","scrollableNodeProps","otherProps","ref","instance","scrollableNodeRef","elRef","contentNodeRef","rest","deprecatedOptions","Object","keys","forEach","hasOwnProperty","defaultOptions","push","length","console","warn","current","scrollableNode","contentNode","unMount","simplebarWrapper","simplebarHeightAutoObserverWrapper","simplebarHeightAutoObserver","simplebarMask","simplebarOffset","className","simplebarContent","simplebarPlaceholder","simplebarTrack","simplebarHorizontal","simplebarScrollbar","simplebarVertical","backgroundColor","orange","displayName","propTypes","oneOfType","node","func","object"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport SimpleBarJS from \"simplebar/dist/simplebar-core.esm\";\nimport style from \"./Recipe.module.css\";\n\n/* Deprecated\n * Hardcore this here until we can safely deprecated it.\n * Helper function to retrieve options from element attributes\n */\nconst getOptions = function (obj) {\n  const options = Array.prototype.reduce.call(\n    obj,\n    (acc, attribute) => {\n      const option = attribute.name.match(/data-simplebar-(.+)/);\n      if (option) {\n        const key = option[1].replace(/\\W+(.)/g, (x, chr) => chr.toUpperCase());\n        switch (attribute.value) {\n          case \"true\":\n            acc[key] = true;\n            break;\n          case \"false\":\n            acc[key] = false;\n            break;\n          case undefined:\n            acc[key] = true;\n            break;\n          default:\n            acc[key] = attribute.value;\n        }\n      }\n      return acc;\n    },\n    {}\n  );\n  return options;\n};\n\nconst SimpleBar = React.forwardRef(\n  ({ children, scrollableNodeProps = {}, ...otherProps }, ref) => {\n    let instance;\n    let scrollableNodeRef = useRef();\n    const elRef = useRef();\n    const contentNodeRef = useRef();\n    let options = {};\n    let rest = {};\n    let deprecatedOptions = [];\n\n    Object.keys(otherProps).forEach((key) => {\n      if (\n        Object.prototype.hasOwnProperty.call(SimpleBarJS.defaultOptions, key)\n      ) {\n        options[key] = otherProps[key];\n      } else if (\n        key.match(/data-simplebar-(.+)/) &&\n        key !== \"data-simplebar-direction\"\n      ) {\n        deprecatedOptions.push({\n          name: key,\n          value: otherProps[key],\n        });\n      } else {\n        rest[key] = otherProps[key];\n      }\n    });\n\n    if (deprecatedOptions.length) {\n      console.warn(`simplebar-react: this way of passing options is deprecated. Pass it like normal props instead:\n        'data-simplebar-auto-hide=\"false\"' â€”> 'autoHide=\"false\"'\n      `);\n    }\n\n    useEffect(() => {\n      scrollableNodeRef = scrollableNodeProps.ref || scrollableNodeRef;\n\n      if (elRef.current) {\n        instance = new SimpleBarJS(elRef.current, {\n          ...getOptions(deprecatedOptions),\n          ...options,\n          ...(scrollableNodeRef && {\n            scrollableNode: scrollableNodeRef.current,\n          }),\n          ...(contentNodeRef.current && {\n            contentNode: contentNodeRef.current,\n          }),\n        });\n\n        if (ref) {\n          ref.current = instance;\n        }\n      }\n\n      return () => {\n        instance.unMount();\n        instance = null;\n      };\n    }, []);\n\n    // !Changed original className for styling\n\n    return (\n      <div ref={elRef} data-simplebar {...rest}>\n        <div className={style.simplebarWrapper}>\n          <div className={style.simplebarHeightAutoObserverWrapper}>\n            <div className={style.simplebarHeightAutoObserver} />\n          </div>\n          <div className={style.simplebarMask}>\n            <div className={style.simplebarOffset}>\n              {typeof children === \"function\" ? (\n                children({ scrollableNodeRef, contentNodeRef })\n              ) : (\n                <div\n                  {...scrollableNodeProps}\n                  className={`simplebar-content-wrapper${\n                    scrollableNodeProps.className\n                      ? ` ${scrollableNodeProps.className}`\n                      : \"\"\n                  }`}\n                >\n                  <div className={style.simplebarContent}>{children}</div>\n                </div>\n              )}\n            </div>\n          </div>\n          <div className={style.simplebarPlaceholder} />\n        </div>\n        <div className={`${style.simplebarTrack} ${style.simplebarHorizontal}`}>\n          <div className={style.simplebarScrollbar} />\n        </div>\n        <div className={`${style.simplebarTrack} ${style.simplebarVertical}`}>\n          <div\n            className={style.simplebarScrollbar}\n            style={(backgroundColor = orange)}\n          />\n        </div>\n      </div>\n    );\n  }\n);\n\nSimpleBar.displayName = \"SimpleBar\";\n\nSimpleBar.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  scrollableNodeProps: PropTypes.object,\n};\n\nexport default SimpleBar;\n"]},"metadata":{},"sourceType":"module"}