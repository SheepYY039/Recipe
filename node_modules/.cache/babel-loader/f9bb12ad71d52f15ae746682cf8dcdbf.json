{"ast":null,"code":"var _jsxFileName = \"/Users/yeungj12/Projects/FrontEnd/ReactJS/frontend014_recipe/src/App.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Recipe from \"./Recipe\";\nimport Nav from \"./nav/Nav\";\nimport PaginationFooter from \"./Pagination\";\nimport \"./App.css\";\nimport AdvancedSearchModal from \"./Modal\";\nimport Modal from \"react-modal\";\nimport * as yup from \"yup\";\nimport { Formik, Form, useField, FieldArray } from \"formik\";\nimport \"typeface-roboto\";\nimport { TextField, Button, Checkbox, Radio, FormControlLabel, Slider, Grid, RadioGroup } from \"@material-ui/core\";\nimport { green } from \"@material-ui/core/colors\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\"; //use Styles\n\nconst useStyles = makeStyles(theme => ({\n  root: { ...theme.typography.button,\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(1),\n    fontSize: \"1.5em\"\n  },\n  input: {\n    width: 42\n  },\n  sliderRoot: {\n    width: \"50%\"\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 240\n  },\n  popover: {\n    pointerEvents: \"none\"\n  },\n  paper: {\n    padding: theme.spacing(1)\n  }\n})); //Slider Value Text sync function\n\nfunction valuetext(value) {\n  return `${value}`;\n}\n\nconst App = () => {\n  const APP_ID = \"65eff37b\";\n  const APP_KEY = \"013e642e140af7db99a3663be34125e2\";\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [query, setQuery] = useState(\"chicken\");\n  const [isHovered, setIsHovered] = useState(false);\n  const [cards, setCards] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [cardsPerPage, setCardsPerPage] = useState(10);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  let indexOfFirstCard = 0;\n  let indexOfLastCard = cardsPerPage;\n  let inputClass = \"search-bar\";\n  let buttonClass = \"search-button\";\n  const [searchRange, setSearchRange] = useState(`&from=${indexOfFirstCard}&to=${indexOfLastCard}`);\n  let choose = \"\"; //use Effect\n\n  useEffect(() => {\n    async function getRecipes() {\n      // get current posts\n      setLoading(true); // || use await for data that doesn't come back instantly\n\n      const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}${searchRange}`);\n      const data = await response.json();\n      setRecipes(data.hits);\n      setCards(data);\n      console.log(data);\n      setLoading(false);\n    }\n\n    getRecipes();\n  }, [query, searchRange]);\n  const totalCards = 100; //change page\n\n  const paginate = pageNumber => {\n    setCurrentPage(pageNumber);\n    indexOfLastCard = pageNumber * cardsPerPage;\n    indexOfFirstCard = indexOfLastCard - cardsPerPage;\n    setSearchRange(`&from=${indexOfFirstCard}&to=${indexOfLastCard}`);\n  }; //updates search query string when typing\n\n\n  const updateSearch = e => {\n    setSearch(e.target.value);\n  };\n\n  const getSearch = e => {\n    // || prevent page refresh\n    e.preventDefault();\n\n    if (search.trim() !== \"\") {\n      setQuery(search);\n      setSearch(\"\");\n    }\n  }; //search bar hover function\n\n\n  if (isHovered) {\n    inputClass = \"search-bar-expand search-bar\";\n    buttonClass = \"search-button search-button-expand\";\n  } else {\n    inputClass = \"search-bar\";\n    buttonClass = \"search-button\";\n  }\n\n  const classes = useStyles(); //slider change\n\n  const handleSliderChange = (event, newValue) => {\n    setCardsPerPage(newValue);\n  }; //input change next to slider\n\n\n  const handleInputChange = event => {\n    setCardsPerPage(event.target.value === \"\" ? \"\" : Number(event.target.value));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }, \"Showing Results for:\"), /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      textTransform: \"uppercase\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, query), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: getSearch,\n    className: \"search-form\",\n    onMouseEnter: () => setIsHovered(true),\n    onMouseLeave: () => setIsHovered(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: inputClass,\n    value: search,\n    onChange: updateSearch,\n    placeholder: \"Type to search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: buttonClass,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setModalIsOpen(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }\n  }, \"Advanced Search\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"recipes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }\n  }, recipes.map((recipe, count) => /*#__PURE__*/React.createElement(Recipe, {\n    key: recipe.recipe.label + count,\n    title: recipe.recipe.label,\n    calories: recipe.recipe.calories,\n    image: recipe.recipe.image,\n    ingredients: recipe.recipe.ingredients,\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"footer\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PaginationFooter, {\n    cardsPerPage: cardsPerPage,\n    totalCards: totalCards,\n    paginate: paginate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(AdvancedSearchModal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/yeungj12/Projects/FrontEnd/ReactJS/frontend014_recipe/src/App.js"],"names":["React","useEffect","useState","Recipe","Nav","PaginationFooter","AdvancedSearchModal","Modal","yup","Formik","Form","useField","FieldArray","TextField","Button","Checkbox","Radio","FormControlLabel","Slider","Grid","RadioGroup","green","withStyles","makeStyles","FontAwesomeIcon","faSearch","useStyles","theme","root","typography","button","backgroundColor","palette","background","paper","padding","spacing","fontSize","input","width","sliderRoot","formControl","margin","minWidth","popover","pointerEvents","valuetext","value","App","APP_ID","APP_KEY","recipes","setRecipes","search","setSearch","query","setQuery","isHovered","setIsHovered","cards","setCards","loading","setLoading","currentPage","setCurrentPage","cardsPerPage","setCardsPerPage","modalIsOpen","setModalIsOpen","indexOfFirstCard","indexOfLastCard","inputClass","buttonClass","searchRange","setSearchRange","choose","getRecipes","response","fetch","data","json","hits","console","log","totalCards","paginate","pageNumber","updateSearch","e","target","getSearch","preventDefault","trim","classes","handleSliderChange","event","newValue","handleInputChange","Number","textTransform","map","recipe","count","label","calories","image","ingredients"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport Recipe from \"./Recipe\";\nimport Nav from \"./nav/Nav\";\nimport PaginationFooter from \"./Pagination\";\n\nimport \"./App.css\";\n\nimport AdvancedSearchModal from \"./Modal\";\n\nimport Modal from \"react-modal\";\nimport * as yup from \"yup\";\nimport { Formik, Form, useField, FieldArray } from \"formik\";\nimport \"typeface-roboto\";\n\nimport {\n  TextField,\n  Button,\n  Checkbox,\n  Radio,\n  FormControlLabel,\n  Slider,\n  Grid,\n  RadioGroup,\n} from \"@material-ui/core\";\nimport { green } from \"@material-ui/core/colors\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\n\n//use Styles\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    ...theme.typography.button,\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(1),\n    fontSize: \"1.5em\",\n  },\n  input: {\n    width: 42,\n  },\n  sliderRoot: {\n    width: \"50%\",\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 240,\n  },\n  popover: {\n    pointerEvents: \"none\",\n  },\n  paper: {\n    padding: theme.spacing(1),\n  },\n}));\n\n//Slider Value Text sync function\nfunction valuetext(value) {\n  return `${value}`;\n}\n\nconst App = () => {\n  const APP_ID = \"65eff37b\";\n  const APP_KEY = \"013e642e140af7db99a3663be34125e2\";\n\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [query, setQuery] = useState(\"chicken\");\n  const [isHovered, setIsHovered] = useState(false);\n  const [cards, setCards] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [cardsPerPage, setCardsPerPage] = useState(10);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n\n  let indexOfFirstCard = 0;\n  let indexOfLastCard = cardsPerPage;\n  let inputClass = \"search-bar\";\n  let buttonClass = \"search-button\";\n\n  const [searchRange, setSearchRange] = useState(\n    `&from=${indexOfFirstCard}&to=${indexOfLastCard}`\n  );\n  let choose = \"\";\n\n  //use Effect\n  useEffect(() => {\n    async function getRecipes() {\n      // get current posts\n      setLoading(true);\n      // || use await for data that doesn't come back instantly\n      const response = await fetch(\n        `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}${searchRange}`\n      );\n      const data = await response.json();\n      setRecipes(data.hits);\n      setCards(data);\n      console.log(data);\n      setLoading(false);\n    }\n    getRecipes();\n  }, [query, searchRange]);\n\n  const totalCards = 100;\n\n  //change page\n  const paginate = (pageNumber) => {\n    setCurrentPage(pageNumber);\n    indexOfLastCard = pageNumber * cardsPerPage;\n    indexOfFirstCard = indexOfLastCard - cardsPerPage;\n    setSearchRange(`&from=${indexOfFirstCard}&to=${indexOfLastCard}`);\n  };\n\n  //updates search query string when typing\n  const updateSearch = (e) => {\n    setSearch(e.target.value);\n  };\n\n  const getSearch = (e) => {\n    // || prevent page refresh\n    e.preventDefault();\n    if (search.trim() !== \"\") {\n      setQuery(search);\n      setSearch(\"\");\n    }\n  };\n\n  //search bar hover function\n  if (isHovered) {\n    inputClass = \"search-bar-expand search-bar\";\n    buttonClass = \"search-button search-button-expand\";\n  } else {\n    inputClass = \"search-bar\";\n    buttonClass = \"search-button\";\n  }\n\n  const classes = useStyles();\n\n  //slider change\n  const handleSliderChange = (event, newValue) => {\n    setCardsPerPage(newValue);\n  };\n\n  //input change next to slider\n  const handleInputChange = (event) => {\n    setCardsPerPage(\n      event.target.value === \"\" ? \"\" : Number(event.target.value)\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      <Nav />\n      <div className=\"search-box\">\n        <p>Showing Results for:</p>\n        <h4 style={{ textTransform: \"uppercase\" }}>{query}</h4>\n        <form\n          onSubmit={getSearch}\n          className=\"search-form\"\n          onMouseEnter={() => setIsHovered(true)}\n          onMouseLeave={() => setIsHovered(false)}\n        >\n          <input\n            type=\"text\"\n            className={inputClass}\n            value={search}\n            onChange={updateSearch}\n            placeholder=\"Type to search\"\n          />\n          <button className={buttonClass} type=\"submit\">\n            <FontAwesomeIcon icon={faSearch} />\n          </button>\n        </form>\n        <Button onClick={() => setModalIsOpen(true)}>Advanced Search</Button>\n      </div>\n\n      <div className=\"recipes\">\n        {/* // || .map function used for looping arrays */}\n        {recipes.map((recipe, count) => (\n          <Recipe\n            key={recipe.recipe.label + count}\n            title={recipe.recipe.label}\n            calories={recipe.recipe.calories}\n            image={recipe.recipe.image}\n            ingredients={recipe.recipe.ingredients}\n            loading={loading}\n          />\n        ))}\n      </div>\n      <footer>\n        <PaginationFooter\n          cardsPerPage={cardsPerPage}\n          totalCards={totalCards}\n          paginate={paginate}\n        />\n      </footer>\n\n      <AdvancedSearchModal />\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}