{"ast":null,"code":"var _jsxFileName = \"/Users/yeungj12/Projects/FrontEnd/ReactJS/frontend014_recipe/src/Recipe.js\";\nimport React, { useState } from \"react\";\nimport style from \"./recipe.module.css\";\nimport Card from \"./Card\";\nimport ReactCardFlip from \"react-card-flip\";\nimport Flippy, { FrontSide, BackSide } from \"react-flippy\";\n\nconst Recipe = ({\n  title,\n  calories,\n  image,\n  ingredients\n}) => {\n  const [isFlipped, setIsFlipped] = useState(false);\n\n  const handleHover = () => {\n    setIsFlipped(!isFlipped);\n  }; // if (\n  //   e.target.style.transform === \"perspective(600px) rotateY(0deg)\" ||\n  //   e.target.classList.contains(style.front)\n  // ) {\n  //   $(e.target).css(\"transform\", \"perspective(600px) rotateY(-180deg)\");\n  //   $(e.target).css(\"boxShadow\", \"0px 5px 20px rgb(71, 71, 71)\");\n  // } else if (\n  //   e.target.classList.contains(style.back) ||\n  //   e.target.style.transform === \"perspective(600px) rotateY(180deg)\" ||\n  //   e.target.style.transform === \"perspective(600px) rotateY(-180deg)\"\n  // ) {\n  //   e.target.style.transform = \"perspective(600px) rotateY(0deg)\";\n  // }\n\n\n  return (\n    /*#__PURE__*/\n    // <div className={style.recipe}>\n    //   <ReactCardFlip isFlipped={isFlipped} flipDirection=\"horizontal\">\n    //     <Card className={style.front} onMouseOver={handleHover}>\n    //       <div className={style.frontContent}>\n    //         <h1>{title}</h1>\n    //         <img src={image} alt={title} />\n    //       </div>\n    //     </Card>\n    //     <Card className={style.back} onMouseOver={handleHover}>\n    //       <div className={style.recipeContent}>\n    //         <h3>Ingredients</h3>\n    //         <ol>\n    //           {ingredients.map((ingredient, i) => {\n    //             return <li key={[i, \"=\", ingredient]}>{ingredient.text}</li>;\n    //           })}\n    //         </ol>\n    //         <p>\n    //           Calories: <strong>{calories}</strong> cal\n    //         </p>\n    //       </div>\n    //     </Card>\n    //   </ReactCardFlip>\n    // </div>\n    React.createElement(\"div\", {\n      className: style.recipe,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Flippy, {\n      flipOnHover: true // default false\n      ,\n      flipOnClick: false // default false\n      ,\n      flipDirection: \"horizontal\" // horizontal or vertical\n      // ref={(r) => (this.flippy = r)} // to use toggle method like this.flippy.toggle()\n      // if you pass isFlipped prop component will be controlled component.\n      // and other props, which will go to div\n      ,\n      style: {\n        width: \"200px\",\n        height: \"200px\"\n      } /// these are optional style, it is not necessary\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(FrontSide, {\n      className: style.front,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: style.frontContent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, title), /*#__PURE__*/React.createElement(\"img\", {\n      src: image,\n      alt: title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(BackSide, {\n      className: style.back,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: style.recipeContent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, \"Ingredients\"), /*#__PURE__*/React.createElement(\"ol\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, ingredients.map((ingredient, i) => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: [i, \"=\", ingredient],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 24\n        }\n      }, ingredient.text);\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, \"Calories: \", /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }\n    }, calories), \" cal\")))))\n  );\n};\n\nexport default Recipe;","map":{"version":3,"sources":["/Users/yeungj12/Projects/FrontEnd/ReactJS/frontend014_recipe/src/Recipe.js"],"names":["React","useState","style","Card","ReactCardFlip","Flippy","FrontSide","BackSide","Recipe","title","calories","image","ingredients","isFlipped","setIsFlipped","handleHover","recipe","width","height","front","frontContent","back","recipeContent","map","ingredient","i","text"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,MAAP,IAAiBC,SAAjB,EAA4BC,QAA5B,QAA4C,cAA5C;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA,KAAnB;AAA0BC,EAAAA;AAA1B,CAAD,KAA6C;AAC1D,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMc,WAAW,GAAG,MAAM;AACxBD,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACD,GAFD,CAH0D,CAO1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAK,MAAA,SAAS,EAAEX,KAAK,CAACc,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AACE,MAAA,WAAW,EAAE,IADf,CACqB;AADrB;AAEE,MAAA,WAAW,EAAE,KAFf,CAEsB;AAFtB;AAGE,MAAA,aAAa,EAAC,YAHhB,CAG6B;AAC3B;AACA;AACA;AANF;AAOE,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE,OAAT;AAAkBC,QAAAA,MAAM,EAAE;AAA1B,OAPT,CAO8C;AAP9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBASE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAEhB,KAAK,CAACiB,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAEjB,KAAK,CAACkB,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKX,KAAL,CADF,eAEE;AAAK,MAAA,GAAG,EAAEE,KAAV;AAAiB,MAAA,GAAG,EAAEF,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CATF,eAgBE,oBAAC,QAAD;AAAU,MAAA,SAAS,EAAEP,KAAK,CAACmB,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAEnB,KAAK,CAACoB,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGV,WAAW,CAACW,GAAZ,CAAgB,CAACC,UAAD,EAAaC,CAAb,KAAmB;AAClC,0BAAO;AAAI,QAAA,GAAG,EAAE,CAACA,CAAD,EAAI,GAAJ,EAASD,UAAT,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgCA,UAAU,CAACE,IAA3C,CAAP;AACD,KAFA,CADH,CAFF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCACY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAShB,QAAT,CADZ,SAPF,CADF,CAhBF,CADF;AA1BF;AA2DD,CAhFD;;AAkFA,eAAeF,MAAf","sourcesContent":["import React, { useState } from \"react\";\nimport style from \"./recipe.module.css\";\nimport Card from \"./Card\";\nimport ReactCardFlip from \"react-card-flip\";\nimport Flippy, { FrontSide, BackSide } from \"react-flippy\";\n\nconst Recipe = ({ title, calories, image, ingredients }) => {\n  const [isFlipped, setIsFlipped] = useState(false);\n\n  const handleHover = () => {\n    setIsFlipped(!isFlipped);\n  };\n\n  // if (\n  //   e.target.style.transform === \"perspective(600px) rotateY(0deg)\" ||\n  //   e.target.classList.contains(style.front)\n  // ) {\n  //   $(e.target).css(\"transform\", \"perspective(600px) rotateY(-180deg)\");\n  //   $(e.target).css(\"boxShadow\", \"0px 5px 20px rgb(71, 71, 71)\");\n  // } else if (\n  //   e.target.classList.contains(style.back) ||\n  //   e.target.style.transform === \"perspective(600px) rotateY(180deg)\" ||\n  //   e.target.style.transform === \"perspective(600px) rotateY(-180deg)\"\n  // ) {\n  //   e.target.style.transform = \"perspective(600px) rotateY(0deg)\";\n  // }\n\n  return (\n    // <div className={style.recipe}>\n    //   <ReactCardFlip isFlipped={isFlipped} flipDirection=\"horizontal\">\n    //     <Card className={style.front} onMouseOver={handleHover}>\n    //       <div className={style.frontContent}>\n    //         <h1>{title}</h1>\n    //         <img src={image} alt={title} />\n    //       </div>\n    //     </Card>\n\n    //     <Card className={style.back} onMouseOver={handleHover}>\n    //       <div className={style.recipeContent}>\n    //         <h3>Ingredients</h3>\n    //         <ol>\n    //           {ingredients.map((ingredient, i) => {\n    //             return <li key={[i, \"=\", ingredient]}>{ingredient.text}</li>;\n    //           })}\n    //         </ol>\n    //         <p>\n    //           Calories: <strong>{calories}</strong> cal\n    //         </p>\n    //       </div>\n    //     </Card>\n    //   </ReactCardFlip>\n    // </div>\n\n    <div className={style.recipe}>\n      <Flippy\n        flipOnHover={true} // default false\n        flipOnClick={false} // default false\n        flipDirection=\"horizontal\" // horizontal or vertical\n        // ref={(r) => (this.flippy = r)} // to use toggle method like this.flippy.toggle()\n        // if you pass isFlipped prop component will be controlled component.\n        // and other props, which will go to div\n        style={{ width: \"200px\", height: \"200px\" }} /// these are optional style, it is not necessary\n      >\n        <FrontSide className={style.front}>\n          <div className={style.frontContent}>\n            <h1>{title}</h1>\n            <img src={image} alt={title} />\n          </div>\n        </FrontSide>\n\n        <BackSide className={style.back}>\n          <div className={style.recipeContent}>\n            <h3>Ingredients</h3>\n            <ol>\n              {ingredients.map((ingredient, i) => {\n                return <li key={[i, \"=\", ingredient]}>{ingredient.text}</li>;\n              })}\n            </ol>\n            <p>\n              Calories: <strong>{calories}</strong> cal\n            </p>\n          </div>\n        </BackSide>\n      </Flippy>\n    </div>\n  );\n};\n\nexport default Recipe;\n"]},"metadata":{},"sourceType":"module"}