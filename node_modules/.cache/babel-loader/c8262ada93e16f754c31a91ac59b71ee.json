{"ast":null,"code":"var _jsxFileName = \"/Users/yeungj12/Projects/FrontEnd/ReactJS/frontend014_recipe/src/Recipe.js\";\nimport React from \"react\";\nimport style from \"./Recipe.module.css\";\nimport Card from \"./Card\";\nimport CustomScroll from \"react-custom-scroll\";\nimport Flippy, { FrontSide, BackSide } from \"react-flippy\";\n\nconst Recipe = ({\n  title,\n  calories,\n  image,\n  ingredients\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: style.recipe,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Flippy, {\n    className: style.card,\n    flipOnHover: false // default false\n    ,\n    flipOnClick: true // default false\n    ,\n    flipDirection: \"horizontal\" // horizontal or vertical\n    // ref={(r) => (this.flippy = r)} // to use toggle method like this.flippy.toggle()\n    // if you pass isFlipped prop component will be controlled component.\n    // and other props, which will go to div\n    /// these are optional style, it is not necessary\n    // *style={{ zIndex: 0 }}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FrontSide, {\n    className: style.front,\n    elementType: Card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: style.frontContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, title), /*#__PURE__*/React.createElement(\"img\", {\n    src: image,\n    alt: title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(BackSide, {\n    className: `${style.back} ${style.card}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: style.recipeContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, \"Ingredients\"), /*#__PURE__*/React.createElement(\"ol\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, ingredients.map((ingredient, i) => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: [i, \"-\", ingredient],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 24\n      }\n    }, ingredient.text);\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \"Calories: \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 25\n    }\n  }, calories), \" cal\")))));\n};\n\nexport default Recipe;","map":{"version":3,"sources":["/Users/yeungj12/Projects/FrontEnd/ReactJS/frontend014_recipe/src/Recipe.js"],"names":["React","style","Card","CustomScroll","Flippy","FrontSide","BackSide","Recipe","title","calories","image","ingredients","recipe","card","front","frontContent","back","recipeContent","map","ingredient","i","text"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AAEA,OAAOC,MAAP,IAAiBC,SAAjB,EAA4BC,QAA5B,QAA4C,cAA5C;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA,KAAnB;AAA0BC,EAAAA;AAA1B,CAAD,KAA6C;AAC1D,sBACE;AAAK,IAAA,SAAS,EAAEV,KAAK,CAACW,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAEX,KAAK,CAACY,IADnB;AAEE,IAAA,WAAW,EAAE,KAFf,CAEsB;AAFtB;AAGE,IAAA,WAAW,EAAE,IAHf,CAGqB;AAHrB;AAIE,IAAA,aAAa,EAAC,YAJhB,CAI6B;AAC3B;AACA;AACA;AACA;AACA;AATF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAWE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEZ,KAAK,CAACa,KAA5B;AAAmC,IAAA,WAAW,EAAEZ,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAED,KAAK,CAACc,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKP,KAAL,CADF,eAEE;AAAK,IAAA,GAAG,EAAEE,KAAV;AAAiB,IAAA,GAAG,EAAEF,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CAXF,eAkBE,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAG,GAAEP,KAAK,CAACe,IAAK,IAAGf,KAAK,CAACY,IAAK,EAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAEZ,KAAK,CAACgB,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,WAAW,CAACO,GAAZ,CAAgB,CAACC,UAAD,EAAaC,CAAb,KAAmB;AAClC,wBAAO;AAAI,MAAA,GAAG,EAAE,CAACA,CAAD,EAAI,GAAJ,EAASD,UAAT,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCA,UAAU,CAACE,IAA3C,CAAP;AACD,GAFA,CADH,CAFF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCACY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASZ,QAAT,CADZ,SAPF,CADF,CAlBF,CADF,CADF;AAoCD,CArCD;;AAuCA,eAAeF,MAAf","sourcesContent":["import React from \"react\";\nimport style from \"./Recipe.module.css\";\nimport Card from \"./Card\";\nimport CustomScroll from \"react-custom-scroll\";\n\nimport Flippy, { FrontSide, BackSide } from \"react-flippy\";\n\nconst Recipe = ({ title, calories, image, ingredients }) => {\n  return (\n    <div className={style.recipe}>\n      <Flippy\n        className={style.card}\n        flipOnHover={false} // default false\n        flipOnClick={true} // default false\n        flipDirection=\"horizontal\" // horizontal or vertical\n        // ref={(r) => (this.flippy = r)} // to use toggle method like this.flippy.toggle()\n        // if you pass isFlipped prop component will be controlled component.\n        // and other props, which will go to div\n        /// these are optional style, it is not necessary\n        // *style={{ zIndex: 0 }}\n      >\n        <FrontSide className={style.front} elementType={Card}>\n          <div className={style.frontContent}>\n            <h1>{title}</h1>\n            <img src={image} alt={title} />\n          </div>\n        </FrontSide>\n\n        <BackSide className={`${style.back} ${style.card}`}>\n          <div className={style.recipeContent}>\n            <h3>Ingredients</h3>\n            <ol>\n              {ingredients.map((ingredient, i) => {\n                return <li key={[i, \"-\", ingredient]}>{ingredient.text}</li>;\n              })}\n            </ol>\n            <p>\n              Calories: <strong>{calories}</strong> cal\n            </p>\n          </div>\n        </BackSide>\n      </Flippy>\n    </div>\n  );\n};\n\nexport default Recipe;\n"]},"metadata":{},"sourceType":"module"}