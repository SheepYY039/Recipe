{"ast":null,"code":"var _jsxFileName = \"/Users/yeungj12/Projects/FrontEnd/ReactJS/frontend014_recipe/src/App.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Recipe from \"./Recipe\";\nimport Nav from \"./nav/Nav\";\nimport PaginationFooter from \"./Pagination\";\nimport \"./App.css\";\nimport Modal from \"react-modal\";\nimport * as yup from \"yup\";\nimport { Formik, Form, useField, FieldArray } from \"formik\";\nimport \"typeface-roboto\";\nimport { Button } from \"@material-ui/core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\n\nconst App = () => {\n  const APP_ID = \"65eff37b\";\n  const APP_KEY = \"013e642e140af7db99a3663be34125e2\";\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [query, setQuery] = useState(\"chicken\");\n  const [isHovered, setIsHovered] = useState(false);\n  const [cards, setCards] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [cardsPerPage, setCardsPerPage] = useState(10);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const initialValues = {\n    search: \"\",\n    cardsPerPage: `${cardsPerPage}`,\n    dishTypes: [\"Bread\", \"Cereals\", \"Condiments and sauces\", \"Drinks\", \"Desserts\", \"Main course\", \"Pancake\", \"Preps\", \"Preserve\", \"Salad\", \"Sandwiches\", \"Side dish\", \"Soup\", \"Starter\", \"Sweets\"],\n    dietLabels: [{\n      name: \"Balanced\",\n      apiName: \"balanced\",\n      description: \"Protein/Fat/Carb values in 15/35/50 ratio\"\n    }, {\n      name: \"High-Fiber\",\n      apiName: \"high-fiber\",\n      description: \"More than 5g fiber per serving\"\n    }, {\n      name: \"High-Protein\",\n      apiName: \"high-protein\",\n      description: \"More than 50% of total calories from proteins\"\n    }, {\n      name: \"Low-Carb\",\n      apiName: \"low-carb\",\n      description: \"Less than 20% of total calories from carbs\"\n    }, {\n      name: \"Low-Fat\",\n      apiName: \"low-fat\",\n      description: \"Less than 15% of total calories from fat\"\n    }, {\n      name: \"Low-Sodium\",\n      apiName: \"low-sodium\",\n      description: \"Less than 140mg Na per serving\"\n    }],\n    cuisineTypes: [\"American\", \"Asian\", \"British\", \"Caribbean\", \"Central Europe\", \"Chinese\", \"Eastern Europe\", \"French\", \"Indian\", \"Italian\", \"Japanese\", \"Kosher\", \"Mediterranean\", \"Mexican\", \"Middle Eastern\", \"Nordic\", \"South American\", \"South East Asian\"],\n    healthLabels: [{\n      name: \"Alcohol-free\",\n      apiName: \"alcohol-free\",\n      description: \"No alcohol used or contained\"\n    }, {\n      name: \"Celery-free\",\n      apiName: \"celery-free\",\n      description: \"does not contain celery or derivatives\"\n    }, {\n      name: \"Crustacean-free\",\n      apiName: \"crustacean-free\",\n      description: \"does not contain crustaceans (shrimp, lobster etc.) or derivatives\"\n    }, {\n      name: \"Dairy\",\n      apiName: \"dairy-free\",\n      description: \"No dairy; no lactose\"\n    }, {\n      name: \"Eggs\",\n      apiName: \"egg-free\",\n      description: \"No eggs or products containing eggs\"\n    }, {\n      name: \"Fish\",\n      apiName: \"fish-free\",\n      description: \"No fish or fish derivatives\"\n    }, {\n      name: \"FODMAP free\",\n      apiName: \"fodmap-free\",\n      description: \"Does not contain FODMAP foods\"\n    }, {\n      name: \"Gluten\",\n      apiName: \"gluten-free\",\n      description: \"No ingredients containing gluten\"\n    }, {\n      name: \"Keto\",\n      apiName: \"keto-friendly\",\n      description: \"Maximum 7 grams of net carbs per serving\"\n    }, {\n      name: \"Kidney friendly\",\n      apiName: \"kidney-friendly\",\n      description: \"per serving – phosphorus less than 250 mg AND potassium less than 500 mg AND sodium: less than 500 mg\"\n    }, {\n      name: \"Kosher\",\n      apiName: \"kosher\",\n      description: \"contains only ingredients allowed by the kosher diet. However it does not guarantee kosher preparation of the ingredients themselves\"\n    }, {\n      name: \"Low potassium\",\n      apiName: \"low-potassium\",\n      description: \"Less than 150mg per serving\"\n    }, {\n      name: \"Lupine-free\",\n      apiName: \"lupine-free\",\n      description: \"does not contain lupine or derivatives\"\n    }, {\n      name: \"Mustard-free\",\n      apiName: \"mustard-free\",\n      description: \"does not contain mustard or derivatives\"\n    }, {\n      name: \"n/a\",\n      apiName: \"low-fat-abs\",\n      description: \"Less than 3g of fat per serving\"\n    }, {\n      name: \"No oil added\",\n      apiName: \"No-oil-added\",\n      description: \"No oil added except to what is contained in the basic ingredients\"\n    }, {\n      name: \"No-sugar\",\n      apiName: \"low-sugar\",\n      description: \"No simple sugars – glucose, dextrose, galactose, fructose, sucrose, lactose, maltose\"\n    }, {\n      name: \"Paleo\",\n      apiName: \"paleo\",\n      description: \"Excludes what are perceived to be agricultural products; grains, legumes, dairy products, potatoes, refined salt, refined sugar, and processed oils\"\n    }, {\n      name: \"Peanuts\",\n      apiName: \"peanut-free\",\n      description: \"No peanuts or products containing peanuts\"\n    }, {\n      name: \"Pescatarian\",\n      apiName: \"pecatarian\",\n      description: \"Does not contain meat or meat based products, can contain dairy and fish\"\n    }, {\n      name: \"Pork-free\",\n      apiName: \"pork-free\",\n      description: \"does not contain pork or derivatives\"\n    }, {\n      name: \"Red meat-free\",\n      apiName: \"red-meat-free\",\n      description: \"does not contain beef, lamb, pork, duck, goose, game, horse, and other types of red meat or products containing red meat.\"\n    }, {\n      name: \"Sesame-free\",\n      apiName: \"sesame-free\",\n      description: \"does not contain sesame seed or derivatives\"\n    }, {\n      name: \"Shellfish\",\n      apiName: \"shellfish-free\",\n      description: \"No shellfish or shellfish derivatives\"\n    }, {\n      name: \"Soy\",\n      apiName: \"soy-free\",\n      description: \"No soy or products containing soy\"\n    }, {\n      name: \"Sugar-conscious\",\n      apiName: \"sugar-conscious\",\n      description: \"Less than 4g of sugar per serving\"\n    }, {\n      name: \"Tree Nuts\",\n      apiName: \"tree-nut-free\",\n      description: \"No tree nuts or products containing tree nuts\"\n    }, {\n      name: \"Vegan\",\n      apiName: \"vegan\",\n      description: \"No meat, poultry, fish, dairy, eggs or honey\"\n    }, {\n      name: \"Vegetarian\",\n      apiName: \"vegetarian\",\n      description: \"No meat, poultry, or fish\"\n    }, {\n      name: \"Wheat-free\",\n      apiName: \"wheat-free\",\n      description: \"No wheat, can have gluten though\"\n    }]\n  };\n  let indexOfFirstCard = 0;\n  let indexOfLastCard = cardsPerPage;\n  let inputClass = \"search-bar\";\n  let buttonClass = \"search-button\";\n  const [searchRange, setSearchRange] = useState(`&from=${indexOfFirstCard}&to=${indexOfLastCard}`);\n  let choose = \"\";\n\n  const axios = require(\"axios\"); //use Effect\n\n\n  useEffect(() => {\n    async function getRecipes() {\n      // get current posts\n      setLoading(true); // || use await for data that doesn't come back instantly\n      // const response = await fetch(\n      //   `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}${searchRange}`\n      // );\n\n      const response = async () => {\n        console.log(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}${searchRange}`);\n        await axios.get(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}${searchRange}`).then(response => {\n          //console.log(data); works fine\n          const data = response.data;\n          setRecipes(data.hits);\n          setCards(data);\n          console.log(data);\n        }).catch(err => console.log(err));\n      };\n\n      response();\n      setLoading(false);\n    }\n\n    getRecipes();\n  }, [query, searchRange]);\n  const totalCards = 100; //change page\n\n  const paginate = pageNumber => {\n    setCurrentPage(pageNumber);\n    indexOfLastCard = pageNumber * cardsPerPage;\n    indexOfFirstCard = indexOfLastCard - cardsPerPage;\n    setSearchRange(`&from=${indexOfFirstCard}&to=${indexOfLastCard}`);\n  }; //updates search query string when typing\n\n\n  const updateSearch = e => {\n    setSearch(e.target.value);\n  };\n\n  const getSearch = e => {\n    // || prevent page refresh\n    e.preventDefault();\n\n    if (search.trim() !== \"\") {\n      setQuery(search);\n      setSearch(\"\");\n    }\n  }; //search bar hover function\n\n\n  if (isHovered) {\n    inputClass = \"search-bar-expand search-bar\";\n    buttonClass = \"search-button search-button-expand\";\n  } else {\n    inputClass = \"search-bar\";\n    buttonClass = \"search-button\";\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 9\n    }\n  }, \"Showing Results for:\"), /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      textTransform: \"uppercase\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 9\n    }\n  }, query), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: () => getSearch(),\n    className: \"search-form\",\n    onMouseEnter: () => setIsHovered(true),\n    onMouseLeave: () => setIsHovered(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: inputClass,\n    value: search,\n    onChange: () => updateSearch(),\n    placeholder: \"Type to search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: buttonClass,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setModalIsOpen(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 9\n    }\n  }, \"Advanced Search\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"recipes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 7\n    }\n  }, recipes.map((recipe, count) => /*#__PURE__*/React.createElement(Recipe, {\n    key: recipe.recipe.label + count,\n    title: recipe.recipe.label,\n    calories: recipe.recipe.calories,\n    image: recipe.recipe.image,\n    ingredients: recipe.recipe.ingredients,\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"footer\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PaginationFooter, {\n    cardsPerPage: cardsPerPage,\n    totalCards: totalCards,\n    paginate: paginate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: modalIsOpen,\n    onRequestClose: () => setModalIsOpen(false),\n    style: {\n      overlay: {\n        backgroundColor: \"rgba(0,0,0,0.7)\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ModalHeader\",\n    style: {\n      display: \"flex\",\n      marginLeft: \"7%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 11\n    }\n  }, \"Advanced Search\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ModalContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: initialValues // || validation using yup\n    // validationSchema={validationSchema}\n    ,\n    onSubmit: (data, {\n      setSubmitting,\n      resetForm\n    }) => {\n      setSubmitting(true); // *make async call\n\n      console.log(data.MealType);\n      choose = data;\n      console.log(choose);\n      getAdvancedSearch();\n      console.log(\"Submit: \", data);\n      setSubmitting(false);\n      resetForm(true);\n    },\n    className: \"advanced-search-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 11\n    }\n  }, ({\n    values,\n    errors,\n    isSubmitting,\n    handleBlur\n  }) => /*#__PURE__*/React.createElement(Form, {\n    style: {\n      margin: \"10px\",\n      marginLeft: \"7%\",\n      marginRight: \"7%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"70%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 19\n    }\n  }, \"Search: \"), /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    id: \"search\",\n    label: \"Search\",\n    type: \"search\",\n    placeholder: \"Chicken\",\n    fullWidth: true,\n    onChange: updateSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 17\n    }\n  }, \"Items per Page: \"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Slider, {\n    name: \"cardsPerPage\",\n    value: typeof cardsPerPage === \"number\" ? cardsPerPage : 0,\n    onChange: handleSliderChange // defaultValue={cardsPerPage}\n    ,\n    getAriaValueText: valuetext,\n    \"aria-labelledby\": \"item-slider\",\n    valueLabelDisplay: \"auto\",\n    step: 1,\n    min: 10,\n    max: 50,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextField // defaultValue={cardsPerPage}\n  , {\n    name: \"cardsPerPage\",\n    value: cardsPerPage,\n    onChange: handleInputChange,\n    onBlur: handleBlur,\n    type: \"number\",\n    inputProps: {\n      step: 1,\n      min: 10,\n      max: 50,\n      \"aria-labelledby\": \"item-slider\"\n    },\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 17\n    }\n  }, \"Meal Type: \"), /*#__PURE__*/React.createElement(RadioGroup, {\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(MyRadio, {\n    name: \"MealType\",\n    type: \"radio\",\n    value: \"Breakfast\",\n    as: Radio,\n    label: \"Breakfast\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(MyRadio, {\n    name: \"MealType\",\n    type: \"radio\",\n    value: \"Lunch\",\n    as: Radio,\n    label: \"Lunch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(MyRadio, {\n    name: \"MealType\",\n    type: \"radio\",\n    value: \"Dinner\",\n    as: Radio,\n    label: \"Dinner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(MyRadio, {\n    name: \"MealType\",\n    type: \"radio\",\n    value: \"Snack\",\n    as: Radio,\n    label: \"Snack\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 17\n    }\n  }, \"Dish Type: \"), /*#__PURE__*/React.createElement(FieldArray, {\n    name: \"Dish Type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 17\n    }\n  }, arrayHelpers => values.dishTypes.map(dishType => {\n    return /*#__PURE__*/React.createElement(MyCheckBox, {\n      key: dishType,\n      name: \"dishType\",\n      type: \"checkbox\",\n      value: dishType,\n      as: Checkbox,\n      label: dishType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 520,\n        columnNumber: 25\n      }\n    });\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 17\n    }\n  }, \"Cuisine Type: \"), /*#__PURE__*/React.createElement(FieldArray, {\n    name: \"CuisineTypes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 17\n    }\n  }, arrayHelpers => values.cuisineTypes.map(cuisineType => {\n    return /*#__PURE__*/React.createElement(MyRadio, {\n      key: cuisineType,\n      name: \"cuisineType\",\n      type: \"radio\",\n      value: cuisineType,\n      as: Radio,\n      label: cuisineType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 25\n      }\n    });\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 553,\n      columnNumber: 17\n    }\n  }, \"Diet: \"), /*#__PURE__*/React.createElement(FieldArray, {\n    name: \"Diet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 554,\n      columnNumber: 17\n    }\n  }, arrayHelpers => values.dietLabels.map(dietLabel => {\n    return /*#__PURE__*/React.createElement(MyRadio, {\n      key: dietLabel.apiName,\n      name: \"dietLabel\",\n      type: \"radio\",\n      value: dietLabel.apiName,\n      as: Radio,\n      label: dietLabel.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 25\n      }\n    });\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 572,\n      columnNumber: 17\n    }\n  }, \"Health: \"), /*#__PURE__*/React.createElement(FieldArray, {\n    row: true,\n    name: \"Health\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 573,\n      columnNumber: 17\n    }\n  }, arrayHelpers => values.healthLabels.map(healthLabel => {\n    return /*#__PURE__*/React.createElement(MyCheckBox, {\n      key: healthLabel.apiName,\n      name: \"healthLabel\",\n      type: \"checkbox\",\n      value: healthLabel.apiName,\n      as: Checkbox,\n      label: healthLabel.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 577,\n        columnNumber: 25\n      }\n    });\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 590,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    disabled: isSubmitting,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 591,\n      columnNumber: 19\n    }\n  }, \"Submit\")), /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 595,\n      columnNumber: 17\n    }\n  }, JSON.stringify(values, null, 2)), /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 596,\n      columnNumber: 17\n    }\n  }, JSON.stringify(errors, null, 2))))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 601,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setModalIsOpen(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 602,\n      columnNumber: 11\n    }\n  }, \"Close\"))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/yeungj12/Projects/FrontEnd/ReactJS/frontend014_recipe/src/App.js"],"names":["React","useEffect","useState","Recipe","Nav","PaginationFooter","Modal","yup","Formik","Form","useField","FieldArray","Button","FontAwesomeIcon","faSearch","App","APP_ID","APP_KEY","recipes","setRecipes","search","setSearch","query","setQuery","isHovered","setIsHovered","cards","setCards","loading","setLoading","currentPage","setCurrentPage","cardsPerPage","setCardsPerPage","modalIsOpen","setModalIsOpen","initialValues","dishTypes","dietLabels","name","apiName","description","cuisineTypes","healthLabels","indexOfFirstCard","indexOfLastCard","inputClass","buttonClass","searchRange","setSearchRange","choose","axios","require","getRecipes","response","console","log","get","then","data","hits","catch","err","totalCards","paginate","pageNumber","updateSearch","e","target","value","getSearch","preventDefault","trim","textTransform","map","recipe","count","label","calories","image","ingredients","overlay","backgroundColor","display","marginLeft","setSubmitting","resetForm","MealType","getAdvancedSearch","values","errors","isSubmitting","handleBlur","margin","marginRight","width","classes","root","handleSliderChange","valuetext","handleInputChange","step","min","max","shrink","Radio","arrayHelpers","dishType","Checkbox","cuisineType","dietLabel","healthLabel","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport Recipe from \"./Recipe\";\nimport Nav from \"./nav/Nav\";\nimport PaginationFooter from \"./Pagination\";\n\nimport \"./App.css\";\n\nimport Modal from \"react-modal\";\nimport * as yup from \"yup\";\nimport { Formik, Form, useField, FieldArray } from \"formik\";\nimport \"typeface-roboto\";\n\nimport { Button } from \"@material-ui/core\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\n\nconst App = () => {\n  const APP_ID = \"65eff37b\";\n  const APP_KEY = \"013e642e140af7db99a3663be34125e2\";\n\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [query, setQuery] = useState(\"chicken\");\n  const [isHovered, setIsHovered] = useState(false);\n  const [cards, setCards] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [cardsPerPage, setCardsPerPage] = useState(10);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const initialValues = {\n    search: \"\",\n    cardsPerPage: `${cardsPerPage}`,\n    dishTypes: [\n      \"Bread\",\n      \"Cereals\",\n      \"Condiments and sauces\",\n      \"Drinks\",\n      \"Desserts\",\n      \"Main course\",\n      \"Pancake\",\n      \"Preps\",\n      \"Preserve\",\n      \"Salad\",\n      \"Sandwiches\",\n      \"Side dish\",\n      \"Soup\",\n      \"Starter\",\n      \"Sweets\",\n    ],\n    dietLabels: [\n      {\n        name: \"Balanced\",\n        apiName: \"balanced\",\n        description: \"Protein/Fat/Carb values in 15/35/50 ratio\",\n      },\n      {\n        name: \"High-Fiber\",\n        apiName: \"high-fiber\",\n        description: \"More than 5g fiber per serving\",\n      },\n      {\n        name: \"High-Protein\",\n        apiName: \"high-protein\",\n        description: \"More than 50% of total calories from proteins\",\n      },\n      {\n        name: \"Low-Carb\",\n        apiName: \"low-carb\",\n        description: \"Less than 20% of total calories from carbs\",\n      },\n      {\n        name: \"Low-Fat\",\n        apiName: \"low-fat\",\n        description: \"Less than 15% of total calories from fat\",\n      },\n      {\n        name: \"Low-Sodium\",\n        apiName: \"low-sodium\",\n        description: \"Less than 140mg Na per serving\",\n      },\n    ],\n    cuisineTypes: [\n      \"American\",\n      \"Asian\",\n      \"British\",\n      \"Caribbean\",\n      \"Central Europe\",\n      \"Chinese\",\n      \"Eastern Europe\",\n      \"French\",\n      \"Indian\",\n      \"Italian\",\n      \"Japanese\",\n      \"Kosher\",\n      \"Mediterranean\",\n      \"Mexican\",\n      \"Middle Eastern\",\n      \"Nordic\",\n      \"South American\",\n      \"South East Asian\",\n    ],\n    healthLabels: [\n      {\n        name: \"Alcohol-free\",\n        apiName: \"alcohol-free\",\n        description: \"No alcohol used or contained\",\n      },\n      {\n        name: \"Celery-free\",\n        apiName: \"celery-free\",\n        description: \"does not contain celery or derivatives\",\n      },\n      {\n        name: \"Crustacean-free\",\n        apiName: \"crustacean-free\",\n        description:\n          \"does not contain crustaceans (shrimp, lobster etc.) or derivatives\",\n      },\n      {\n        name: \"Dairy\",\n        apiName: \"dairy-free\",\n        description: \"No dairy; no lactose\",\n      },\n      {\n        name: \"Eggs\",\n        apiName: \"egg-free\",\n        description: \"No eggs or products containing eggs\",\n      },\n      {\n        name: \"Fish\",\n        apiName: \"fish-free\",\n        description: \"No fish or fish derivatives\",\n      },\n      {\n        name: \"FODMAP free\",\n        apiName: \"fodmap-free\",\n        description: \"Does not contain FODMAP foods\",\n      },\n      {\n        name: \"Gluten\",\n        apiName: \"gluten-free\",\n        description: \"No ingredients containing gluten\",\n      },\n      {\n        name: \"Keto\",\n        apiName: \"keto-friendly\",\n        description: \"Maximum 7 grams of net carbs per serving\",\n      },\n      {\n        name: \"Kidney friendly\",\n        apiName: \"kidney-friendly\",\n        description:\n          \"per serving – phosphorus less than 250 mg AND potassium less than 500 mg AND sodium: less than 500 mg\",\n      },\n      {\n        name: \"Kosher\",\n        apiName: \"kosher\",\n        description:\n          \"contains only ingredients allowed by the kosher diet. However it does not guarantee kosher preparation of the ingredients themselves\",\n      },\n      {\n        name: \"Low potassium\",\n        apiName: \"low-potassium\",\n        description: \"Less than 150mg per serving\",\n      },\n      {\n        name: \"Lupine-free\",\n        apiName: \"lupine-free\",\n        description: \"does not contain lupine or derivatives\",\n      },\n      {\n        name: \"Mustard-free\",\n        apiName: \"mustard-free\",\n        description: \"does not contain mustard or derivatives\",\n      },\n      {\n        name: \"n/a\",\n        apiName: \"low-fat-abs\",\n        description: \"Less than 3g of fat per serving\",\n      },\n      {\n        name: \"No oil added\",\n        apiName: \"No-oil-added\",\n        description:\n          \"No oil added except to what is contained in the basic ingredients\",\n      },\n      {\n        name: \"No-sugar\",\n        apiName: \"low-sugar\",\n        description:\n          \"No simple sugars – glucose, dextrose, galactose, fructose, sucrose, lactose, maltose\",\n      },\n      {\n        name: \"Paleo\",\n        apiName: \"paleo\",\n        description:\n          \"Excludes what are perceived to be agricultural products; grains, legumes, dairy products, potatoes, refined salt, refined sugar, and processed oils\",\n      },\n      {\n        name: \"Peanuts\",\n        apiName: \"peanut-free\",\n        description: \"No peanuts or products containing peanuts\",\n      },\n      {\n        name: \"Pescatarian\",\n        apiName: \"pecatarian\",\n        description:\n          \"Does not contain meat or meat based products, can contain dairy and fish\",\n      },\n      {\n        name: \"Pork-free\",\n        apiName: \"pork-free\",\n        description: \"does not contain pork or derivatives\",\n      },\n      {\n        name: \"Red meat-free\",\n        apiName: \"red-meat-free\",\n        description:\n          \"does not contain beef, lamb, pork, duck, goose, game, horse, and other types of red meat or products containing red meat.\",\n      },\n      {\n        name: \"Sesame-free\",\n        apiName: \"sesame-free\",\n        description: \"does not contain sesame seed or derivatives\",\n      },\n      {\n        name: \"Shellfish\",\n        apiName: \"shellfish-free\",\n        description: \"No shellfish or shellfish derivatives\",\n      },\n      {\n        name: \"Soy\",\n        apiName: \"soy-free\",\n        description: \"No soy or products containing soy\",\n      },\n      {\n        name: \"Sugar-conscious\",\n        apiName: \"sugar-conscious\",\n        description: \"Less than 4g of sugar per serving\",\n      },\n      {\n        name: \"Tree Nuts\",\n        apiName: \"tree-nut-free\",\n        description: \"No tree nuts or products containing tree nuts\",\n      },\n      {\n        name: \"Vegan\",\n        apiName: \"vegan\",\n        description: \"No meat, poultry, fish, dairy, eggs or honey\",\n      },\n      {\n        name: \"Vegetarian\",\n        apiName: \"vegetarian\",\n        description: \"No meat, poultry, or fish\",\n      },\n      {\n        name: \"Wheat-free\",\n        apiName: \"wheat-free\",\n        description: \"No wheat, can have gluten though\",\n      },\n    ],\n  };\n  let indexOfFirstCard = 0;\n  let indexOfLastCard = cardsPerPage;\n  let inputClass = \"search-bar\";\n  let buttonClass = \"search-button\";\n\n  const [searchRange, setSearchRange] = useState(\n    `&from=${indexOfFirstCard}&to=${indexOfLastCard}`\n  );\n  let choose = \"\";\n\n  const axios = require(\"axios\");\n\n  //use Effect\n  useEffect(() => {\n    async function getRecipes() {\n      // get current posts\n      setLoading(true);\n      // || use await for data that doesn't come back instantly\n      // const response = await fetch(\n      //   `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}${searchRange}`\n      // );\n      const response = async () => {\n        console.log(\n          `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}${searchRange}`\n        );\n\n        await axios\n          .get(\n            `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}${searchRange}`\n          )\n          .then((response) => {\n            //console.log(data); works fine\n            const data = response.data;\n            setRecipes(data.hits);\n            setCards(data);\n            console.log(data);\n          })\n          .catch((err) => console.log(err));\n      };\n      response();\n\n      setLoading(false);\n    }\n    getRecipes();\n  }, [query, searchRange]);\n\n  const totalCards = 100;\n\n  //change page\n  const paginate = (pageNumber) => {\n    setCurrentPage(pageNumber);\n    indexOfLastCard = pageNumber * cardsPerPage;\n    indexOfFirstCard = indexOfLastCard - cardsPerPage;\n    setSearchRange(`&from=${indexOfFirstCard}&to=${indexOfLastCard}`);\n  };\n\n  //updates search query string when typing\n  const updateSearch = (e) => {\n    setSearch(e.target.value);\n  };\n\n  const getSearch = (e) => {\n    // || prevent page refresh\n    e.preventDefault();\n    if (search.trim() !== \"\") {\n      setQuery(search);\n      setSearch(\"\");\n    }\n  };\n\n  //search bar hover function\n  if (isHovered) {\n    inputClass = \"search-bar-expand search-bar\";\n    buttonClass = \"search-button search-button-expand\";\n  } else {\n    inputClass = \"search-bar\";\n    buttonClass = \"search-button\";\n  }\n\n  return (\n    <div className=\"App\">\n      <Nav />\n      <div className=\"search-box\">\n        <p>Showing Results for:</p>\n        <h4 style={{ textTransform: \"uppercase\" }}>{query}</h4>\n        <form\n          onSubmit={() => getSearch()}\n          className=\"search-form\"\n          onMouseEnter={() => setIsHovered(true)}\n          onMouseLeave={() => setIsHovered(false)}\n        >\n          <input\n            type=\"text\"\n            className={inputClass}\n            value={search}\n            onChange={() => updateSearch()}\n            placeholder=\"Type to search\"\n          />\n          <button className={buttonClass} type=\"submit\">\n            <FontAwesomeIcon icon={faSearch} />\n          </button>\n        </form>\n        <Button onClick={() => setModalIsOpen(true)}>Advanced Search</Button>\n      </div>\n\n      <div className=\"recipes\">\n        {/* // || .map function used for looping arrays */}\n        {recipes.map((recipe, count) => (\n          <Recipe\n            key={recipe.recipe.label + count}\n            title={recipe.recipe.label}\n            calories={recipe.recipe.calories}\n            image={recipe.recipe.image}\n            ingredients={recipe.recipe.ingredients}\n            loading={loading}\n          />\n        ))}\n      </div>\n      <footer>\n        <PaginationFooter\n          cardsPerPage={cardsPerPage}\n          totalCards={totalCards}\n          paginate={paginate}\n        />\n      </footer>\n\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={() => setModalIsOpen(false)}\n        style={{\n          overlay: { backgroundColor: \"rgba(0,0,0,0.7)\" },\n        }}\n      >\n        <div\n          className=\"ModalHeader\"\n          style={{ display: \"flex\", marginLeft: \"7%\" }}\n        >\n          <h2>Advanced Search</h2>\n        </div>\n\n        <div className=\"ModalContent\">\n          <Formik\n            initialValues={initialValues}\n            // || validation using yup\n            // validationSchema={validationSchema}\n            onSubmit={(data, { setSubmitting, resetForm }) => {\n              setSubmitting(true);\n              // *make async call\n              console.log(data.MealType);\n              choose = data;\n              console.log(choose);\n              getAdvancedSearch();\n              console.log(\"Submit: \", data);\n              setSubmitting(false);\n              resetForm(true);\n            }}\n            className=\"advanced-search-form\"\n          >\n            {({ values, errors, isSubmitting, handleBlur }) => (\n              <Form\n                style={{ margin: \"10px\", marginLeft: \"7%\", marginRight: \"7%\" }}\n              >\n                <div style={{ width: \"70%\" }}>\n                  <div className={classes.root}>{\"Search: \"}</div>\n                  <TextField\n                    variant=\"outlined\"\n                    id=\"search\"\n                    label=\"Search\"\n                    type=\"search\"\n                    placeholder=\"Chicken\"\n                    fullWidth\n                    onChange={updateSearch}\n                  />\n                </div>\n\n                <div className={classes.root}>{\"Items per Page: \"}</div>\n\n                <Grid container spacing={2} alignItems=\"center\">\n                  <Grid item xs={9}>\n                    <Slider\n                      name=\"cardsPerPage\"\n                      value={\n                        typeof cardsPerPage === \"number\" ? cardsPerPage : 0\n                      }\n                      onChange={handleSliderChange}\n                      // defaultValue={cardsPerPage}\n                      getAriaValueText={valuetext}\n                      aria-labelledby=\"item-slider\"\n                      valueLabelDisplay=\"auto\"\n                      step={1}\n                      min={10}\n                      max={50}\n                    />\n                  </Grid>\n                  <Grid item xs={3}>\n                    <TextField\n                      // defaultValue={cardsPerPage}\n                      name=\"cardsPerPage\"\n                      value={cardsPerPage}\n                      onChange={handleInputChange}\n                      onBlur={handleBlur}\n                      type=\"number\"\n                      inputProps={{\n                        step: 1,\n                        min: 10,\n                        max: 50,\n                        \"aria-labelledby\": \"item-slider\",\n                      }}\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                    />\n                  </Grid>\n                </Grid>\n\n                {/* Radio Button starts here */}\n                <div className={classes.root}>{\"Meal Type: \"}</div>\n                <RadioGroup row>\n                  <MyRadio\n                    name=\"MealType\"\n                    type=\"radio\"\n                    value=\"Breakfast\"\n                    as={Radio}\n                    label=\"Breakfast\"\n                  />\n                  <MyRadio\n                    name=\"MealType\"\n                    type=\"radio\"\n                    value=\"Lunch\"\n                    as={Radio}\n                    label=\"Lunch\"\n                  />\n                  <MyRadio\n                    name=\"MealType\"\n                    type=\"radio\"\n                    value=\"Dinner\"\n                    as={Radio}\n                    label=\"Dinner\"\n                  />\n                  <MyRadio\n                    name=\"MealType\"\n                    type=\"radio\"\n                    value=\"Snack\"\n                    as={Radio}\n                    label=\"Snack\"\n                  />\n                </RadioGroup>\n\n                {/* Radio Buttons ends here */}\n                {/* multiple checkboxes starts here */}\n                <div className={classes.root}>{\"Dish Type: \"}</div>\n                <FieldArray name=\"Dish Type\">\n                  {(arrayHelpers) =>\n                    values.dishTypes.map((dishType) => {\n                      return (\n                        <MyCheckBox\n                          key={dishType}\n                          name=\"dishType\"\n                          type=\"checkbox\"\n                          value={dishType}\n                          as={Checkbox}\n                          label={dishType}\n                        />\n                      );\n                    })\n                  }\n                </FieldArray>\n                {/* multiple checkboxes ends here */}\n\n                <div className={classes.root}>{\"Cuisine Type: \"}</div>\n                <FieldArray name=\"CuisineTypes\">\n                  {(arrayHelpers) =>\n                    values.cuisineTypes.map((cuisineType) => {\n                      return (\n                        <MyRadio\n                          key={cuisineType}\n                          name=\"cuisineType\"\n                          type=\"radio\"\n                          value={cuisineType}\n                          as={Radio}\n                          label={cuisineType}\n                        />\n                      );\n                    })\n                  }\n                </FieldArray>\n\n                {/* Radio Button starts here */}\n                <div className={classes.root}>{\"Diet: \"}</div>\n                <FieldArray name=\"Diet\">\n                  {(arrayHelpers) =>\n                    values.dietLabels.map((dietLabel) => {\n                      return (\n                        <MyRadio\n                          key={dietLabel.apiName}\n                          name=\"dietLabel\"\n                          type=\"radio\"\n                          value={dietLabel.apiName}\n                          as={Radio}\n                          label={dietLabel.name}\n                        />\n                      );\n                    })\n                  }\n                </FieldArray>\n                {/* Radio Buttons ends here */}\n\n                <div className={classes.root}>{\"Health: \"}</div>\n                <FieldArray row name=\"Health\">\n                  {(arrayHelpers) =>\n                    values.healthLabels.map((healthLabel) => {\n                      return (\n                        <MyCheckBox\n                          key={healthLabel.apiName}\n                          name=\"healthLabel\"\n                          type=\"checkbox\"\n                          value={healthLabel.apiName}\n                          as={Checkbox}\n                          label={healthLabel.name}\n                        />\n                      );\n                    })\n                  }\n                </FieldArray>\n\n                <div>\n                  <Button disabled={isSubmitting} type=\"submit\">\n                    Submit\n                  </Button>\n                </div>\n                <pre>{JSON.stringify(values, null, 2)}</pre>\n                <pre>{JSON.stringify(errors, null, 2)}</pre>\n              </Form>\n            )}\n          </Formik>\n        </div>\n        <div>\n          <Button onClick={() => setModalIsOpen(false)}>Close</Button>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}