{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\FrontEnd\\\\ReactJS\\\\frontend014-recipe\\\\src\\\\App.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Recipe from \"./Recipe\";\nimport Nav from \"./Nav\";\nimport PaginationFooter from \"./Pagination\";\nimport \"./App.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\n\nconst App = () => {\n  const APP_ID = \"65eff37b\";\n  const APP_KEY = \"013e642e140af7db99a3663be34125e2\";\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [query, setQuery] = useState(\"chicken\");\n  const [isHovered, setIsHovered] = useState(false);\n  const [cards, setCards] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [cardsPerPage, setCardsPerPage] = useState(20);\n  let inputClass = \"search-bar\";\n  let buttonClass = \"search-button\";\n  const indexOfLastCard = currentPage * cardsPerPage;\n  console.log(indexOfLastCard);\n  const indexOfFirstCard = indexOfLastCard - cardsPerPage;\n  console.log(indexOfFirstCard);\n  useEffect(() => {\n    // const fetchCards = async () => {\n    //   setLoading(true);\n    //   const response = await fetch(\n    //     `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}&from=10&to=20`\n    //   );\n    //   const resonse = await axios.get(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}&from=10&to=20`)\n    //   setCards(response.data);\n    //   setLoading(false);\n    // };\n    // fetchCards();\n    async function getRecipes() {\n      // get current posts\n      setLoading(true); // || use await for data that doesn't come back instantly\n\n      const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}&from=${indexOfFirstCard}&to=${indexOfLastCard}`);\n      const data = await response.json();\n      setRecipes(data.hits);\n      setCards(data);\n      console.log(data);\n      setLoading(false);\n    }\n\n    getRecipes();\n  }, [query, cardsPerPage, currentPage, indexOfFirstCard, indexOfLastCard]);\n  console.log(cards);\n  const totalCards = cards.count; //change page\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  console.log(currentPage);\n\n  const updateSearch = e => {\n    setSearch(e.target.value);\n  };\n\n  const getSearch = e => {\n    // || prevent page refresh\n    e.preventDefault();\n    setQuery(search);\n    setSearch(\"\");\n  };\n\n  if (isHovered) {\n    inputClass = \"search-bar-expand search-bar\";\n    buttonClass = \"search-button search-button-expand\";\n  } else {\n    inputClass = \"search-bar\";\n    buttonClass = \"search-button\";\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: getSearch,\n    className: \"search-form\",\n    onMouseEnter: () => setIsHovered(true),\n    onMouseLeave: () => setIsHovered(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: inputClass,\n    value: search,\n    onChange: updateSearch,\n    placeholder: \"Type to search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: buttonClass,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"recipes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, recipes.map(recipe => /*#__PURE__*/React.createElement(Recipe, {\n    key: recipe.recipe.label + recipe.recipe.calories,\n    title: recipe.recipe.label,\n    calories: recipe.recipe.calories,\n    image: recipe.recipe.image,\n    ingredients: recipe.recipe.ingredients,\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(PaginationFooter, {\n    cardsPerPage: cardsPerPage,\n    totalCards: totalCards,\n    paginate: paginate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["E:/Projects/FrontEnd/ReactJS/frontend014-recipe/src/App.js"],"names":["React","useEffect","useState","Recipe","Nav","PaginationFooter","FontAwesomeIcon","faSearch","App","APP_ID","APP_KEY","recipes","setRecipes","search","setSearch","query","setQuery","isHovered","setIsHovered","cards","setCards","loading","setLoading","currentPage","setCurrentPage","cardsPerPage","setCardsPerPage","inputClass","buttonClass","indexOfLastCard","console","log","indexOfFirstCard","getRecipes","response","fetch","data","json","hits","totalCards","count","paginate","pageNumber","updateSearch","e","target","value","getSearch","preventDefault","map","recipe","label","calories","image","ingredients"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nimport Recipe from \"./Recipe\";\r\nimport Nav from \"./Nav\";\r\nimport PaginationFooter from \"./Pagination\";\r\n\r\nimport \"./App.css\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst App = () => {\r\n  const APP_ID = \"65eff37b\";\r\n  const APP_KEY = \"013e642e140af7db99a3663be34125e2\";\r\n\r\n  const [recipes, setRecipes] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [query, setQuery] = useState(\"chicken\");\r\n  const [isHovered, setIsHovered] = useState(false);\r\n  const [cards, setCards] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [cardsPerPage, setCardsPerPage] = useState(20);\r\n\r\n  let inputClass = \"search-bar\";\r\n  let buttonClass = \"search-button\";\r\n\r\n  const indexOfLastCard = currentPage * cardsPerPage;\r\n  console.log(indexOfLastCard);\r\n\r\n  const indexOfFirstCard = indexOfLastCard - cardsPerPage;\r\n  console.log(indexOfFirstCard);\r\n\r\n  useEffect(() => {\r\n    // const fetchCards = async () => {\r\n    //   setLoading(true);\r\n    //   const response = await fetch(\r\n    //     `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}&from=10&to=20`\r\n    //   );\r\n    //   const resonse = await axios.get(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}&from=10&to=20`)\r\n    //   setCards(response.data);\r\n    //   setLoading(false);\r\n    // };\r\n\r\n    // fetchCards();\r\n    async function getRecipes() {\r\n      // get current posts\r\n\r\n      setLoading(true);\r\n\r\n      // || use await for data that doesn't come back instantly\r\n      const response = await fetch(\r\n        `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}&from=${indexOfFirstCard}&to=${indexOfLastCard}`\r\n      );\r\n      const data = await response.json();\r\n      setRecipes(data.hits);\r\n      setCards(data);\r\n      console.log(data);\r\n      setLoading(false);\r\n    }\r\n    getRecipes();\r\n  }, [query, cardsPerPage, currentPage, indexOfFirstCard, indexOfLastCard]);\r\n\r\n  console.log(cards);\r\n\r\n  const totalCards = cards.count;\r\n\r\n  //change page\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n  console.log(currentPage);\r\n\r\n  const updateSearch = (e) => {\r\n    setSearch(e.target.value);\r\n  };\r\n\r\n  const getSearch = (e) => {\r\n    // || prevent page refresh\r\n    e.preventDefault();\r\n    setQuery(search);\r\n    setSearch(\"\");\r\n  };\r\n\r\n  if (isHovered) {\r\n    inputClass = \"search-bar-expand search-bar\";\r\n    buttonClass = \"search-button search-button-expand\";\r\n  } else {\r\n    inputClass = \"search-bar\";\r\n    buttonClass = \"search-button\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Nav />\r\n      <div className=\"search-box\">\r\n        <form\r\n          onSubmit={getSearch}\r\n          className=\"search-form\"\r\n          onMouseEnter={() => setIsHovered(true)}\r\n          onMouseLeave={() => setIsHovered(false)}\r\n        >\r\n          <input\r\n            type=\"text\"\r\n            className={inputClass}\r\n            value={search}\r\n            onChange={updateSearch}\r\n            placeholder=\"Type to search\"\r\n          />\r\n          <button className={buttonClass} type=\"submit\">\r\n            <FontAwesomeIcon icon={faSearch} />\r\n          </button>\r\n        </form>\r\n      </div>\r\n\r\n      <div className=\"recipes\">\r\n        {/* // || .map function used for looping arrays */}\r\n        {recipes.map((recipe) => (\r\n          <Recipe\r\n            key={recipe.recipe.label + recipe.recipe.calories}\r\n            title={recipe.recipe.label}\r\n            calories={recipe.recipe.calories}\r\n            image={recipe.recipe.image}\r\n            ingredients={recipe.recipe.ingredients}\r\n            loading={loading}\r\n          />\r\n        ))}\r\n      </div>\r\n      <PaginationFooter\r\n        cardsPerPage={cardsPerPage}\r\n        totalCards={totalCards}\r\n        paginate={paginate}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}