{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\FrontEnd\\\\ReactJS\\\\frontend014-recipe\\\\src\\\\App.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Recipe from \"./Recipe\";\nimport Nav from \"./Nav\"; // import CommentList from \"./Pagination.js\";\n\nimport \"./App.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\n\nconst App = () => {\n  const APP_ID = \"65eff37b\";\n  const APP_KEY = \"013e642e140af7db99a3663be34125e2\";\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [query, setQuery] = useState(\"chicken\");\n  const [isHovered, setIsHovered] = useState(false);\n  const [cards, setCards] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [cardsPerPage, setCardsPerPage] = useState(20);\n  let inputClass = \"search-bar\";\n  let buttonClass = \"search-button\";\n  useEffect(() => {\n    // const fetchCards = async () => {\n    //   setLoading(true);\n    //   const response = await fetch(\n    //     `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}&from=10&to=20`\n    //   );\n    //   const resonse = await axios.get(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}&from=10&to=20`)\n    //   setCards(response.data);\n    //   setLoading(false);\n    // };\n    // fetchCards();\n    async function getRecipes() {\n      setLoading(true); // || use await for data that doesn't come back instantly\n\n      const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}&from=10&to=20`);\n      const data = await response.json();\n      setRecipes(data.hits);\n      console.log(data);\n      setLoading(false);\n    }\n\n    getRecipes();\n  }, [query]);\n  console.log(cards);\n\n  const updateSearch = e => {\n    setSearch(e.target.value);\n  };\n\n  const getSearch = e => {\n    // || prevent page refresh\n    e.preventDefault();\n    setQuery(search);\n    setSearch(\"\");\n  };\n\n  if (isHovered) {\n    inputClass = \"search-bar-expand search-bar\";\n    buttonClass = \"search-button search-button-expand\";\n  } else {\n    inputClass = \"search-bar\";\n    buttonClass = \"search-button\";\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: getSearch,\n    className: \"search-form\",\n    onMouseEnter: () => setIsHovered(true),\n    onMouseLeave: () => setIsHovered(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: inputClass,\n    value: search,\n    onChange: updateSearch,\n    placeholder: \"Type to search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: buttonClass,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"recipes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, recipes.map(recipe => /*#__PURE__*/React.createElement(Recipe, {\n    key: recipe.recipe.label,\n    title: recipe.recipe.label,\n    calories: recipe.recipe.calories,\n    image: recipe.recipe.image,\n    ingredients: recipe.recipe.ingredients,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["E:/Projects/FrontEnd/ReactJS/frontend014-recipe/src/App.js"],"names":["React","useEffect","useState","Recipe","Nav","FontAwesomeIcon","faSearch","App","APP_ID","APP_KEY","recipes","setRecipes","search","setSearch","query","setQuery","isHovered","setIsHovered","cards","setCards","loading","setLoading","currentPage","setCurrentPage","cardsPerPage","setCardsPerPage","inputClass","buttonClass","getRecipes","response","fetch","data","json","hits","console","log","updateSearch","e","target","value","getSearch","preventDefault","map","recipe","label","calories","image","ingredients"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nimport Recipe from \"./Recipe\";\r\nimport Nav from \"./Nav\";\r\n// import CommentList from \"./Pagination.js\";\r\n\r\nimport \"./App.css\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst App = () => {\r\n  const APP_ID = \"65eff37b\";\r\n  const APP_KEY = \"013e642e140af7db99a3663be34125e2\";\r\n\r\n  const [recipes, setRecipes] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [query, setQuery] = useState(\"chicken\");\r\n  const [isHovered, setIsHovered] = useState(false);\r\n  const [cards, setCards] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [cardsPerPage, setCardsPerPage] = useState(20);\r\n\r\n  let inputClass = \"search-bar\";\r\n  let buttonClass = \"search-button\";\r\n\r\n  useEffect(() => {\r\n    // const fetchCards = async () => {\r\n    //   setLoading(true);\r\n    //   const response = await fetch(\r\n    //     `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}&from=10&to=20`\r\n    //   );\r\n    //   const resonse = await axios.get(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}&from=10&to=20`)\r\n    //   setCards(response.data);\r\n    //   setLoading(false);\r\n    // };\r\n\r\n    // fetchCards();\r\n    async function getRecipes() {\r\n      setLoading(true);\r\n      // || use await for data that doesn't come back instantly\r\n      const response = await fetch(\r\n        `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}&from=10&to=20`\r\n      );\r\n      const data = await response.json();\r\n      setRecipes(data.hits);\r\n      console.log(data);\r\n      setLoading(false);\r\n    }\r\n    getRecipes();\r\n  }, [query]);\r\n\r\n  console.log(cards);\r\n\r\n  const updateSearch = (e) => {\r\n    setSearch(e.target.value);\r\n  };\r\n\r\n  const getSearch = (e) => {\r\n    // || prevent page refresh\r\n    e.preventDefault();\r\n    setQuery(search);\r\n    setSearch(\"\");\r\n  };\r\n\r\n  if (isHovered) {\r\n    inputClass = \"search-bar-expand search-bar\";\r\n    buttonClass = \"search-button search-button-expand\";\r\n  } else {\r\n    inputClass = \"search-bar\";\r\n    buttonClass = \"search-button\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Nav />\r\n      <div className=\"search-box\">\r\n        <form\r\n          onSubmit={getSearch}\r\n          className=\"search-form\"\r\n          onMouseEnter={() => setIsHovered(true)}\r\n          onMouseLeave={() => setIsHovered(false)}\r\n        >\r\n          <input\r\n            type=\"text\"\r\n            className={inputClass}\r\n            value={search}\r\n            onChange={updateSearch}\r\n            placeholder=\"Type to search\"\r\n          />\r\n          <button className={buttonClass} type=\"submit\">\r\n            <FontAwesomeIcon icon={faSearch} />\r\n          </button>\r\n        </form>\r\n      </div>\r\n\r\n      <div className=\"recipes\">\r\n        {/* // || .map function used for looping arrays */}\r\n        {recipes.map((recipe) => (\r\n          <Recipe\r\n            key={recipe.recipe.label}\r\n            title={recipe.recipe.label}\r\n            calories={recipe.recipe.calories}\r\n            image={recipe.recipe.image}\r\n            ingredients={recipe.recipe.ingredients}\r\n          />\r\n        ))}\r\n      </div>\r\n      {/* <CommentList\r\n        url={\"http://localhost:3000/comments\"}\r\n        author={\"adele\"}\r\n        perPage={10}\r\n      /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}