{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\FrontEnd\\\\ReactJS\\\\frontend014-recipe\\\\src\\\\Pagination.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport ReactPaginate from \"react-paginate\";\nimport $ from \"jquery\";\nwindow.React = React;\nexport class CommentList extends Component {\n  render() {\n    let commentNodes = this.props.data.map(function (comment, index) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 14\n        }\n      }, comment.comment);\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"project-comments\",\n      className: \"commentList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }, commentNodes));\n  }\n\n}\nCommentList.propTypes = {\n  data: PropTypes.array.isRequired\n};\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handlePageClick = data => {\n      let selected = data.selected;\n      let offset = Math.ceil(selected * this.props.perPage);\n      this.setState({\n        offset: offset\n      }, () => {\n        this.loadCommentsFromServer();\n      });\n    };\n\n    this.state = {\n      data: [],\n      offset: 0\n    };\n  }\n\n  loadCommentsFromServer() {\n    $.ajax({\n      url: this.props.url,\n      data: {\n        limit: this.props.perPage,\n        offset: this.state.offset\n      },\n      dataType: \"json\",\n      type: \"GET\",\n      success: data => {\n        this.setState({\n          data: data.comments,\n          pageCount: Math.ceil(data.meta.total_count / data.meta.limit)\n        });\n      },\n      error: (xhr, status, err) => {\n        console.error(this.props.url, status, err.toString()); // eslint-disable-line\n      }\n    });\n  }\n\n  componentDidMount() {\n    this.loadCommentsFromServer();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"commentBox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CommentList, {\n      data: this.state.data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ReactPaginate, {\n      previousLabel: \"previous\",\n      nextLabel: \"next\",\n      breakLabel: \"...\",\n      breakClassName: \"break-me\",\n      pageCount: this.state.pageCount,\n      marginPagesDisplayed: 2,\n      pageRangeDisplayed: 5,\n      onPageChange: this.handlePageClick,\n      containerClassName: \"pagination\",\n      subContainerClassName: \"pages pagination\",\n      activeClassName: \"active\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\nApp.propTypes = {\n  url: PropTypes.string.isRequired,\n  author: PropTypes.string.isRequired,\n  perPage: PropTypes.number.isRequired\n};\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  url: \"http://localhost:3000/comments\",\n  author: \"adele\",\n  perPage: 10,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 3\n  }\n}), document.getElementById(\"react-paginate\"));","map":{"version":3,"sources":["E:/Projects/FrontEnd/ReactJS/frontend014-recipe/src/Pagination.js"],"names":["React","Component","ReactDOM","PropTypes","ReactPaginate","$","window","CommentList","render","commentNodes","props","data","map","comment","index","propTypes","array","isRequired","App","constructor","handlePageClick","selected","offset","Math","ceil","perPage","setState","loadCommentsFromServer","state","ajax","url","limit","dataType","type","success","comments","pageCount","meta","total_count","error","xhr","status","err","console","toString","componentDidMount","string","author","number","document","getElementById"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport $ from \"jquery\";\r\n\r\nwindow.React = React;\r\n\r\nexport class CommentList extends Component {\r\n  static propTypes = {\r\n    data: PropTypes.array.isRequired,\r\n  };\r\n\r\n  render() {\r\n    let commentNodes = this.props.data.map(function (comment, index) {\r\n      return <div key={index}>{comment.comment}</div>;\r\n    });\r\n\r\n    return (\r\n      <div id=\"project-comments\" className=\"commentList\">\r\n        <ul>{commentNodes}</ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport class App extends Component {\r\n  static propTypes = {\r\n    url: PropTypes.string.isRequired,\r\n    author: PropTypes.string.isRequired,\r\n    perPage: PropTypes.number.isRequired,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      data: [],\r\n      offset: 0,\r\n    };\r\n  }\r\n\r\n  loadCommentsFromServer() {\r\n    $.ajax({\r\n      url: this.props.url,\r\n      data: { limit: this.props.perPage, offset: this.state.offset },\r\n      dataType: \"json\",\r\n      type: \"GET\",\r\n\r\n      success: (data) => {\r\n        this.setState({\r\n          data: data.comments,\r\n          pageCount: Math.ceil(data.meta.total_count / data.meta.limit),\r\n        });\r\n      },\r\n\r\n      error: (xhr, status, err) => {\r\n        console.error(this.props.url, status, err.toString()); // eslint-disable-line\r\n      },\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadCommentsFromServer();\r\n  }\r\n\r\n  handlePageClick = (data) => {\r\n    let selected = data.selected;\r\n    let offset = Math.ceil(selected * this.props.perPage);\r\n\r\n    this.setState({ offset: offset }, () => {\r\n      this.loadCommentsFromServer();\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"commentBox\">\r\n        <CommentList data={this.state.data} />\r\n        <ReactPaginate\r\n          previousLabel={\"previous\"}\r\n          nextLabel={\"next\"}\r\n          breakLabel={\"...\"}\r\n          breakClassName={\"break-me\"}\r\n          pageCount={this.state.pageCount}\r\n          marginPagesDisplayed={2}\r\n          pageRangeDisplayed={5}\r\n          onPageChange={this.handlePageClick}\r\n          containerClassName={\"pagination\"}\r\n          subContainerClassName={\"pages pagination\"}\r\n          activeClassName={\"active\"}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nReactDOM.render(\r\n  <App url={\"http://localhost:3000/comments\"} author={\"adele\"} perPage={10} />,\r\n  document.getElementById(\"react-paginate\")\r\n);\r\n"]},"metadata":{},"sourceType":"module"}