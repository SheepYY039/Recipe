{"ast":null,"code":"var _jsxFileName = \"/Users/yeungj12/Projects/FrontEnd/ReactJS/frontend014_recipe/src/FormikForm.js\";\nimport React from \"react\";\nimport { Formik, Field, Form, useField } from \"formik\";\nimport { TextField, Button, Checkbox, Radio, FormControlLabel } from \"@material-ui/core\";\n\nconst MyRadio = ({\n  label,\n  ...props\n}) => {\n  const [field, meta] = useField(props);\n  return (\n    /*#__PURE__*/\n    // ! <FormControlLabel\n    //   value={field.value}\n    //   onChange={field.onChange}\n    //   control={<Radio />}\n    //   Label={label}\n    //! /> OR\n    React.createElement(FormControlLabel, Object.assign({}, field, {\n      control: /*#__PURE__*/React.createElement(Radio, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 43\n        }\n      }),\n      label: label,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 5\n      }\n    }))\n  );\n};\n\nconst MyTextField = ({\n  placeholder,\n  ...props\n}) => {\n  const [field, meta] = useField(props);\n  const errorText = meta.error && meta.touched ? meta.error : \"\";\n  return /*#__PURE__*/React.createElement(TextField, Object.assign({}, field, {\n    placeholder: placeholder,\n    helperText: errorText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }));\n};\n\nconst FormikForm = () => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      search: \"\",\n      isTall: false,\n      cookies: [],\n      yogurt: \"\"\n    },\n    validate: values => {\n      const errors = {};\n\n      if (values.search.includes(\"bob\")) {\n        errors.search = \"no bob\";\n      }\n\n      return errors;\n    },\n    onSubmit: (data, {\n      setSubmitting,\n      resetForm\n    }) => {\n      setSubmitting(true); // *make async call\n\n      console.log(\"Submit: \", data);\n      setSubmitting(false);\n      resetForm(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, ({\n    values,\n    errors,\n    isSubmitting,\n    handleChange,\n    handleBlur,\n    handleSubmit\n  }) => /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MyTextField, {\n    placeholder: \"Chicken\",\n    name: \"search\",\n    type: \"input\",\n    as: TextField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    placeholder: \"Chicken\",\n    name: \"search\",\n    type: \"input\",\n    as: TextField,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"search\",\n    value: values.search,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    name: \"isTall\",\n    type: \"checkbox\",\n    as: Checkbox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, \"Cookies: \"), /*#__PURE__*/React.createElement(Field, {\n    name: \"cookies\",\n    type: \"checkbox\",\n    value: \"chocolate chip\",\n    as: Checkbox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    name: \"cookies\",\n    type: \"checkbox\",\n    value: \"snicker doodle\",\n    as: Checkbox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    name: \"cookies\",\n    type: \"checkbox\",\n    value: \"sugar\",\n    as: Checkbox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, \"Yogurts: \"), /*#__PURE__*/React.createElement(Field, {\n    name: \"yogurt\",\n    type: \"radio\",\n    value: \"peach\",\n    as: MyRadio,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(MyRadio, {\n    name: \"yogurt\",\n    type: \"radio\",\n    value: \"peach\",\n    label: \"peach\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    name: \"yogurt\",\n    type: \"radio\",\n    value: \"mango\",\n    as: Radio,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    name: \"yogurt\",\n    type: \"radio\",\n    value: \"blueberry\",\n    as: Radio,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    disabled: isSubmitting,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  }, \"Submit\")), /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, JSON.stringify(values, null, 2)), /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, JSON.stringify(errors, null, 2)))));\n};\n\nexport default FormikForm;","map":{"version":3,"sources":["/Users/yeungj12/Projects/FrontEnd/ReactJS/frontend014_recipe/src/FormikForm.js"],"names":["React","Formik","Field","Form","useField","TextField","Button","Checkbox","Radio","FormControlLabel","MyRadio","label","props","field","meta","MyTextField","placeholder","errorText","error","touched","FormikForm","search","isTall","cookies","yogurt","values","errors","includes","data","setSubmitting","resetForm","console","log","isSubmitting","handleChange","handleBlur","handleSubmit","JSON","stringify"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Formik, Field, Form, useField } from \"formik\";\nimport {\n  TextField,\n  Button,\n  Checkbox,\n  Radio,\n  FormControlLabel,\n} from \"@material-ui/core\";\n\nconst MyRadio = ({ label, ...props }) => {\n  const [field, meta] = useField(props);\n  return (\n    // ! <FormControlLabel\n    //   value={field.value}\n    //   onChange={field.onChange}\n    //   control={<Radio />}\n    //   Label={label}\n    //! /> OR\n    <FormControlLabel {...field} control={<Radio />} label={label} />\n  );\n};\n\nconst MyTextField = ({ placeholder, ...props }) => {\n  const [field, meta] = useField(props);\n  const errorText = meta.error && meta.touched ? meta.error : \"\";\n  return (\n    <TextField {...field} placeholder={placeholder} helperText={errorText} />\n  );\n};\n\nconst FormikForm = () => {\n  return (\n    <div>\n      <Formik\n        initialValues={{ search: \"\", isTall: false, cookies: [], yogurt: \"\" }}\n        validate={(values) => {\n          const errors = {};\n\n          if (values.search.includes(\"bob\")) {\n            errors.search = \"no bob\";\n          }\n          return errors;\n        }}\n        onSubmit={(data, { setSubmitting, resetForm }) => {\n          setSubmitting(true);\n          // *make async call\n          console.log(\"Submit: \", data);\n          setSubmitting(false);\n          resetForm(true);\n        }}\n      >\n        {({\n          values,\n          errors,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n        }) => (\n          <Form>\n            <MyTextField\n              placeholder=\"Chicken\"\n              name=\"search\"\n              type=\"input\"\n              as={TextField}\n            />\n            {/* A simpler way of using text field */}\n            <Field\n              placeholder=\"Chicken\"\n              name=\"search\"\n              type=\"input\"\n              as={TextField}\n            />\n            {/* with the same name, the text will sync */}\n            <TextField\n              name=\"search\"\n              value={values.search}\n              onChange={handleChange}\n              onBlur={handleBlur}\n            />\n            {/* Checkbox */}\n            <Field name=\"isTall\" type=\"checkbox\" as={Checkbox}></Field>\n            {/* multiple checkboxes starts here */}\n            <div>Cookies: </div>\n            <Field\n              name=\"cookies\"\n              type=\"checkbox\"\n              value=\"chocolate chip\"\n              as={Checkbox}\n            ></Field>\n            <Field\n              name=\"cookies\"\n              type=\"checkbox\"\n              value=\"snicker doodle\"\n              as={Checkbox}\n            ></Field>\n            <Field\n              name=\"cookies\"\n              type=\"checkbox\"\n              value=\"sugar\"\n              as={Checkbox}\n            ></Field>\n            {/* multiple checkboxes ends here */}\n            {/* Radio Button starts here */}\n            <div>Yogurts: </div>\n            {/* // ! <Field name=\"yogurt\" type=\"radio\" value=\"peach\" as={Radio}></Field> OR */}\n            <Field name=\"yogurt\" type=\"radio\" value=\"peach\" as={MyRadio} />\n            <MyRadio name=\"yogurt\" type=\"radio\" value=\"peach\" label=\"peach\" />\n            <Field name=\"yogurt\" type=\"radio\" value=\"mango\" as={Radio}></Field>\n            <Field\n              name=\"yogurt\"\n              type=\"radio\"\n              value=\"blueberry\"\n              as={Radio}\n            ></Field>\n\n            {/* Radio Buttons ends here */}\n\n            {/* Button */}\n            <div>\n              <Button disabled={isSubmitting} type=\"submit\">\n                Submit\n              </Button>\n            </div>\n            <pre>{JSON.stringify(values, null, 2)}</pre>\n            <pre>{JSON.stringify(errors, null, 2)}</pre>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default FormikForm;\n"]},"metadata":{},"sourceType":"module"}