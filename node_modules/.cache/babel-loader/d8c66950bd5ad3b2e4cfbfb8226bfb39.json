{"ast":null,"code":"var _jsxFileName = \"/Users/yeungj12/Projects/FrontEnd/ReactJS/frontend014_recipe/src/CustomScrollBars.js\";\nimport React, { Component } from \"react\";\nimport { Scrollbars } from \"react-custom-scrollbars\";\nimport \"./ScrollBar.css\";\nexport default class CustomScrollbars extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      top: 0\n    };\n    this.handleScrollFrame = this.handleScrollFrame.bind(this);\n    this.renderView = this.renderView.bind(this);\n  }\n\n  handleScrollFrame(values) {\n    const {\n      top\n    } = values;\n    this.setState({\n      top\n    });\n  }\n\n  renderView({\n    style,\n    ...props\n  }) {\n    const {\n      top\n    } = this.state;\n    const color = top * 255;\n    const customStyle = {\n      backgroundColor: `rgb(${color}, 255, ${color})`\n    };\n    return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, props, {\n      style: { ...style,\n        ...customStyle\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 12\n      }\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Scrollbars, Object.assign({\n      renderView: this.renderView,\n      onScrollFrame: this.handleScrollFrame,\n      renderTrackVertical: ({\n        style,\n        ...props\n      }) => /*#__PURE__*/React.createElement(\"div\", Object.assign({}, props, {\n        style: { ...style,\n          backgroundColor: \"blue\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }\n      }))\n    }, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/yeungj12/Projects/FrontEnd/ReactJS/frontend014_recipe/src/CustomScrollBars.js"],"names":["React","Component","Scrollbars","CustomScrollbars","constructor","props","context","state","top","handleScrollFrame","bind","renderView","values","setState","style","color","customStyle","backgroundColor","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,OAAO,iBAAP;AAEA,eAAe,MAAMC,gBAAN,SAA+BF,SAA/B,CAAyC;AACtDG,EAAAA,WAAW,CAACC,KAAD,EAAQC,OAAR,EAAiB;AAC1B,UAAMD,KAAN,EAAaC,OAAb;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,GAAG,EAAE;AAAP,KAAb;AACA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBD,IAAhB,CAAqB,IAArB,CAAlB;AACD;;AAEDD,EAAAA,iBAAiB,CAACG,MAAD,EAAS;AACxB,UAAM;AAAEJ,MAAAA;AAAF,QAAUI,MAAhB;AACA,SAAKC,QAAL,CAAc;AAAEL,MAAAA;AAAF,KAAd;AACD;;AAEDG,EAAAA,UAAU,CAAC;AAAEG,IAAAA,KAAF;AAAS,OAAGT;AAAZ,GAAD,EAAsB;AAC9B,UAAM;AAAEG,MAAAA;AAAF,QAAU,KAAKD,KAArB;AACA,UAAMQ,KAAK,GAAGP,GAAG,GAAG,GAApB;AACA,UAAMQ,WAAW,GAAG;AAClBC,MAAAA,eAAe,EAAG,OAAMF,KAAM,UAASA,KAAM;AAD3B,KAApB;AAGA,wBAAO,6CAASV,KAAT;AAAgB,MAAA,KAAK,EAAE,EAAE,GAAGS,KAAL;AAAY,WAAGE;AAAf,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD;;AAEDE,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,UAAD;AACE,MAAA,UAAU,EAAE,KAAKP,UADnB;AAEE,MAAA,aAAa,EAAE,KAAKF,iBAFtB;AAGE,MAAA,mBAAmB,EAAE,CAAC;AAAEK,QAAAA,KAAF;AAAS,WAAGT;AAAZ,OAAD,kBACnB,6CAASA,KAAT;AAAgB,QAAA,KAAK,EAAE,EAAE,GAAGS,KAAL;AAAYG,UAAAA,eAAe,EAAE;AAA7B,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ,OAMM,KAAKZ,KANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF;AAUD;;AAjCqD","sourcesContent":["import React, { Component } from \"react\";\nimport { Scrollbars } from \"react-custom-scrollbars\";\nimport \"./ScrollBar.css\";\n\nexport default class CustomScrollbars extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = { top: 0 };\n    this.handleScrollFrame = this.handleScrollFrame.bind(this);\n    this.renderView = this.renderView.bind(this);\n  }\n\n  handleScrollFrame(values) {\n    const { top } = values;\n    this.setState({ top });\n  }\n\n  renderView({ style, ...props }) {\n    const { top } = this.state;\n    const color = top * 255;\n    const customStyle = {\n      backgroundColor: `rgb(${color}, 255, ${color})`,\n    };\n    return <div {...props} style={{ ...style, ...customStyle }} />;\n  }\n\n  render() {\n    return (\n      <Scrollbars\n        renderView={this.renderView}\n        onScrollFrame={this.handleScrollFrame}\n        renderTrackVertical={({ style, ...props }) => (\n          <div {...props} style={{ ...style, backgroundColor: \"blue\" }} />\n        )}\n        {...this.props}\n      />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}