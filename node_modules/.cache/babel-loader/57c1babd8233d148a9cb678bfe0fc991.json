{"ast":null,"code":"var _jsxFileName = \"/Users/yeungj12/Projects/FrontEnd/ReactJS/frontend014_recipe/src/Modal.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Modal from \"react-modal\";\nimport * as yup from \"yup\";\nimport { Formik, Form, useField, FieldArray } from \"formik\";\nimport { TextField, Button, Checkbox, Radio, FormControlLabel, Slider, Grid, RadioGroup } from \"@material-ui/core\";\nimport { green } from \"@material-ui/core/colors\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nModal.setAppElement(\"#root\");\n\nconst AdvancedSearchModal = ({\n  setCardsPerPage,\n  setQuery,\n  setSearch,\n  setModalIsOpen,\n  search,\n  cardsPerPage,\n  indexOfLastCard,\n  currentPage,\n  indexOfFirstCard,\n  setSearchRange,\n  modalIsOpen,\n  updateSearch\n}) => {\n  const [submitValues, setSubmitValues] = useState({});\n  let choose = {}; //MyRadio\n\n  const MyRadio = ({\n    label,\n    ...props\n  }) => {\n    const [field, meta] = useField(props);\n    return /*#__PURE__*/React.createElement(FormControlLabel, Object.assign({}, props, field, {\n      control: /*#__PURE__*/React.createElement(GreenRadio, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 18\n        }\n      }),\n      label: label,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }));\n  }; //Green Radio\n\n\n  const GreenRadio = withStyles({\n    root: {\n      color: green[400],\n      \"&$checked\": {\n        color: green[600]\n      }\n    },\n    checked: {}\n  })(props => /*#__PURE__*/React.createElement(Radio, Object.assign({\n    color: \"default\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }))); //My Checkbox\n\n  const MyCheckBox = ({\n    label,\n    ...props\n  }) => {\n    const [field, meta] = useField(props);\n    return /*#__PURE__*/React.createElement(FormControlLabel, Object.assign({}, field, props, {\n      control: /*#__PURE__*/React.createElement(GreenCheckbox, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 18\n        }\n      }),\n      label: label,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }));\n  }; //Green Checkbox\n\n\n  const GreenCheckbox = withStyles({\n    root: {\n      color: green[400],\n      \"&$checked\": {\n        color: green[600]\n      }\n    },\n    checked: {}\n  })(props => /*#__PURE__*/React.createElement(Checkbox, Object.assign({\n    color: \"default\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }))); //Validation Schema\n\n  const validationSchema = yup.object({\n    // || passing validation to search using yup\n    search: yup.string().required().max(10),\n    pets: yup.array().of(yup.object({\n      name: yup.string().required()\n    }))\n  }); //slider change\n\n  const handleSliderChange = (event, newValue) => {\n    setCardsPerPage(newValue);\n  }; //input change next to slider\n\n\n  const handleInputChange = event => {\n    setCardsPerPage(event.target.value === \"\" ? \"\" : Number(event.target.value));\n  }; //Slider Value Text sync function\n\n\n  function valuetext(value) {\n    return `${value}`;\n  }\n\n  const getAdvancedSearch = (e, data) => {\n    setModalIsOpen(false);\n    let search = ``;\n\n    if (search.trim() !== \"\") {\n      setQuery(search);\n      setSearch(\"\");\n      setModalIsOpen(false);\n    }\n\n    if (cardsPerPage !== 10) {\n      indexOfLastCard = currentPage * cardsPerPage;\n      indexOfFirstCard = indexOfLastCard - cardsPerPage;\n      search += `&from=${indexOfFirstCard}&to=${indexOfLastCard}`;\n    }\n\n    if (data.has(\"MealType\")) {// search += `&mealType=`;\n    }\n\n    setSearchRange(search);\n    setSubmitValues(data);\n    console.log(submitValues);\n  }; //use Styles\n\n\n  const useStyles = makeStyles(theme => ({\n    root: { ...theme.typography.button,\n      backgroundColor: theme.palette.background.paper,\n      padding: theme.spacing(1),\n      fontSize: \"1.5em\"\n    },\n    input: {\n      width: 42\n    },\n    sliderRoot: {\n      width: \"50%\"\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 240\n    },\n    popover: {\n      pointerEvents: \"none\"\n    },\n    paper: {\n      padding: theme.spacing(1)\n    }\n  }));\n  const classes = useStyles();\n  const initialValues = {\n    search: \"\",\n    cardsPerPage: `${cardsPerPage}`,\n    dishTypes: [\"Bread\", \"Cereals\", \"Condiments and sauces\", \"Drinks\", \"Desserts\", \"Main course\", \"Pancake\", \"Preps\", \"Preserve\", \"Salad\", \"Sandwiches\", \"Side dish\", \"Soup\", \"Starter\", \"Sweets\"],\n    dietLabels: [{\n      name: \"Balanced\",\n      apiName: \"balanced\",\n      description: \"Protein/Fat/Carb values in 15/35/50 ratio\"\n    }, {\n      name: \"High-Fiber\",\n      apiName: \"high-fiber\",\n      description: \"More than 5g fiber per serving\"\n    }, {\n      name: \"High-Protein\",\n      apiName: \"high-protein\",\n      description: \"More than 50% of total calories from proteins\"\n    }, {\n      name: \"Low-Carb\",\n      apiName: \"low-carb\",\n      description: \"Less than 20% of total calories from carbs\"\n    }, {\n      name: \"Low-Fat\",\n      apiName: \"low-fat\",\n      description: \"Less than 15% of total calories from fat\"\n    }, {\n      name: \"Low-Sodium\",\n      apiName: \"low-sodium\",\n      description: \"Less than 140mg Na per serving\"\n    }],\n    cuisineTypes: [\"American\", \"Asian\", \"British\", \"Caribbean\", \"Central Europe\", \"Chinese\", \"Eastern Europe\", \"French\", \"Indian\", \"Italian\", \"Japanese\", \"Kosher\", \"Mediterranean\", \"Mexican\", \"Middle Eastern\", \"Nordic\", \"South American\", \"South East Asian\"],\n    healthLabels: [{\n      name: \"Alcohol-free\",\n      apiName: \"alcohol-free\",\n      description: \"No alcohol used or contained\"\n    }, {\n      name: \"Celery-free\",\n      apiName: \"celery-free\",\n      description: \"does not contain celery or derivatives\"\n    }, {\n      name: \"Crustacean-free\",\n      apiName: \"crustacean-free\",\n      description: \"does not contain crustaceans (shrimp, lobster etc.) or derivatives\"\n    }, {\n      name: \"Dairy\",\n      apiName: \"dairy-free\",\n      description: \"No dairy; no lactose\"\n    }, {\n      name: \"Eggs\",\n      apiName: \"egg-free\",\n      description: \"No eggs or products containing eggs\"\n    }, {\n      name: \"Fish\",\n      apiName: \"fish-free\",\n      description: \"No fish or fish derivatives\"\n    }, {\n      name: \"FODMAP free\",\n      apiName: \"fodmap-free\",\n      description: \"Does not contain FODMAP foods\"\n    }, {\n      name: \"Gluten\",\n      apiName: \"gluten-free\",\n      description: \"No ingredients containing gluten\"\n    }, {\n      name: \"Keto\",\n      apiName: \"keto-friendly\",\n      description: \"Maximum 7 grams of net carbs per serving\"\n    }, {\n      name: \"Kidney friendly\",\n      apiName: \"kidney-friendly\",\n      description: \"per serving – phosphorus less than 250 mg AND potassium less than 500 mg AND sodium: less than 500 mg\"\n    }, {\n      name: \"Kosher\",\n      apiName: \"kosher\",\n      description: \"contains only ingredients allowed by the kosher diet. However it does not guarantee kosher preparation of the ingredients themselves\"\n    }, {\n      name: \"Low potassium\",\n      apiName: \"low-potassium\",\n      description: \"Less than 150mg per serving\"\n    }, {\n      name: \"Lupine-free\",\n      apiName: \"lupine-free\",\n      description: \"does not contain lupine or derivatives\"\n    }, {\n      name: \"Mustard-free\",\n      apiName: \"mustard-free\",\n      description: \"does not contain mustard or derivatives\"\n    }, {\n      name: \"n/a\",\n      apiName: \"low-fat-abs\",\n      description: \"Less than 3g of fat per serving\"\n    }, {\n      name: \"No oil added\",\n      apiName: \"No-oil-added\",\n      description: \"No oil added except to what is contained in the basic ingredients\"\n    }, {\n      name: \"No-sugar\",\n      apiName: \"low-sugar\",\n      description: \"No simple sugars – glucose, dextrose, galactose, fructose, sucrose, lactose, maltose\"\n    }, {\n      name: \"Paleo\",\n      apiName: \"paleo\",\n      description: \"Excludes what are perceived to be agricultural products; grains, legumes, dairy products, potatoes, refined salt, refined sugar, and processed oils\"\n    }, {\n      name: \"Peanuts\",\n      apiName: \"peanut-free\",\n      description: \"No peanuts or products containing peanuts\"\n    }, {\n      name: \"Pescatarian\",\n      apiName: \"pecatarian\",\n      description: \"Does not contain meat or meat based products, can contain dairy and fish\"\n    }, {\n      name: \"Pork-free\",\n      apiName: \"pork-free\",\n      description: \"does not contain pork or derivatives\"\n    }, {\n      name: \"Red meat-free\",\n      apiName: \"red-meat-free\",\n      description: \"does not contain beef, lamb, pork, duck, goose, game, horse, and other types of red meat or products containing red meat.\"\n    }, {\n      name: \"Sesame-free\",\n      apiName: \"sesame-free\",\n      description: \"does not contain sesame seed or derivatives\"\n    }, {\n      name: \"Shellfish\",\n      apiName: \"shellfish-free\",\n      description: \"No shellfish or shellfish derivatives\"\n    }, {\n      name: \"Soy\",\n      apiName: \"soy-free\",\n      description: \"No soy or products containing soy\"\n    }, {\n      name: \"Sugar-conscious\",\n      apiName: \"sugar-conscious\",\n      description: \"Less than 4g of sugar per serving\"\n    }, {\n      name: \"Tree Nuts\",\n      apiName: \"tree-nut-free\",\n      description: \"No tree nuts or products containing tree nuts\"\n    }, {\n      name: \"Vegan\",\n      apiName: \"vegan\",\n      description: \"No meat, poultry, fish, dairy, eggs or honey\"\n    }, {\n      name: \"Vegetarian\",\n      apiName: \"vegetarian\",\n      description: \"No meat, poultry, or fish\"\n    }, {\n      name: \"Wheat-free\",\n      apiName: \"wheat-free\",\n      description: \"No wheat, can have gluten though\"\n    }]\n  };\n  return /*#__PURE__*/React.createElement(Modal, {\n    isOpen: modalIsOpen,\n    onRequestClose: () => setModalIsOpen(false),\n    style: {\n      overlay: {\n        backgroundColor: \"rgba(0,0,0,0.7)\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ModalHeader\",\n    style: {\n      display: \"flex\",\n      marginLeft: \"7%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 9\n    }\n  }, \"Advanced Search\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ModalContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: initialValues // || validation using yup\n    // validationSchema={validationSchema}\n    ,\n    onSubmit: (data, {\n      setSubmitting,\n      resetForm\n    }) => {\n      setSubmitting(true);\n      setSubmitValues(data);\n      console.log(data);\n      choose = data; // *make async call\n\n      console.log(data.MealType);\n      getAdvancedSearch(data, choose);\n      console.log(\"Submit: \", data);\n      setSubmitting(false);\n      resetForm(true);\n    },\n    className: \"advanced-search-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 9\n    }\n  }, ({\n    values,\n    errors,\n    isSubmitting,\n    handleBlur\n  }) => /*#__PURE__*/React.createElement(Form, {\n    style: {\n      margin: \"10px\",\n      marginLeft: \"7%\",\n      marginRight: \"7%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"70%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 17\n    }\n  }, \"Search: \"), /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    id: \"search\",\n    label: \"Search\",\n    type: \"search\",\n    placeholder: \"Chicken\",\n    fullWidth: true,\n    onChange: updateSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 15\n    }\n  }, \"Items per Page: \"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Slider, {\n    name: \"cardsPerPage\",\n    value: typeof cardsPerPage === \"number\" ? cardsPerPage : 0,\n    onChange: handleSliderChange // defaultValue={cardsPerPage}\n    ,\n    getAriaValueText: valuetext,\n    \"aria-labelledby\": \"item-slider\",\n    valueLabelDisplay: \"auto\",\n    step: 1,\n    min: 10,\n    max: 50,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField // defaultValue={cardsPerPage}\n  , {\n    name: \"cardsPerPage\",\n    value: cardsPerPage,\n    onChange: handleInputChange,\n    onBlur: handleBlur,\n    type: \"number\",\n    inputProps: {\n      step: 1,\n      min: 10,\n      max: 50,\n      \"aria-labelledby\": \"item-slider\"\n    },\n    InputLabelProps: {\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 15\n    }\n  }, \"Meal Type: \"), /*#__PURE__*/React.createElement(RadioGroup, {\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(MyRadio, {\n    name: \"MealType\",\n    type: \"radio\",\n    value: \"Breakfast\",\n    as: Radio,\n    label: \"Breakfast\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(MyRadio, {\n    name: \"MealType\",\n    type: \"radio\",\n    value: \"Lunch\",\n    as: Radio,\n    label: \"Lunch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(MyRadio, {\n    name: \"MealType\",\n    type: \"radio\",\n    value: \"Dinner\",\n    as: Radio,\n    label: \"Dinner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(MyRadio, {\n    name: \"MealType\",\n    type: \"radio\",\n    value: \"Snack\",\n    as: Radio,\n    label: \"Snack\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 15\n    }\n  }, \"Dish Type: \"), /*#__PURE__*/React.createElement(FieldArray, {\n    name: \"Dish Type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 15\n    }\n  }, arrayHelpers => values.dishTypes.map(dishType => {\n    return /*#__PURE__*/React.createElement(MyCheckBox, {\n      key: dishType,\n      name: \"dishType\",\n      type: \"checkbox\",\n      value: dishType,\n      as: Checkbox,\n      label: dishType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 23\n      }\n    });\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 545,\n      columnNumber: 15\n    }\n  }, \"Cuisine Type: \"), /*#__PURE__*/React.createElement(FieldArray, {\n    name: \"CuisineTypes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 546,\n      columnNumber: 15\n    }\n  }, arrayHelpers => values.cuisineTypes.map(cuisineType => {\n    return /*#__PURE__*/React.createElement(MyRadio, {\n      key: cuisineType,\n      name: \"cuisineType\",\n      type: \"radio\",\n      value: cuisineType,\n      as: Radio,\n      label: cuisineType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 23\n      }\n    });\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 564,\n      columnNumber: 15\n    }\n  }, \"Diet: \"), /*#__PURE__*/React.createElement(FieldArray, {\n    name: \"Diet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 565,\n      columnNumber: 15\n    }\n  }, arrayHelpers => values.dietLabels.map(dietLabel => {\n    return /*#__PURE__*/React.createElement(MyRadio, {\n      key: dietLabel.apiName,\n      name: \"dietLabel\",\n      type: \"radio\",\n      value: dietLabel.apiName,\n      as: Radio,\n      label: dietLabel.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 23\n      }\n    });\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 583,\n      columnNumber: 15\n    }\n  }, \"Health: \"), /*#__PURE__*/React.createElement(FieldArray, {\n    row: true,\n    name: \"Health\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 584,\n      columnNumber: 15\n    }\n  }, arrayHelpers => values.healthLabels.map(healthLabel => {\n    return /*#__PURE__*/React.createElement(MyCheckBox, {\n      key: healthLabel.apiName,\n      name: \"healthLabel\",\n      type: \"checkbox\",\n      value: healthLabel.apiName,\n      as: Checkbox,\n      label: healthLabel.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 588,\n        columnNumber: 23\n      }\n    });\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 602,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    disabled: isSubmitting,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 603,\n      columnNumber: 17\n    }\n  }, \"Submit\")), /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 609,\n      columnNumber: 15\n    }\n  }, JSON.stringify(values, null, 2)), /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 610,\n      columnNumber: 15\n    }\n  }, JSON.stringify(errors, null, 2))))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 615,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setModalIsOpen(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 616,\n      columnNumber: 9\n    }\n  }, \"Close\")));\n};\n\nexport default AdvancedSearchModal;","map":{"version":3,"sources":["/Users/yeungj12/Projects/FrontEnd/ReactJS/frontend014_recipe/src/Modal.js"],"names":["React","useEffect","useState","Modal","yup","Formik","Form","useField","FieldArray","TextField","Button","Checkbox","Radio","FormControlLabel","Slider","Grid","RadioGroup","green","withStyles","makeStyles","setAppElement","AdvancedSearchModal","setCardsPerPage","setQuery","setSearch","setModalIsOpen","search","cardsPerPage","indexOfLastCard","currentPage","indexOfFirstCard","setSearchRange","modalIsOpen","updateSearch","submitValues","setSubmitValues","choose","MyRadio","label","props","field","meta","GreenRadio","root","color","checked","MyCheckBox","GreenCheckbox","validationSchema","object","string","required","max","pets","array","of","name","handleSliderChange","event","newValue","handleInputChange","target","value","Number","valuetext","getAdvancedSearch","e","data","trim","has","console","log","useStyles","theme","typography","button","backgroundColor","palette","background","paper","padding","spacing","fontSize","input","width","sliderRoot","formControl","margin","minWidth","popover","pointerEvents","classes","initialValues","dishTypes","dietLabels","apiName","description","cuisineTypes","healthLabels","overlay","display","marginLeft","setSubmitting","resetForm","MealType","values","errors","isSubmitting","handleBlur","marginRight","step","min","shrink","arrayHelpers","map","dishType","cuisineType","dietLabel","healthLabel","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport Modal from \"react-modal\";\nimport * as yup from \"yup\";\nimport { Formik, Form, useField, FieldArray } from \"formik\";\nimport {\n  TextField,\n  Button,\n  Checkbox,\n  Radio,\n  FormControlLabel,\n  Slider,\n  Grid,\n  RadioGroup,\n} from \"@material-ui/core\";\nimport { green } from \"@material-ui/core/colors\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nModal.setAppElement(\"#root\");\n\nconst AdvancedSearchModal = ({\n  setCardsPerPage,\n  setQuery,\n  setSearch,\n  setModalIsOpen,\n  search,\n  cardsPerPage,\n  indexOfLastCard,\n  currentPage,\n  indexOfFirstCard,\n  setSearchRange,\n  modalIsOpen,\n  updateSearch,\n}) => {\n  const [submitValues, setSubmitValues] = useState({});\n  let choose = {};\n  //MyRadio\n  const MyRadio = ({ label, ...props }) => {\n    const [field, meta] = useField(props);\n    return (\n      <FormControlLabel\n        {...props}\n        {...field}\n        control={<GreenRadio />}\n        label={label}\n      />\n    );\n  };\n\n  //Green Radio\n  const GreenRadio = withStyles({\n    root: {\n      color: green[400],\n      \"&$checked\": {\n        color: green[600],\n      },\n    },\n    checked: {},\n  })((props) => <Radio color=\"default\" {...props} />);\n\n  //My Checkbox\n  const MyCheckBox = ({ label, ...props }) => {\n    const [field, meta] = useField(props);\n\n    return (\n      <FormControlLabel\n        {...field}\n        {...props}\n        control={<GreenCheckbox />}\n        label={label}\n      />\n    );\n  };\n\n  //Green Checkbox\n  const GreenCheckbox = withStyles({\n    root: {\n      color: green[400],\n      \"&$checked\": {\n        color: green[600],\n      },\n    },\n    checked: {},\n  })((props) => <Checkbox color=\"default\" {...props} />);\n\n  //Validation Schema\n  const validationSchema = yup.object({\n    // || passing validation to search using yup\n    search: yup.string().required().max(10),\n    pets: yup.array().of(\n      yup.object({\n        name: yup.string().required(),\n      })\n    ),\n  });\n\n  //slider change\n  const handleSliderChange = (event, newValue) => {\n    setCardsPerPage(newValue);\n  };\n\n  //input change next to slider\n  const handleInputChange = (event) => {\n    setCardsPerPage(\n      event.target.value === \"\" ? \"\" : Number(event.target.value)\n    );\n  };\n\n  //Slider Value Text sync function\n  function valuetext(value) {\n    return `${value}`;\n  }\n\n  const getAdvancedSearch = (e, data) => {\n    setModalIsOpen(false);\n\n    let search = ``;\n    if (search.trim() !== \"\") {\n      setQuery(search);\n      setSearch(\"\");\n      setModalIsOpen(false);\n    }\n\n    if (cardsPerPage !== 10) {\n      indexOfLastCard = currentPage * cardsPerPage;\n      indexOfFirstCard = indexOfLastCard - cardsPerPage;\n      search += `&from=${indexOfFirstCard}&to=${indexOfLastCard}`;\n    }\n\n    if (data.has(\"MealType\")) {\n      // search += `&mealType=`;\n    }\n\n    setSearchRange(search);\n\n    setSubmitValues(data);\n    console.log(submitValues);\n  };\n\n  //use Styles\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      ...theme.typography.button,\n      backgroundColor: theme.palette.background.paper,\n      padding: theme.spacing(1),\n      fontSize: \"1.5em\",\n    },\n    input: {\n      width: 42,\n    },\n    sliderRoot: {\n      width: \"50%\",\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 240,\n    },\n    popover: {\n      pointerEvents: \"none\",\n    },\n    paper: {\n      padding: theme.spacing(1),\n    },\n  }));\n\n  const classes = useStyles();\n  const initialValues = {\n    search: \"\",\n    cardsPerPage: `${cardsPerPage}`,\n    dishTypes: [\n      \"Bread\",\n      \"Cereals\",\n      \"Condiments and sauces\",\n      \"Drinks\",\n      \"Desserts\",\n      \"Main course\",\n      \"Pancake\",\n      \"Preps\",\n      \"Preserve\",\n      \"Salad\",\n      \"Sandwiches\",\n      \"Side dish\",\n      \"Soup\",\n      \"Starter\",\n      \"Sweets\",\n    ],\n    dietLabels: [\n      {\n        name: \"Balanced\",\n        apiName: \"balanced\",\n        description: \"Protein/Fat/Carb values in 15/35/50 ratio\",\n      },\n      {\n        name: \"High-Fiber\",\n        apiName: \"high-fiber\",\n        description: \"More than 5g fiber per serving\",\n      },\n      {\n        name: \"High-Protein\",\n        apiName: \"high-protein\",\n        description: \"More than 50% of total calories from proteins\",\n      },\n      {\n        name: \"Low-Carb\",\n        apiName: \"low-carb\",\n        description: \"Less than 20% of total calories from carbs\",\n      },\n      {\n        name: \"Low-Fat\",\n        apiName: \"low-fat\",\n        description: \"Less than 15% of total calories from fat\",\n      },\n      {\n        name: \"Low-Sodium\",\n        apiName: \"low-sodium\",\n        description: \"Less than 140mg Na per serving\",\n      },\n    ],\n    cuisineTypes: [\n      \"American\",\n      \"Asian\",\n      \"British\",\n      \"Caribbean\",\n      \"Central Europe\",\n      \"Chinese\",\n      \"Eastern Europe\",\n      \"French\",\n      \"Indian\",\n      \"Italian\",\n      \"Japanese\",\n      \"Kosher\",\n      \"Mediterranean\",\n      \"Mexican\",\n      \"Middle Eastern\",\n      \"Nordic\",\n      \"South American\",\n      \"South East Asian\",\n    ],\n    healthLabels: [\n      {\n        name: \"Alcohol-free\",\n        apiName: \"alcohol-free\",\n        description: \"No alcohol used or contained\",\n      },\n      {\n        name: \"Celery-free\",\n        apiName: \"celery-free\",\n        description: \"does not contain celery or derivatives\",\n      },\n      {\n        name: \"Crustacean-free\",\n        apiName: \"crustacean-free\",\n        description:\n          \"does not contain crustaceans (shrimp, lobster etc.) or derivatives\",\n      },\n      {\n        name: \"Dairy\",\n        apiName: \"dairy-free\",\n        description: \"No dairy; no lactose\",\n      },\n      {\n        name: \"Eggs\",\n        apiName: \"egg-free\",\n        description: \"No eggs or products containing eggs\",\n      },\n      {\n        name: \"Fish\",\n        apiName: \"fish-free\",\n        description: \"No fish or fish derivatives\",\n      },\n      {\n        name: \"FODMAP free\",\n        apiName: \"fodmap-free\",\n        description: \"Does not contain FODMAP foods\",\n      },\n      {\n        name: \"Gluten\",\n        apiName: \"gluten-free\",\n        description: \"No ingredients containing gluten\",\n      },\n      {\n        name: \"Keto\",\n        apiName: \"keto-friendly\",\n        description: \"Maximum 7 grams of net carbs per serving\",\n      },\n      {\n        name: \"Kidney friendly\",\n        apiName: \"kidney-friendly\",\n        description:\n          \"per serving – phosphorus less than 250 mg AND potassium less than 500 mg AND sodium: less than 500 mg\",\n      },\n      {\n        name: \"Kosher\",\n        apiName: \"kosher\",\n        description:\n          \"contains only ingredients allowed by the kosher diet. However it does not guarantee kosher preparation of the ingredients themselves\",\n      },\n      {\n        name: \"Low potassium\",\n        apiName: \"low-potassium\",\n        description: \"Less than 150mg per serving\",\n      },\n      {\n        name: \"Lupine-free\",\n        apiName: \"lupine-free\",\n        description: \"does not contain lupine or derivatives\",\n      },\n      {\n        name: \"Mustard-free\",\n        apiName: \"mustard-free\",\n        description: \"does not contain mustard or derivatives\",\n      },\n      {\n        name: \"n/a\",\n        apiName: \"low-fat-abs\",\n        description: \"Less than 3g of fat per serving\",\n      },\n      {\n        name: \"No oil added\",\n        apiName: \"No-oil-added\",\n        description:\n          \"No oil added except to what is contained in the basic ingredients\",\n      },\n      {\n        name: \"No-sugar\",\n        apiName: \"low-sugar\",\n        description:\n          \"No simple sugars – glucose, dextrose, galactose, fructose, sucrose, lactose, maltose\",\n      },\n      {\n        name: \"Paleo\",\n        apiName: \"paleo\",\n        description:\n          \"Excludes what are perceived to be agricultural products; grains, legumes, dairy products, potatoes, refined salt, refined sugar, and processed oils\",\n      },\n      {\n        name: \"Peanuts\",\n        apiName: \"peanut-free\",\n        description: \"No peanuts or products containing peanuts\",\n      },\n      {\n        name: \"Pescatarian\",\n        apiName: \"pecatarian\",\n        description:\n          \"Does not contain meat or meat based products, can contain dairy and fish\",\n      },\n      {\n        name: \"Pork-free\",\n        apiName: \"pork-free\",\n        description: \"does not contain pork or derivatives\",\n      },\n      {\n        name: \"Red meat-free\",\n        apiName: \"red-meat-free\",\n        description:\n          \"does not contain beef, lamb, pork, duck, goose, game, horse, and other types of red meat or products containing red meat.\",\n      },\n      {\n        name: \"Sesame-free\",\n        apiName: \"sesame-free\",\n        description: \"does not contain sesame seed or derivatives\",\n      },\n      {\n        name: \"Shellfish\",\n        apiName: \"shellfish-free\",\n        description: \"No shellfish or shellfish derivatives\",\n      },\n      {\n        name: \"Soy\",\n        apiName: \"soy-free\",\n        description: \"No soy or products containing soy\",\n      },\n      {\n        name: \"Sugar-conscious\",\n        apiName: \"sugar-conscious\",\n        description: \"Less than 4g of sugar per serving\",\n      },\n      {\n        name: \"Tree Nuts\",\n        apiName: \"tree-nut-free\",\n        description: \"No tree nuts or products containing tree nuts\",\n      },\n      {\n        name: \"Vegan\",\n        apiName: \"vegan\",\n        description: \"No meat, poultry, fish, dairy, eggs or honey\",\n      },\n      {\n        name: \"Vegetarian\",\n        apiName: \"vegetarian\",\n        description: \"No meat, poultry, or fish\",\n      },\n      {\n        name: \"Wheat-free\",\n        apiName: \"wheat-free\",\n        description: \"No wheat, can have gluten though\",\n      },\n    ],\n  };\n  return (\n    <Modal\n      isOpen={modalIsOpen}\n      onRequestClose={() => setModalIsOpen(false)}\n      style={{\n        overlay: { backgroundColor: \"rgba(0,0,0,0.7)\" },\n      }}\n    >\n      <div\n        className=\"ModalHeader\"\n        style={{ display: \"flex\", marginLeft: \"7%\" }}\n      >\n        <h2>Advanced Search</h2>\n      </div>\n\n      <div className=\"ModalContent\">\n        <Formik\n          initialValues={initialValues}\n          // || validation using yup\n          // validationSchema={validationSchema}\n          onSubmit={(data, { setSubmitting, resetForm }) => {\n            setSubmitting(true);\n            setSubmitValues(data);\n            console.log(data);\n            choose = data;\n            // *make async call\n            console.log(data.MealType);\n            getAdvancedSearch(data, choose);\n            console.log(\"Submit: \", data);\n            setSubmitting(false);\n            resetForm(true);\n          }}\n          className=\"advanced-search-form\"\n        >\n          {({ values, errors, isSubmitting, handleBlur }) => (\n            <Form\n              style={{ margin: \"10px\", marginLeft: \"7%\", marginRight: \"7%\" }}\n            >\n              <div style={{ width: \"70%\" }}>\n                <div className={classes.root}>{\"Search: \"}</div>\n                <TextField\n                  variant=\"outlined\"\n                  id=\"search\"\n                  label=\"Search\"\n                  type=\"search\"\n                  placeholder=\"Chicken\"\n                  fullWidth\n                  onChange={updateSearch}\n                />\n              </div>\n\n              {/* Items Per page starts here */}\n              <div className={classes.root}>{\"Items per Page: \"}</div>\n\n              <Grid container spacing={2} alignItems=\"center\">\n                <Grid item xs={9}>\n                  <Slider\n                    name=\"cardsPerPage\"\n                    value={typeof cardsPerPage === \"number\" ? cardsPerPage : 0}\n                    onChange={handleSliderChange}\n                    // defaultValue={cardsPerPage}\n                    getAriaValueText={valuetext}\n                    aria-labelledby=\"item-slider\"\n                    valueLabelDisplay=\"auto\"\n                    step={1}\n                    min={10}\n                    max={50}\n                  />\n                </Grid>\n                <Grid item xs={3}>\n                  <TextField\n                    // defaultValue={cardsPerPage}\n                    name=\"cardsPerPage\"\n                    value={cardsPerPage}\n                    onChange={handleInputChange}\n                    onBlur={handleBlur}\n                    type=\"number\"\n                    inputProps={{\n                      step: 1,\n                      min: 10,\n                      max: 50,\n                      \"aria-labelledby\": \"item-slider\",\n                    }}\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                  />\n                </Grid>\n              </Grid>\n              {/* Items Per page ENds here */}\n\n              {/* Meal Type Radio Button starts here */}\n              <div className={classes.root}>{\"Meal Type: \"}</div>\n              <RadioGroup row>\n                <MyRadio\n                  name=\"MealType\"\n                  type=\"radio\"\n                  value=\"Breakfast\"\n                  as={Radio}\n                  label=\"Breakfast\"\n                />\n                <MyRadio\n                  name=\"MealType\"\n                  type=\"radio\"\n                  value=\"Lunch\"\n                  as={Radio}\n                  label=\"Lunch\"\n                />\n                <MyRadio\n                  name=\"MealType\"\n                  type=\"radio\"\n                  value=\"Dinner\"\n                  as={Radio}\n                  label=\"Dinner\"\n                />\n                <MyRadio\n                  name=\"MealType\"\n                  type=\"radio\"\n                  value=\"Snack\"\n                  as={Radio}\n                  label=\"Snack\"\n                />\n              </RadioGroup>\n\n              {/* Meal Type Radio Buttons ends here */}\n\n              {/* DishType multiple checkboxes starts here */}\n              <div className={classes.root}>{\"Dish Type: \"}</div>\n              <FieldArray name=\"Dish Type\">\n                {(arrayHelpers) =>\n                  values.dishTypes.map((dishType) => {\n                    return (\n                      <MyCheckBox\n                        key={dishType}\n                        name=\"dishType\"\n                        type=\"checkbox\"\n                        value={dishType}\n                        as={Checkbox}\n                        label={dishType}\n                      />\n                    );\n                  })\n                }\n              </FieldArray>\n              {/* DishType multiple checkboxes ends here */}\n              {/* Cuisine Type starts Here */}\n              <div className={classes.root}>{\"Cuisine Type: \"}</div>\n              <FieldArray name=\"CuisineTypes\">\n                {(arrayHelpers) =>\n                  values.cuisineTypes.map((cuisineType) => {\n                    return (\n                      <MyRadio\n                        key={cuisineType}\n                        name=\"cuisineType\"\n                        type=\"radio\"\n                        value={cuisineType}\n                        as={Radio}\n                        label={cuisineType}\n                      />\n                    );\n                  })\n                }\n              </FieldArray>\n              {/* Cuisine Type Ends here */}\n              {/* Diet Radio Button starts here */}\n              <div className={classes.root}>{\"Diet: \"}</div>\n              <FieldArray name=\"Diet\">\n                {(arrayHelpers) =>\n                  values.dietLabels.map((dietLabel) => {\n                    return (\n                      <MyRadio\n                        key={dietLabel.apiName}\n                        name=\"dietLabel\"\n                        type=\"radio\"\n                        value={dietLabel.apiName}\n                        as={Radio}\n                        label={dietLabel.name}\n                      />\n                    );\n                  })\n                }\n              </FieldArray>\n              {/* Diet Radio Buttons ends here */}\n\n              <div className={classes.root}>{\"Health: \"}</div>\n              <FieldArray row name=\"Health\">\n                {(arrayHelpers) =>\n                  values.healthLabels.map((healthLabel) => {\n                    return (\n                      <MyCheckBox\n                        key={healthLabel.apiName}\n                        name=\"healthLabel\"\n                        type=\"checkbox\"\n                        value={healthLabel.apiName}\n                        as={Checkbox}\n                        label={healthLabel.name}\n                      />\n                    );\n                  })\n                }\n              </FieldArray>\n\n              {/* Submit Button Starts Here */}\n              <div>\n                <Button disabled={isSubmitting} type=\"submit\">\n                  Submit\n                </Button>\n              </div>\n              {/* Submit Button Ends Here */}\n\n              <pre>{JSON.stringify(values, null, 2)}</pre>\n              <pre>{JSON.stringify(errors, null, 2)}</pre>\n            </Form>\n          )}\n        </Formik>\n      </div>\n      <div>\n        <Button onClick={() => setModalIsOpen(false)}>Close</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default AdvancedSearchModal;\n"]},"metadata":{},"sourceType":"module"}