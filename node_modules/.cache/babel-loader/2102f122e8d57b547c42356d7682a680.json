{"ast":null,"code":"var _jsxFileName = \"/Users/yeungj12/Projects/FrontEnd/ReactJS/frontend014_recipe/src/App.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Recipe from \"./Recipe\";\nimport Nav from \"./nav/Nav\";\nimport PaginationFooter from \"./Pagination\";\nimport \"./App.css\";\nimport AdvancedSearchModal from \"./Modal\";\nimport \"typeface-roboto\";\nimport { Button } from \"@material-ui/core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\n\nconst App = () => {\n  const APP_ID = \"65eff37b\";\n  const APP_KEY = \"013e642e140af7db99a3663be34125e2\";\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [query, setQuery] = useState(\"chicken\");\n  const [isHovered, setIsHovered] = useState(false);\n  const [cards, setCards] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [cardsPerPage, setCardsPerPage] = useState(10);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  let indexOfFirstCard = 0;\n  let indexOfLastCard = cardsPerPage;\n  let inputClass = \"search-bar\";\n  let buttonClass = \"search-button\";\n  const [searchRange, setSearchRange] = useState(`&from=${indexOfFirstCard}&to=${indexOfLastCard}`);\n\n  const axios = require(\"axios\"); //use Effect\n\n\n  useEffect(() => {\n    async function getRecipes() {\n      // get current posts\n      setLoading(true); // || use await for data that doesn't come back instantly\n      // const response = await fetch(\n      //   `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}${searchRange}`\n      // );\n\n      const response = async () => {\n        await axios.get(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}${searchRange}`).then(response => {\n          //console.log(data); works fine\n          console.log(response.data);\n          setRecipes(response.data.hits);\n          console.log(response.data.hits);\n          const data = response.data.hits.json();\n          setRecipes(data.hits);\n          setCards(data);\n          console.log(data);\n        }).catch(err => console.log(err));\n      };\n\n      response();\n      setLoading(false);\n    }\n\n    getRecipes();\n  }, [query, searchRange]);\n  const totalCards = 100; //change page\n\n  const paginate = pageNumber => {\n    setCurrentPage(pageNumber);\n    indexOfLastCard = pageNumber * cardsPerPage;\n    indexOfFirstCard = indexOfLastCard - cardsPerPage;\n    setSearchRange(`&from=${indexOfFirstCard}&to=${indexOfLastCard}`);\n  }; //updates search query string when typing\n\n\n  const updateSearch = e => {\n    setSearch(e.target.value);\n  };\n\n  const getSearch = e => {\n    // || prevent page refresh\n    e.preventDefault();\n\n    if (search.trim() !== \"\") {\n      setQuery(search);\n      setSearch(\"\");\n    }\n  }; //search bar hover function\n\n\n  if (isHovered) {\n    inputClass = \"search-bar-expand search-bar\";\n    buttonClass = \"search-button search-button-expand\";\n  } else {\n    inputClass = \"search-bar\";\n    buttonClass = \"search-button\";\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, \"Showing Results for:\"), /*#__PURE__*/React.createElement(\"h4\", {\n    style: {\n      textTransform: \"uppercase\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, query), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: () => getSearch(),\n    className: \"search-form\",\n    onMouseEnter: () => setIsHovered(true),\n    onMouseLeave: () => setIsHovered(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: inputClass,\n    value: search,\n    onChange: () => updateSearch(),\n    placeholder: \"Type to search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: buttonClass,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setModalIsOpen(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, \"Advanced Search\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"recipes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }, recipes.map((recipe, count) => /*#__PURE__*/React.createElement(Recipe, {\n    key: recipe.recipe.label + count,\n    title: recipe.recipe.label,\n    calories: recipe.recipe.calories,\n    image: recipe.recipe.image,\n    ingredients: recipe.recipe.ingredients,\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"footer\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PaginationFooter, {\n    cardsPerPage: cardsPerPage,\n    totalCards: totalCards,\n    paginate: paginate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(AdvancedSearchModal, {\n    modalIsOpen: modalIsOpen,\n    setCardsPerPage: setCardsPerPage,\n    setQuery: setQuery,\n    setSearch: setSearch,\n    setModalIsOpen: setModalIsOpen,\n    search: search,\n    cardsPerPage: cardsPerPage,\n    indexOfLastCard: indexOfLastCard,\n    currentPage: currentPage,\n    indexOfFirstCard: indexOfFirstCard,\n    setSearchRange: setSearchRange,\n    modalIsOpen: modalIsOpen,\n    updateSearch: updateSearch,\n    searchRange: searchRange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/yeungj12/Projects/FrontEnd/ReactJS/frontend014_recipe/src/App.js"],"names":["React","useEffect","useState","Recipe","Nav","PaginationFooter","AdvancedSearchModal","Button","FontAwesomeIcon","faSearch","App","APP_ID","APP_KEY","recipes","setRecipes","search","setSearch","query","setQuery","isHovered","setIsHovered","cards","setCards","loading","setLoading","currentPage","setCurrentPage","cardsPerPage","setCardsPerPage","modalIsOpen","setModalIsOpen","indexOfFirstCard","indexOfLastCard","inputClass","buttonClass","searchRange","setSearchRange","axios","require","getRecipes","response","get","then","console","log","data","hits","json","catch","err","totalCards","paginate","pageNumber","updateSearch","e","target","value","getSearch","preventDefault","trim","textTransform","map","recipe","count","label","calories","image","ingredients"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport Recipe from \"./Recipe\";\nimport Nav from \"./nav/Nav\";\nimport PaginationFooter from \"./Pagination\";\n\nimport \"./App.css\";\n\nimport AdvancedSearchModal from \"./Modal\";\n\nimport \"typeface-roboto\";\n\nimport { Button } from \"@material-ui/core\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\n\nconst App = () => {\n  const APP_ID = \"65eff37b\";\n  const APP_KEY = \"013e642e140af7db99a3663be34125e2\";\n\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [query, setQuery] = useState(\"chicken\");\n  const [isHovered, setIsHovered] = useState(false);\n  const [cards, setCards] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [cardsPerPage, setCardsPerPage] = useState(10);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n\n  let indexOfFirstCard = 0;\n  let indexOfLastCard = cardsPerPage;\n  let inputClass = \"search-bar\";\n  let buttonClass = \"search-button\";\n\n  const [searchRange, setSearchRange] = useState(\n    `&from=${indexOfFirstCard}&to=${indexOfLastCard}`\n  );\n\n  const axios = require(\"axios\");\n\n  //use Effect\n  useEffect(() => {\n    async function getRecipes() {\n      // get current posts\n      setLoading(true);\n      // || use await for data that doesn't come back instantly\n      // const response = await fetch(\n      //   `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}${searchRange}`\n      // );\n      const response = async () => {\n        await axios\n          .get(\n            `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}${searchRange}`\n          )\n          .then((response) => {\n            //console.log(data); works fine\n            console.log(response.data);\n            setRecipes(response.data.hits);\n            console.log(response.data.hits);\n            const data = response.data.hits.json();\n            setRecipes(data.hits);\n            setCards(data);\n            console.log(data);\n          })\n          .catch((err) => console.log(err));\n      };\n      response();\n\n      setLoading(false);\n    }\n    getRecipes();\n  }, [query, searchRange]);\n\n  const totalCards = 100;\n\n  //change page\n  const paginate = (pageNumber) => {\n    setCurrentPage(pageNumber);\n    indexOfLastCard = pageNumber * cardsPerPage;\n    indexOfFirstCard = indexOfLastCard - cardsPerPage;\n    setSearchRange(`&from=${indexOfFirstCard}&to=${indexOfLastCard}`);\n  };\n\n  //updates search query string when typing\n  const updateSearch = (e) => {\n    setSearch(e.target.value);\n  };\n\n  const getSearch = (e) => {\n    // || prevent page refresh\n    e.preventDefault();\n    if (search.trim() !== \"\") {\n      setQuery(search);\n      setSearch(\"\");\n    }\n  };\n\n  //search bar hover function\n  if (isHovered) {\n    inputClass = \"search-bar-expand search-bar\";\n    buttonClass = \"search-button search-button-expand\";\n  } else {\n    inputClass = \"search-bar\";\n    buttonClass = \"search-button\";\n  }\n\n  return (\n    <div className=\"App\">\n      <Nav />\n      <div className=\"search-box\">\n        <p>Showing Results for:</p>\n        <h4 style={{ textTransform: \"uppercase\" }}>{query}</h4>\n        <form\n          onSubmit={() => getSearch()}\n          className=\"search-form\"\n          onMouseEnter={() => setIsHovered(true)}\n          onMouseLeave={() => setIsHovered(false)}\n        >\n          <input\n            type=\"text\"\n            className={inputClass}\n            value={search}\n            onChange={() => updateSearch()}\n            placeholder=\"Type to search\"\n          />\n          <button className={buttonClass} type=\"submit\">\n            <FontAwesomeIcon icon={faSearch} />\n          </button>\n        </form>\n        <Button onClick={() => setModalIsOpen(true)}>Advanced Search</Button>\n      </div>\n\n      <div className=\"recipes\">\n        {/* // || .map function used for looping arrays */}\n        {recipes.map((recipe, count) => (\n          <Recipe\n            key={recipe.recipe.label + count}\n            title={recipe.recipe.label}\n            calories={recipe.recipe.calories}\n            image={recipe.recipe.image}\n            ingredients={recipe.recipe.ingredients}\n            loading={loading}\n          />\n        ))}\n      </div>\n      <footer>\n        <PaginationFooter\n          cardsPerPage={cardsPerPage}\n          totalCards={totalCards}\n          paginate={paginate}\n        />\n      </footer>\n\n      <AdvancedSearchModal\n        modalIsOpen={modalIsOpen}\n        setCardsPerPage={setCardsPerPage}\n        setQuery={setQuery}\n        setSearch={setSearch}\n        setModalIsOpen={setModalIsOpen}\n        search={search}\n        cardsPerPage={cardsPerPage}\n        indexOfLastCard={indexOfLastCard}\n        currentPage={currentPage}\n        indexOfFirstCard={indexOfFirstCard}\n        setSearchRange={setSearchRange}\n        modalIsOpen={modalIsOpen}\n        updateSearch={updateSearch}\n        searchRange={searchRange}\n      />\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}