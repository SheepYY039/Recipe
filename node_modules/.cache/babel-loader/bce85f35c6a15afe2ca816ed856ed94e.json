{"ast":null,"code":"var _jsxFileName = \"/Users/yeungj12/Projects/FrontEnd/ReactJS/frontend014_recipe/src/FormikForm.js\";\nimport React from \"react\";\nimport \"typeface-roboto\";\nimport { Formik, Field, Form, useField, FieldArray } from \"formik\";\nimport { green } from \"@material-ui/core/colors\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { TextField, Button, Checkbox, Radio, FormControlLabel, Select, MenuItem, InputLabel, Slider, Grid, FormControl, Popover } from \"@material-ui/core\";\nimport * as yup from \"yup\";\n\nconst MyRadio = ({\n  label,\n  ...props\n}) => {\n  const [field, meta] = useField(props);\n  return /*#__PURE__*/React.createElement(FormControlLabel, Object.assign({}, field, {\n    control: /*#__PURE__*/React.createElement(GreenRadio, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 48\n      }\n    }),\n    label: label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 10\n    }\n  }));\n};\n\nconst GreenRadio = withStyles({\n  root: {\n    color: green[400],\n    \"&$checked\": {\n      color: green[600]\n    }\n  },\n  checked: {}\n})(props => /*#__PURE__*/React.createElement(Radio, Object.assign({\n  color: \"default\"\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 15\n  }\n})));\n\nconst MyCheckBox = ({\n  label,\n  ...props\n}) => {\n  const [field, meta] = useField(props);\n  return /*#__PURE__*/React.createElement(FormControlLabel, Object.assign({}, field, {\n    control: /*#__PURE__*/React.createElement(GreenCheckbox, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 43\n      }\n    }),\n    label: label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }));\n};\n\nconst MyCheckBoxLabel = ({\n  name,\n  label,\n  description,\n  ...props\n}) => {\n  const [field, meta] = useField(props);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    \"aria-owns\": open ? \"mouse-over-popover\" : undefined,\n    \"aria-haspopup\": \"true\",\n    onMouseEnter: handlePopoverOpen,\n    onMouseLeave: handlePopoverClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MyCheckBox, {\n    name: \"healthLabel\",\n    type: \"checkbox\",\n    value: healthLabel.name,\n    as: Checkbox,\n    label: healthLabel.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Popover, {\n    id: \"mouse-over-popover\",\n    className: classes.popover,\n    classes: {\n      paper: classes.paper\n    },\n    open: open,\n    anchorEl: anchorEl,\n    anchorOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"left\"\n    },\n    transformOrigin: {\n      vertical: \"top\",\n      horizontal: \"left\"\n    },\n    onClose: handlePopoverClose,\n    disableRestoreFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, healthLabel.description)));\n};\n\nconst GreenCheckbox = withStyles({\n  root: {\n    color: green[400],\n    \"&$checked\": {\n      color: green[600]\n    }\n  },\n  checked: {}\n})(props => /*#__PURE__*/React.createElement(Checkbox, Object.assign({\n  color: \"default\"\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 15\n  }\n})));\n\nconst MyTextField = ({\n  id,\n  label,\n  placeholder,\n  ...props\n}) => {\n  const [field, meta] = useField(props);\n  const errorText = meta.error && meta.touched ? meta.error : \"\";\n  return /*#__PURE__*/React.createElement(TextField, Object.assign({}, field, {\n    placeholder: placeholder,\n    helperText: errorText,\n    error: !!errorText,\n    id: \"error\",\n    label: label,\n    type: \"search\",\n    variant: \"outlined\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  })) // ! error={!!errorText} casting to boolean, if this string is empty--> false\n  ;\n};\n\nconst validationSchema = yup.object({\n  // || passing validation to search using yup\n  search: yup.string().required().max(10),\n  pets: yup.array().of(yup.object({\n    name: yup.string().required()\n  }))\n});\nconst useStyles = makeStyles(theme => ({\n  root: { ...theme.typography.button,\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(1),\n    fontSize: \"1.5em\"\n  },\n  input: {\n    width: 42\n  },\n  sliderRoot: {\n    width: \"50%\"\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 240\n  },\n  popover: {\n    pointerEvents: \"none\"\n  },\n  paper: {\n    padding: theme.spacing(1)\n  }\n}));\n\nfunction valuetext(value) {\n  return `${value}`;\n}\n\nconst FormikForm = ({\n  selectMealTypes,\n  setSelectMealTypes,\n  selectCuisineTypes,\n  setSelectCuisineTypes\n}) => {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(10);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const handlePopoverOpen = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handlePopoverClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleSliderChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleInputChange = event => {\n    setValue(event.target.value === \"\" ? \"\" : Number(event.target.value));\n  };\n\n  const handleBlur = () => {\n    if (value < 0) {\n      setValue(0);\n    } else if (value > 50) {\n      setValue(50);\n    }\n  };\n\n  const handleChange = event => {\n    setSelectMealTypes(event.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      search: \"\",\n      dishTypes: [\"Bread\", \"Cereals\", \"Condiments and sauces\", \"Drinks\", \"Desserts\", \"Main course\", \"Pancake\", \"Preps\", \"Preserve\", \"Salad\", \"Sandwiches\", \"Side dish\", \"Soup\", \"Starter\", \"Sweets\"],\n      dietLabels: [{\n        name: \"Balanced\",\n        apiName: \"balanced\",\n        description: \"Protein/Fat/Carb values in 15/35/50 ratio\"\n      }, {\n        name: \"High-Fiber\",\n        apiName: \"high-fiber\",\n        description: \"More than 5g fiber per serving\"\n      }, {\n        name: \"High-Protein\",\n        apiName: \"high-protein\",\n        description: \"More than 50% of total calories from proteins\"\n      }, {\n        name: \"Low-Carb\",\n        apiName: \"low-carb\",\n        description: \"Less than 20% of total calories from carbs\"\n      }, {\n        name: \"Low-Fat\",\n        apiName: \"low-fat\",\n        description: \"Less than 15% of total calories from fat\"\n      }, {\n        name: \"Low-Sodium\",\n        apiName: \"low-sodium\",\n        description: \"Less than 140mg Na per serving\"\n      }],\n      cuisineTypes: [\"American\", \"Asian\", \"British\", \"Caribbean\", \"Central Europe\", \"Chinese\", \"Eastern Europe\", \"French\", \"Indian\", \"Italian\", \"Japanese\", \"Kosher\", \"Mediterranean\", \"Mexican\", \"Middle Eastern\", \"Nordic\", \"South American\", \"South East Asian\"],\n      healthLabels: [{\n        name: \"Alcohol-free\",\n        apiName: \"alcohol-free\",\n        description: \"No alcohol used or contained\"\n      }, {\n        name: \"Celery-free\",\n        apiName: \"celery-free\",\n        description: \"does not contain celery or derivatives\"\n      }, {\n        name: \"Crustacean-free\",\n        apiName: \"crustacean-free\",\n        description: \"does not contain crustaceans (shrimp, lobster etc.) or derivatives\"\n      }, {\n        name: \"Dairy\",\n        apiName: \"dairy-free\",\n        description: \"No dairy; no lactose\"\n      }, {\n        name: \"Eggs\",\n        apiName: \"egg-free\",\n        description: \"No eggs or products containing eggs\"\n      }, {\n        name: \"Fish\",\n        apiName: \"fish-free\",\n        description: \"No fish or fish derivatives\"\n      }, {\n        name: \"FODMAP free\",\n        apiName: \"fodmap-free\",\n        description: \"Does not contain FODMAP foods\"\n      }, {\n        name: \"Gluten\",\n        apiName: \"gluten-free\",\n        description: \"No ingredients containing gluten\"\n      }, {\n        name: \"Keto\",\n        apiName: \"keto-friendly\",\n        description: \"Maximum 7 grams of net carbs per serving\"\n      }, {\n        name: \"Kidney friendly\",\n        apiName: \"kidney-friendly\",\n        description: \"per serving – phosphorus less than 250 mg AND potassium less than 500 mg AND sodium: less than 500 mg\"\n      }, {\n        name: \"Kosher\",\n        apiName: \"kosher\",\n        description: \"contains only ingredients allowed by the kosher diet. However it does not guarantee kosher preparation of the ingredients themselves\"\n      }, {\n        name: \"Low potassium\",\n        apiName: \"low-potassium\",\n        description: \"Less than 150mg per serving\"\n      }, {\n        name: \"Lupine-free\",\n        apiName: \"lupine-free\",\n        description: \"does not contain lupine or derivatives\"\n      }, {\n        name: \"Mustard-free\",\n        apiName: \"mustard-free\",\n        description: \"does not contain mustard or derivatives\"\n      }, {\n        name: \"n/a\",\n        apiName: \"low-fat-abs\",\n        description: \"Less than 3g of fat per serving\"\n      }, {\n        name: \"No oil added\",\n        apiName: \"No-oil-added\",\n        description: \"No oil added except to what is contained in the basic ingredients\"\n      }, {\n        name: \"No-sugar\",\n        apiName: \"low-sugar\",\n        description: \"No simple sugars – glucose, dextrose, galactose, fructose, sucrose, lactose, maltose\"\n      }, {\n        name: \"Paleo\",\n        apiName: \"paleo\",\n        description: \"Excludes what are perceived to be agricultural products; grains, legumes, dairy products, potatoes, refined salt, refined sugar, and processed oils\"\n      }, {\n        name: \"Peanuts\",\n        apiName: \"peanut-free\",\n        description: \"No peanuts or products containing peanuts\"\n      }, {\n        name: \"Pescatarian\",\n        apiName: \"pecatarian\",\n        description: \"Does not contain meat or meat based products, can contain dairy and fish\"\n      }, {\n        name: \"Pork-free\",\n        apiName: \"pork-free\",\n        description: \"does not contain pork or derivatives\"\n      }, {\n        name: \"Red meat-free\",\n        apiName: \"red-meat-free\",\n        description: \"does not contain beef, lamb, pork, duck, goose, game, horse, and other types of red meat or products containing red meat.\"\n      }, {\n        name: \"Sesame-free\",\n        apiName: \"sesame-free\",\n        description: \"does not contain sesame seed or derivatives\"\n      }, {\n        name: \"Shellfish\",\n        apiName: \"shellfish-free\",\n        description: \"No shellfish or shellfish derivatives\"\n      }, {\n        name: \"Soy\",\n        apiName: \"soy-free\",\n        description: \"No soy or products containing soy\"\n      }, {\n        name: \"Sugar-conscious\",\n        apiName: \"sugar-conscious\",\n        description: \"Less than 4g of sugar per serving\"\n      }, {\n        name: \"Tree Nuts\",\n        apiName: \"tree-nut-free\",\n        description: \"No tree nuts or products containing tree nuts\"\n      }, {\n        name: \"Vegan\",\n        apiName: \"vegan\",\n        description: \"No meat, poultry, fish, dairy, eggs or honey\"\n      }, {\n        name: \"Vegetarian\",\n        apiName: \"vegetarian\",\n        description: \"No meat, poultry, or fish\"\n      }, {\n        name: \"Wheat-free\",\n        apiName: \"wheat-free\",\n        description: \"No wheat, can have gluten though\"\n      }]\n    } // || validation using yup\n    ,\n    validationSchema: validationSchema,\n    onSubmit: (data, {\n      setSubmitting,\n      resetForm\n    }) => {\n      setSubmitting(true); // *make async call\n\n      console.log(\"Submit: \", data);\n      setSubmitting(false);\n      resetForm(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }\n  }, ({\n    values,\n    errors,\n    isSubmitting,\n    handleBlur\n  }) => /*#__PURE__*/React.createElement(Form, {\n    style: {\n      margin: \"10px\",\n      marginLeft: \"7%\",\n      marginRight: \"7%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"70%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 15\n    }\n  }, \"Search: \"), /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    id: \"search\",\n    label: \"Search\",\n    type: \"search\",\n    placeholder: \"Chicken\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 13\n    }\n  }, \"Items per Page: \"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Slider, {\n    value: typeof value === \"number\" ? value : 0,\n    onChange: handleSliderChange,\n    defaultValue: 10,\n    getAriaValueText: valuetext,\n    \"aria-labelledby\": \"item-slider\",\n    valueLabelDisplay: \"auto\",\n    step: 1,\n    min: 10,\n    max: 50,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    defaultValue: \"10\",\n    value: value,\n    onChange: handleInputChange,\n    onBlur: handleBlur,\n    type: \"number\",\n    inputProps: {\n      step: 5,\n      min: 10,\n      max: 50,\n      \"aria-labelledby\": \"item-slider\",\n      shrink: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 13\n    }\n  }, \"Meal Type: \"), /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"MealTypeLabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 15\n    }\n  }, \"Meal Type\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"MealTypeSelectLabel\",\n    id: \"MealTypeSelect\",\n    value: selectMealTypes,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"breakfast\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 17\n    }\n  }, \"Breakfast\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"lunch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 17\n    }\n  }, \"Lunch\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"dinner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 17\n    }\n  }, \"Dinner\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"snack\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 17\n    }\n  }, \"Snack\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 13\n    }\n  }, \"Dish Type: \"), /*#__PURE__*/React.createElement(FieldArray, {\n    name: \"Dish Type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 13\n    }\n  }, arrayHelpers => values.dishTypes.map(dishType => {\n    return /*#__PURE__*/React.createElement(MyCheckBox, {\n      name: \"dishType\",\n      type: \"checkbox\",\n      value: dishType,\n      as: Checkbox,\n      label: dishType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 21\n      }\n    });\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 13\n    }\n  }, \"Cuisine Type: \"), /*#__PURE__*/React.createElement(FieldArray, {\n    name: \"CuisineTypes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 525,\n      columnNumber: 13\n    }\n  }, arrayHelpers => values.cuisineTypes.map(cuisineType => {\n    return /*#__PURE__*/React.createElement(MyRadio, {\n      name: \"cuisineType\",\n      type: \"radio\",\n      value: cuisineType,\n      as: Radio,\n      label: cuisineType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 529,\n        columnNumber: 21\n      }\n    });\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 542,\n      columnNumber: 13\n    }\n  }, \"Diet: \"), /*#__PURE__*/React.createElement(FieldArray, {\n    name: \"Diet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 543,\n      columnNumber: 13\n    }\n  }, arrayHelpers => values.dietLabels.map(dietLabel => {\n    return /*#__PURE__*/React.createElement(MyRadio, {\n      name: \"dietLabel\",\n      type: \"radio\",\n      value: dietLabel.name,\n      as: Radio,\n      label: dietLabel.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 21\n      }\n    });\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 560,\n      columnNumber: 13\n    }\n  }, \"Health Label: \"), /*#__PURE__*/React.createElement(FieldArray, {\n    name: \"HealthLabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 561,\n      columnNumber: 13\n    }\n  }, arrayHelpers => values.healthLabels.map(healthLabel => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      \"aria-owns\": open ? \"mouse-over-popover\" : undefined,\n      \"aria-haspopup\": \"true\",\n      onMouseEnter: handlePopoverOpen,\n      onMouseLeave: handlePopoverClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(MyCheckBox, {\n      name: \"healthLabel\",\n      type: \"checkbox\",\n      value: healthLabel.name,\n      as: Checkbox,\n      label: healthLabel.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Popover, {\n      id: \"mouse-over-popover\",\n      className: classes.popover,\n      classes: {\n        paper: classes.paper\n      },\n      open: open,\n      anchorEl: anchorEl,\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"left\"\n      },\n      transformOrigin: {\n        vertical: \"top\",\n        horizontal: \"left\"\n      },\n      onClose: handlePopoverClose,\n      disableRestoreFocus: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 580,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 599,\n        columnNumber: 25\n      }\n    }, healthLabel.description)));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 607,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    disabled: isSubmitting,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 608,\n      columnNumber: 15\n    }\n  }, \"Submit\")), /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 612,\n      columnNumber: 13\n    }\n  }, JSON.stringify(values, null, 2)), /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 613,\n      columnNumber: 13\n    }\n  }, JSON.stringify(errors, null, 2)))));\n};\n\nexport default FormikForm;","map":{"version":3,"sources":["/Users/yeungj12/Projects/FrontEnd/ReactJS/frontend014_recipe/src/FormikForm.js"],"names":["React","Formik","Field","Form","useField","FieldArray","green","withStyles","makeStyles","Typography","TextField","Button","Checkbox","Radio","FormControlLabel","Select","MenuItem","InputLabel","Slider","Grid","FormControl","Popover","yup","MyRadio","label","props","field","meta","GreenRadio","root","color","checked","MyCheckBox","MyCheckBoxLabel","name","description","open","undefined","handlePopoverOpen","handlePopoverClose","healthLabel","classes","popover","paper","anchorEl","vertical","horizontal","GreenCheckbox","MyTextField","id","placeholder","errorText","error","touched","validationSchema","object","search","string","required","max","pets","array","of","useStyles","theme","typography","button","backgroundColor","palette","background","padding","spacing","fontSize","input","width","sliderRoot","formControl","margin","minWidth","pointerEvents","valuetext","value","FormikForm","selectMealTypes","setSelectMealTypes","selectCuisineTypes","setSelectCuisineTypes","setValue","useState","setAnchorEl","Boolean","event","currentTarget","handleSliderChange","newValue","handleInputChange","target","Number","handleBlur","handleChange","dishTypes","dietLabels","apiName","cuisineTypes","healthLabels","data","setSubmitting","resetForm","console","log","values","errors","isSubmitting","marginLeft","marginRight","step","min","shrink","arrayHelpers","map","dishType","cuisineType","dietLabel","JSON","stringify"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"typeface-roboto\";\nimport { Formik, Field, Form, useField, FieldArray } from \"formik\";\nimport { green } from \"@material-ui/core/colors\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport {\n  TextField,\n  Button,\n  Checkbox,\n  Radio,\n  FormControlLabel,\n  Select,\n  MenuItem,\n  InputLabel,\n  Slider,\n  Grid,\n  FormControl,\n  Popover,\n} from \"@material-ui/core\";\nimport * as yup from \"yup\";\n\nconst MyRadio = ({ label, ...props }) => {\n  const [field, meta] = useField(props);\n  return <FormControlLabel {...field} control={<GreenRadio />} label={label} />;\n};\nconst GreenRadio = withStyles({\n  root: {\n    color: green[400],\n    \"&$checked\": {\n      color: green[600],\n    },\n  },\n  checked: {},\n})((props) => <Radio color=\"default\" {...props} />);\n\nconst MyCheckBox = ({ label, ...props }) => {\n  const [field, meta] = useField(props);\n\n  return (\n    <FormControlLabel {...field} control={<GreenCheckbox />} label={label} />\n  );\n};\n\nconst MyCheckBoxLabel = ({ name, label, description, ...props }) => {\n  const [field, meta] = useField(props);\n  return (\n    <div>\n      <Typography\n        aria-owns={open ? \"mouse-over-popover\" : undefined}\n        aria-haspopup=\"true\"\n        onMouseEnter={handlePopoverOpen}\n        onMouseLeave={handlePopoverClose}\n      >\n        <MyCheckBox\n          name=\"healthLabel\"\n          type=\"checkbox\"\n          value={healthLabel.name}\n          as={Checkbox}\n          label={healthLabel.name}\n        />\n      </Typography>\n      <Popover\n        id=\"mouse-over-popover\"\n        className={classes.popover}\n        classes={{\n          paper: classes.paper,\n        }}\n        open={open}\n        anchorEl={anchorEl}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"left\",\n        }}\n        onClose={handlePopoverClose}\n        disableRestoreFocus\n      >\n        <Typography>{healthLabel.description}</Typography>\n      </Popover>\n    </div>\n  );\n};\n\nconst GreenCheckbox = withStyles({\n  root: {\n    color: green[400],\n    \"&$checked\": {\n      color: green[600],\n    },\n  },\n  checked: {},\n})((props) => <Checkbox color=\"default\" {...props} />);\n\nconst MyTextField = ({ id, label, placeholder, ...props }) => {\n  const [field, meta] = useField(props);\n  const errorText = meta.error && meta.touched ? meta.error : \"\";\n  return (\n    <TextField\n      {...field}\n      placeholder={placeholder}\n      helperText={errorText}\n      error={!!errorText}\n      id=\"error\"\n      label={label}\n      type=\"search\"\n      variant=\"outlined\"\n      fullWidth\n    />\n    // ! error={!!errorText} casting to boolean, if this string is empty--> false\n  );\n};\n\nconst validationSchema = yup.object({\n  // || passing validation to search using yup\n  search: yup.string().required().max(10),\n  pets: yup.array().of(\n    yup.object({\n      name: yup.string().required(),\n    })\n  ),\n});\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    ...theme.typography.button,\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(1),\n    fontSize: \"1.5em\",\n  },\n  input: {\n    width: 42,\n  },\n  sliderRoot: {\n    width: \"50%\",\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 240,\n  },\n  popover: {\n    pointerEvents: \"none\",\n  },\n  paper: {\n    padding: theme.spacing(1),\n  },\n}));\n\nfunction valuetext(value) {\n  return `${value}`;\n}\n\nconst FormikForm = ({\n  selectMealTypes,\n  setSelectMealTypes,\n  selectCuisineTypes,\n  setSelectCuisineTypes,\n}) => {\n  const classes = useStyles();\n\n  const [value, setValue] = React.useState(10);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const open = Boolean(anchorEl);\n\n  const handlePopoverOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handlePopoverClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleSliderChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleInputChange = (event) => {\n    setValue(event.target.value === \"\" ? \"\" : Number(event.target.value));\n  };\n\n  const handleBlur = () => {\n    if (value < 0) {\n      setValue(0);\n    } else if (value > 50) {\n      setValue(50);\n    }\n  };\n\n  const handleChange = (event) => {\n    setSelectMealTypes(event.target.value);\n  };\n  return (\n    <div>\n      <Formik\n        initialValues={{\n          search: \"\",\n          dishTypes: [\n            \"Bread\",\n            \"Cereals\",\n            \"Condiments and sauces\",\n            \"Drinks\",\n            \"Desserts\",\n            \"Main course\",\n            \"Pancake\",\n            \"Preps\",\n            \"Preserve\",\n            \"Salad\",\n            \"Sandwiches\",\n            \"Side dish\",\n            \"Soup\",\n            \"Starter\",\n            \"Sweets\",\n          ],\n          dietLabels: [\n            {\n              name: \"Balanced\",\n              apiName: \"balanced\",\n              description: \"Protein/Fat/Carb values in 15/35/50 ratio\",\n            },\n            {\n              name: \"High-Fiber\",\n              apiName: \"high-fiber\",\n              description: \"More than 5g fiber per serving\",\n            },\n            {\n              name: \"High-Protein\",\n              apiName: \"high-protein\",\n              description: \"More than 50% of total calories from proteins\",\n            },\n            {\n              name: \"Low-Carb\",\n              apiName: \"low-carb\",\n              description: \"Less than 20% of total calories from carbs\",\n            },\n            {\n              name: \"Low-Fat\",\n              apiName: \"low-fat\",\n              description: \"Less than 15% of total calories from fat\",\n            },\n            {\n              name: \"Low-Sodium\",\n              apiName: \"low-sodium\",\n              description: \"Less than 140mg Na per serving\",\n            },\n          ],\n          cuisineTypes: [\n            \"American\",\n            \"Asian\",\n            \"British\",\n            \"Caribbean\",\n            \"Central Europe\",\n            \"Chinese\",\n            \"Eastern Europe\",\n            \"French\",\n            \"Indian\",\n            \"Italian\",\n            \"Japanese\",\n            \"Kosher\",\n            \"Mediterranean\",\n            \"Mexican\",\n            \"Middle Eastern\",\n            \"Nordic\",\n            \"South American\",\n            \"South East Asian\",\n          ],\n          healthLabels: [\n            {\n              name: \"Alcohol-free\",\n              apiName: \"alcohol-free\",\n              description: \"No alcohol used or contained\",\n            },\n            {\n              name: \"Celery-free\",\n              apiName: \"celery-free\",\n              description: \"does not contain celery or derivatives\",\n            },\n            {\n              name: \"Crustacean-free\",\n              apiName: \"crustacean-free\",\n              description:\n                \"does not contain crustaceans (shrimp, lobster etc.) or derivatives\",\n            },\n            {\n              name: \"Dairy\",\n              apiName: \"dairy-free\",\n              description: \"No dairy; no lactose\",\n            },\n            {\n              name: \"Eggs\",\n              apiName: \"egg-free\",\n              description: \"No eggs or products containing eggs\",\n            },\n            {\n              name: \"Fish\",\n              apiName: \"fish-free\",\n              description: \"No fish or fish derivatives\",\n            },\n            {\n              name: \"FODMAP free\",\n              apiName: \"fodmap-free\",\n              description: \"Does not contain FODMAP foods\",\n            },\n            {\n              name: \"Gluten\",\n              apiName: \"gluten-free\",\n              description: \"No ingredients containing gluten\",\n            },\n            {\n              name: \"Keto\",\n              apiName: \"keto-friendly\",\n              description: \"Maximum 7 grams of net carbs per serving\",\n            },\n            {\n              name: \"Kidney friendly\",\n              apiName: \"kidney-friendly\",\n              description:\n                \"per serving – phosphorus less than 250 mg AND potassium less than 500 mg AND sodium: less than 500 mg\",\n            },\n            {\n              name: \"Kosher\",\n              apiName: \"kosher\",\n              description:\n                \"contains only ingredients allowed by the kosher diet. However it does not guarantee kosher preparation of the ingredients themselves\",\n            },\n            {\n              name: \"Low potassium\",\n              apiName: \"low-potassium\",\n              description: \"Less than 150mg per serving\",\n            },\n            {\n              name: \"Lupine-free\",\n              apiName: \"lupine-free\",\n              description: \"does not contain lupine or derivatives\",\n            },\n            {\n              name: \"Mustard-free\",\n              apiName: \"mustard-free\",\n              description: \"does not contain mustard or derivatives\",\n            },\n            {\n              name: \"n/a\",\n              apiName: \"low-fat-abs\",\n              description: \"Less than 3g of fat per serving\",\n            },\n            {\n              name: \"No oil added\",\n              apiName: \"No-oil-added\",\n              description:\n                \"No oil added except to what is contained in the basic ingredients\",\n            },\n            {\n              name: \"No-sugar\",\n              apiName: \"low-sugar\",\n              description:\n                \"No simple sugars – glucose, dextrose, galactose, fructose, sucrose, lactose, maltose\",\n            },\n            {\n              name: \"Paleo\",\n              apiName: \"paleo\",\n              description:\n                \"Excludes what are perceived to be agricultural products; grains, legumes, dairy products, potatoes, refined salt, refined sugar, and processed oils\",\n            },\n            {\n              name: \"Peanuts\",\n              apiName: \"peanut-free\",\n              description: \"No peanuts or products containing peanuts\",\n            },\n            {\n              name: \"Pescatarian\",\n              apiName: \"pecatarian\",\n              description:\n                \"Does not contain meat or meat based products, can contain dairy and fish\",\n            },\n            {\n              name: \"Pork-free\",\n              apiName: \"pork-free\",\n              description: \"does not contain pork or derivatives\",\n            },\n            {\n              name: \"Red meat-free\",\n              apiName: \"red-meat-free\",\n              description:\n                \"does not contain beef, lamb, pork, duck, goose, game, horse, and other types of red meat or products containing red meat.\",\n            },\n            {\n              name: \"Sesame-free\",\n              apiName: \"sesame-free\",\n              description: \"does not contain sesame seed or derivatives\",\n            },\n            {\n              name: \"Shellfish\",\n              apiName: \"shellfish-free\",\n              description: \"No shellfish or shellfish derivatives\",\n            },\n            {\n              name: \"Soy\",\n              apiName: \"soy-free\",\n              description: \"No soy or products containing soy\",\n            },\n            {\n              name: \"Sugar-conscious\",\n              apiName: \"sugar-conscious\",\n              description: \"Less than 4g of sugar per serving\",\n            },\n            {\n              name: \"Tree Nuts\",\n              apiName: \"tree-nut-free\",\n              description: \"No tree nuts or products containing tree nuts\",\n            },\n            {\n              name: \"Vegan\",\n              apiName: \"vegan\",\n              description: \"No meat, poultry, fish, dairy, eggs or honey\",\n            },\n            {\n              name: \"Vegetarian\",\n              apiName: \"vegetarian\",\n              description: \"No meat, poultry, or fish\",\n            },\n            {\n              name: \"Wheat-free\",\n              apiName: \"wheat-free\",\n              description: \"No wheat, can have gluten though\",\n            },\n          ],\n        }}\n        // || validation using yup\n        validationSchema={validationSchema}\n        onSubmit={(data, { setSubmitting, resetForm }) => {\n          setSubmitting(true);\n          // *make async call\n          console.log(\"Submit: \", data);\n          setSubmitting(false);\n          resetForm(true);\n        }}\n      >\n        {({ values, errors, isSubmitting, handleBlur }) => (\n          <Form style={{ margin: \"10px\", marginLeft: \"7%\", marginRight: \"7%\" }}>\n            <div style={{ width: \"70%\" }}>\n              <div className={classes.root}>{\"Search: \"}</div>\n              <TextField\n                variant=\"outlined\"\n                id=\"search\"\n                label=\"Search\"\n                type=\"search\"\n                placeholder=\"Chicken\"\n                fullWidth\n              />\n            </div>\n\n            <div className={classes.root}>{\"Items per Page: \"}</div>\n\n            <Grid container spacing={2} alignItems=\"center\">\n              <Grid item xs={9}>\n                <Slider\n                  value={typeof value === \"number\" ? value : 0}\n                  onChange={handleSliderChange}\n                  defaultValue={10}\n                  getAriaValueText={valuetext}\n                  aria-labelledby=\"item-slider\"\n                  valueLabelDisplay=\"auto\"\n                  step={1}\n                  min={10}\n                  max={50}\n                />\n              </Grid>\n              <Grid item xs={3}>\n                <TextField\n                  defaultValue=\"10\"\n                  value={value}\n                  onChange={handleInputChange}\n                  onBlur={handleBlur}\n                  type=\"number\"\n                  inputProps={{\n                    step: 5,\n                    min: 10,\n                    max: 50,\n                    \"aria-labelledby\": \"item-slider\",\n                    shrink: true,\n                  }}\n                />\n              </Grid>\n            </Grid>\n\n            <div className={classes.root}>{\"Meal Type: \"}</div>\n            <FormControl className={classes.formControl}>\n              <InputLabel id=\"MealTypeLabel\">Meal Type</InputLabel>\n              <Select\n                labelId=\"MealTypeSelectLabel\"\n                id=\"MealTypeSelect\"\n                value={selectMealTypes}\n                onChange={handleChange}\n              >\n                <MenuItem value=\"breakfast\">Breakfast</MenuItem>\n                <MenuItem value=\"lunch\">Lunch</MenuItem>\n                <MenuItem value=\"dinner\">Dinner</MenuItem>\n                <MenuItem value=\"snack\">Snack</MenuItem>\n              </Select>\n            </FormControl>\n            {/* multiple checkboxes starts here */}\n            <div className={classes.root}>{\"Dish Type: \"}</div>\n            <FieldArray name=\"Dish Type\">\n              {(arrayHelpers) =>\n                values.dishTypes.map((dishType) => {\n                  return (\n                    <MyCheckBox\n                      name=\"dishType\"\n                      type=\"checkbox\"\n                      value={dishType}\n                      as={Checkbox}\n                      label={dishType}\n                    />\n                  );\n                })\n              }\n            </FieldArray>\n            {/* multiple checkboxes ends here */}\n\n            <div className={classes.root}>{\"Cuisine Type: \"}</div>\n            <FieldArray name=\"CuisineTypes\">\n              {(arrayHelpers) =>\n                values.cuisineTypes.map((cuisineType) => {\n                  return (\n                    <MyRadio\n                      name=\"cuisineType\"\n                      type=\"radio\"\n                      value={cuisineType}\n                      as={Radio}\n                      label={cuisineType}\n                    />\n                  );\n                })\n              }\n            </FieldArray>\n\n            {/* Radio Button starts here */}\n            <div className={classes.root}>{\"Diet: \"}</div>\n            <FieldArray name=\"Diet\">\n              {(arrayHelpers) =>\n                values.dietLabels.map((dietLabel) => {\n                  return (\n                    <MyRadio\n                      name=\"dietLabel\"\n                      type=\"radio\"\n                      value={dietLabel.name}\n                      as={Radio}\n                      label={dietLabel.name}\n                    />\n                  );\n                })\n              }\n            </FieldArray>\n            {/* Radio Buttons ends here */}\n\n            <div className={classes.root}>{\"Health Label: \"}</div>\n            <FieldArray name=\"HealthLabel\">\n              {(arrayHelpers) =>\n                values.healthLabels.map((healthLabel) => {\n                  return (\n                    <div>\n                      <Typography\n                        aria-owns={open ? \"mouse-over-popover\" : undefined}\n                        aria-haspopup=\"true\"\n                        onMouseEnter={handlePopoverOpen}\n                        onMouseLeave={handlePopoverClose}\n                      >\n                        <MyCheckBox\n                          name=\"healthLabel\"\n                          type=\"checkbox\"\n                          value={healthLabel.name}\n                          as={Checkbox}\n                          label={healthLabel.name}\n                        />\n                      </Typography>\n                      <Popover\n                        id=\"mouse-over-popover\"\n                        className={classes.popover}\n                        classes={{\n                          paper: classes.paper,\n                        }}\n                        open={open}\n                        anchorEl={anchorEl}\n                        anchorOrigin={{\n                          vertical: \"bottom\",\n                          horizontal: \"left\",\n                        }}\n                        transformOrigin={{\n                          vertical: \"top\",\n                          horizontal: \"left\",\n                        }}\n                        onClose={handlePopoverClose}\n                        disableRestoreFocus\n                      >\n                        <Typography>{healthLabel.description}</Typography>\n                      </Popover>\n                    </div>\n                  );\n                })\n              }\n            </FieldArray>\n\n            <div>\n              <Button disabled={isSubmitting} type=\"submit\">\n                Submit\n              </Button>\n            </div>\n            <pre>{JSON.stringify(values, null, 2)}</pre>\n            <pre>{JSON.stringify(errors, null, 2)}</pre>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default FormikForm;\n"]},"metadata":{},"sourceType":"module"}