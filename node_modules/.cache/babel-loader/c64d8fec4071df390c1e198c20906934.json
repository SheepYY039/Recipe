{"ast":null,"code":"var _jsxFileName = \"/Users/yeungj12/Projects/FrontEnd/ReactJS/frontend014_recipe/src/App.js\";\nimport React, { useEffect, useState } from \"react\";\nimport Recipe from \"./Recipe\";\nimport Nav from \"./Nav\";\nimport PaginationFooter from \"./Pagination\";\nimport Modal from \"react-modal\";\nimport PopoverStickOnHover from \"./PopOver\";\nimport FormikForm from \"./FormikForm\";\nimport { Form } from \"react-bootstrap\";\nimport { TextField, Button, Checkbox, Radio, FormControlLabel, Select, MenuItem } from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport \"./App.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\nModal.setAppElement(\"#root\");\n\nconst App = () => {\n  const APP_ID = \"65eff37b\";\n  const APP_KEY = \"013e642e140af7db99a3663be34125e2\";\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [query, setQuery] = useState(\"chicken\");\n  const [isHovered, setIsHovered] = useState(false);\n  const [cards, setCards] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [cardsPerPage, setCardsPerPage] = useState(10);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  let indexOfFirstCard = 0;\n  let indexOfLastCard = 10;\n  let inputClass = \"search-bar\";\n  let buttonClass = \"search-button\";\n  const [searchRange, setSearchRange] = useState(\"&from=0&to=10\");\n  useEffect(() => {\n    async function getRecipes() {\n      // get current posts\n      setLoading(true); // || use await for data that doesn't come back instantly\n\n      const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}${searchRange}`);\n      const data = await response.json();\n      setRecipes(data.hits);\n      setCards(data);\n      console.log(data);\n      setLoading(false);\n    }\n\n    getRecipes();\n  }, [query, searchRange]);\n  console.log(cards);\n  const totalCards = 100;\n  console.log(totalCards); //change page\n\n  const paginate = pageNumber => {\n    console.log(pageNumber);\n    setCurrentPage(pageNumber);\n    console.log(currentPage);\n    indexOfLastCard = pageNumber * cardsPerPage;\n    indexOfFirstCard = indexOfLastCard - cardsPerPage;\n    console.log(indexOfLastCard);\n    console.log(indexOfFirstCard);\n    setSearchRange(`&from=${indexOfFirstCard}&to=${indexOfLastCard}`);\n  };\n\n  const updateSearch = e => {\n    setSearch(e.target.value);\n  };\n\n  const getSearch = e => {\n    // || prevent page refresh\n    e.preventDefault();\n\n    if (!(search === \"\" || search === \" \")) {\n      setQuery(search);\n      setSearch(\"\");\n    }\n  };\n\n  const getAdvancedSearch = e => {\n    e.preventDefault();\n\n    if (!(search === \"\" || search === \" \")) {\n      setQuery(search);\n      setSearch(\"\");\n    }\n\n    setCardsPerPage();\n  };\n\n  if (isHovered) {\n    inputClass = \"search-bar-expand search-bar\";\n    buttonClass = \"search-button search-button-expand\";\n  } else {\n    inputClass = \"search-bar\";\n    buttonClass = \"search-button\";\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, \"Showing Results for:\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, query)), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: getSearch,\n    className: \"search-form\",\n    onMouseEnter: () => setIsHovered(true),\n    onMouseLeave: () => setIsHovered(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: inputClass,\n    value: search,\n    onChange: updateSearch,\n    placeholder: \"Type to search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: buttonClass,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setModalIsOpen(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, \"Advanced Search\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"recipes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }, recipes.map(recipe => /*#__PURE__*/React.createElement(Recipe, {\n    key: recipe.recipe.label + recipe.recipe.calories,\n    title: recipe.recipe.label,\n    calories: recipe.recipe.calories,\n    image: recipe.recipe.image,\n    ingredients: recipe.recipe.ingredients,\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"footer\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PaginationFooter, {\n    cardsPerPage: cardsPerPage,\n    totalCards: totalCards,\n    paginate: paginate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: modalIsOpen,\n    onRequestClose: () => setModalIsOpen(false),\n    style: {\n      overlay: {\n        backgroundColor: \"rgba(0,0,0,0.7)\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ModalHeader\",\n    style: {\n      display: \"flex\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  }, \"Advanced Search\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ModalContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormikForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: getAdvancedSearch,\n    className: \"advanced-search-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"Search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 15\n    }\n  }, \"Search: \"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Chicken\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"NoOfItems\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 15\n    }\n  }, \"Number of Items Per Page\"), /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 17\n    }\n  }, \"10\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 17\n    }\n  }, \"15\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 17\n    }\n  }, \"20\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 17\n    }\n  }, \"25\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 17\n    }\n  }, \"30\"))), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"MealType\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 15\n    }\n  }, \"Meal Type: \"), /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 17\n    }\n  }, \"Breakfast\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 17\n    }\n  }, \"Lunch\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 17\n    }\n  }, \"Dinner\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 17\n    }\n  }, \"Snack\"))), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"DishType\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 15\n    }\n  }, \"Dish Type\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 15\n    }\n  }, dishTypes.map((dishType, index) => /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"inline-flex\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Form.Check, {\n    inline: true,\n    label: `${dishType} `,\n    type: \"checkbox\",\n    id: `inline-${dishType}-${index}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 21\n    }\n  }))))), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"CuisineType\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 15\n    }\n  }, \"Cuisine Types\"), /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 15\n    }\n  }, cuisineTypes.map(cuisineType => /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 19\n    }\n  }, cuisineType)))), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"Diet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 17\n    }\n  }, \"Diet\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 17\n    }\n  }, dietLabels.map((dietLabel, index) => /*#__PURE__*/React.createElement(PopoverStickOnHover, {\n    component: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 34\n      }\n    }, `${dietLabel.description}`),\n    placement: \"top\",\n    onMouseEnter: () => {},\n    delay: 200,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"inline-flex\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Form.Check, {\n    inline: true,\n    label: `${dietLabel.name} `,\n    type: \"radio\",\n    name: \"formHorizontalRadios\",\n    id: `inline-${dietLabel.name}-${index}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 25\n    }\n  }))))))), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"HealthLabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 15\n    }\n  }, \"Health Labels\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 15\n    }\n  }, healthLabels.map((healthLabel, index) => /*#__PURE__*/React.createElement(PopoverStickOnHover, {\n    component: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 32\n      }\n    }, `${healthLabel.description}`),\n    placement: \"top\",\n    onMouseEnter: () => {},\n    delay: 200,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"inline-flex\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Check, {\n    inline: true,\n    label: `${healthLabel.name} `,\n    type: \"checkbox\",\n    id: `inline-${healthLabel.name}-${index}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 23\n    }\n  })))))), /*#__PURE__*/React.createElement(Button, {\n    variant: \"success\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 13\n    }\n  }, \"Submit\"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setModalIsOpen(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 11\n    }\n  }, \"Close\"))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/yeungj12/Projects/FrontEnd/ReactJS/frontend014_recipe/src/App.js"],"names":["React","useEffect","useState","Recipe","Nav","PaginationFooter","Modal","PopoverStickOnHover","FormikForm","Form","TextField","Button","Checkbox","Radio","FormControlLabel","Select","MenuItem","Typography","FontAwesomeIcon","faSearch","setAppElement","App","APP_ID","APP_KEY","recipes","setRecipes","search","setSearch","query","setQuery","isHovered","setIsHovered","cards","setCards","loading","setLoading","currentPage","setCurrentPage","cardsPerPage","setCardsPerPage","modalIsOpen","setModalIsOpen","indexOfFirstCard","indexOfLastCard","inputClass","buttonClass","searchRange","setSearchRange","getRecipes","response","fetch","data","json","hits","console","log","totalCards","paginate","pageNumber","updateSearch","e","target","value","getSearch","preventDefault","getAdvancedSearch","map","recipe","label","calories","image","ingredients","overlay","backgroundColor","display","dishTypes","dishType","index","cuisineTypes","cuisineType","dietLabels","dietLabel","description","name","healthLabels","healthLabel"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport Recipe from \"./Recipe\";\nimport Nav from \"./Nav\";\nimport PaginationFooter from \"./Pagination\";\nimport Modal from \"react-modal\";\n\nimport PopoverStickOnHover from \"./PopOver\";\nimport FormikForm from \"./FormikForm\";\n\nimport { Form } from \"react-bootstrap\";\nimport {\n  TextField,\n  Button,\n  Checkbox,\n  Radio,\n  FormControlLabel,\n  Select,\n  MenuItem,\n} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport \"./App.css\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\n\nModal.setAppElement(\"#root\");\n\nconst App = () => {\n  const APP_ID = \"65eff37b\";\n  const APP_KEY = \"013e642e140af7db99a3663be34125e2\";\n\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [query, setQuery] = useState(\"chicken\");\n  const [isHovered, setIsHovered] = useState(false);\n  const [cards, setCards] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [cardsPerPage, setCardsPerPage] = useState(10);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n\n  let indexOfFirstCard = 0;\n  let indexOfLastCard = 10;\n  let inputClass = \"search-bar\";\n  let buttonClass = \"search-button\";\n\n  const [searchRange, setSearchRange] = useState(\"&from=0&to=10\");\n\n  useEffect(() => {\n    async function getRecipes() {\n      // get current posts\n      setLoading(true);\n      // || use await for data that doesn't come back instantly\n      const response = await fetch(\n        `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}${searchRange}`\n      );\n      const data = await response.json();\n      setRecipes(data.hits);\n      setCards(data);\n      console.log(data);\n      setLoading(false);\n    }\n    getRecipes();\n  }, [query, searchRange]);\n\n  console.log(cards);\n\n  const totalCards = 100;\n  console.log(totalCards);\n\n  //change page\n  const paginate = (pageNumber) => {\n    console.log(pageNumber);\n    setCurrentPage(pageNumber);\n\n    console.log(currentPage);\n    indexOfLastCard = pageNumber * cardsPerPage;\n    indexOfFirstCard = indexOfLastCard - cardsPerPage;\n\n    console.log(indexOfLastCard);\n\n    console.log(indexOfFirstCard);\n    setSearchRange(`&from=${indexOfFirstCard}&to=${indexOfLastCard}`);\n  };\n\n  const updateSearch = (e) => {\n    setSearch(e.target.value);\n  };\n\n  const getSearch = (e) => {\n    // || prevent page refresh\n    e.preventDefault();\n    if (!(search === \"\" || search === \" \")) {\n      setQuery(search);\n      setSearch(\"\");\n    }\n  };\n\n  const getAdvancedSearch = (e) => {\n    e.preventDefault();\n    if (!(search === \"\" || search === \" \")) {\n      setQuery(search);\n      setSearch(\"\");\n    }\n    setCardsPerPage();\n  };\n\n  if (isHovered) {\n    inputClass = \"search-bar-expand search-bar\";\n    buttonClass = \"search-button search-button-expand\";\n  } else {\n    inputClass = \"search-bar\";\n    buttonClass = \"search-button\";\n  }\n\n  return (\n    <div className=\"App\">\n      <Nav />\n      <div className=\"search-box\">\n        <p>\n          Showing Results for:\n          <br />\n          <h4>{query}</h4>\n        </p>\n        <form\n          onSubmit={getSearch}\n          className=\"search-form\"\n          onMouseEnter={() => setIsHovered(true)}\n          onMouseLeave={() => setIsHovered(false)}\n        >\n          <input\n            type=\"text\"\n            className={inputClass}\n            value={search}\n            onChange={updateSearch}\n            placeholder=\"Type to search\"\n          />\n          <button className={buttonClass} type=\"submit\">\n            <FontAwesomeIcon icon={faSearch} />\n          </button>\n        </form>\n        <Button onClick={() => setModalIsOpen(true)}>Advanced Search</Button>\n      </div>\n\n      <div className=\"recipes\">\n        {/* // || .map function used for looping arrays */}\n        {recipes.map((recipe) => (\n          <Recipe\n            key={recipe.recipe.label + recipe.recipe.calories}\n            title={recipe.recipe.label}\n            calories={recipe.recipe.calories}\n            image={recipe.recipe.image}\n            ingredients={recipe.recipe.ingredients}\n            loading={loading}\n          />\n        ))}\n      </div>\n      <footer>\n        <PaginationFooter\n          cardsPerPage={cardsPerPage}\n          totalCards={totalCards}\n          paginate={paginate}\n        />\n      </footer>\n\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={() => setModalIsOpen(false)}\n        style={{ overlay: { backgroundColor: \"rgba(0,0,0,0.7)\" } }}\n      >\n        <div className=\"ModalHeader\" style={{ display: \"flex\" }}>\n          <h2>Advanced Search</h2>\n        </div>\n        <div className=\"ModalContent\">\n          <FormikForm />\n\n          <Form onSubmit={getAdvancedSearch} className=\"advanced-search-form\">\n            {/* Search Starts Here */}\n            <Form.Group controlId=\"Search\">\n              <Form.Label>Search: </Form.Label>\n              <Form.Control type=\"text\" placeholder=\"Chicken\" />\n            </Form.Group>\n            {/* Search Ends Here */}\n            {/* No. of Items Starts Here */}\n            <Form.Group controlId=\"NoOfItems\">\n              <Form.Label>Number of Items Per Page</Form.Label>\n              <Form.Control as=\"select\">\n                <option>10</option>\n                <option>15</option>\n                <option>20</option>\n                <option>25</option>\n                <option>30</option>\n              </Form.Control>\n            </Form.Group>\n            {/* No. of Items Ends Here */}\n            {/* Meal Type Starts Here */}\n            <Form.Group controlId=\"MealType\">\n              <Form.Label>Meal Type: </Form.Label>\n              <Form.Control as=\"select\">\n                <option>Breakfast</option>\n                <option>Lunch</option>\n                <option>Dinner</option>\n                <option>Snack</option>\n              </Form.Control>\n            </Form.Group>\n            <Form.Group controlId=\"DishType\">\n              <Form.Label>Dish Type</Form.Label>\n              <div className=\"mb-3\">\n                {dishTypes.map((dishType, index) => (\n                  <div style={{ display: \"inline-flex\" }}>\n                    <Form.Check\n                      inline\n                      label={`${dishType} `}\n                      type=\"checkbox\"\n                      id={`inline-${dishType}-${index}`}\n                    />\n                  </div>\n                ))}\n              </div>\n            </Form.Group>\n            {/* Meal Type Ends Here */}\n            {/* Cuisine Type Starts Here */}\n            <Form.Group controlId=\"CuisineType\">\n              <Form.Label>Cuisine Types</Form.Label>\n              <Form.Control as=\"select\">\n                {cuisineTypes.map((cuisineType) => (\n                  <option>{cuisineType}</option>\n                ))}\n              </Form.Control>\n            </Form.Group>\n            {/* CuisineType Ends Here */}\n            {/* Diet Starts Here */}\n            <fieldset>\n              <Form.Group controlId=\"Diet\">\n                <Form.Label>Diet</Form.Label>\n                <div className=\"mb-3\">\n                  {dietLabels.map((dietLabel, index) => (\n                    <PopoverStickOnHover\n                      component={<div>{`${dietLabel.description}`}</div>}\n                      placement=\"top\"\n                      onMouseEnter={() => {}}\n                      delay={200}\n                    >\n                      <div style={{ display: \"inline-flex\" }}>\n                        <Form.Check\n                          inline\n                          label={`${dietLabel.name} `}\n                          type=\"radio\"\n                          name=\"formHorizontalRadios\"\n                          id={`inline-${dietLabel.name}-${index}`}\n                        />\n                      </div>\n                    </PopoverStickOnHover>\n                  ))}\n                </div>\n              </Form.Group>\n            </fieldset>\n            {/* Diet Ends Here */}\n            {/* Health Labels Starts Here */}\n            <Form.Group controlId=\"HealthLabel\">\n              <Form.Label>Health Labels</Form.Label>\n              <div className=\"mb-3\">\n                {healthLabels.map((healthLabel, index) => (\n                  <PopoverStickOnHover\n                    component={<div>{`${healthLabel.description}`}</div>}\n                    placement=\"top\"\n                    onMouseEnter={() => {}}\n                    delay={200}\n                  >\n                    <div style={{ display: \"inline-flex\" }}>\n                      <Form.Check\n                        inline\n                        label={`${healthLabel.name} `}\n                        type=\"checkbox\"\n                        id={`inline-${healthLabel.name}-${index}`}\n                      />\n                    </div>\n                  </PopoverStickOnHover>\n                ))}\n              </div>\n            </Form.Group>\n            {/* Health Label Ends here */}\n            <Button variant=\"success\" type=\"submit\">\n              Submit\n            </Button>\n          </Form>\n        </div>\n\n        <div>\n          <button onClick={() => setModalIsOpen(false)}>Close</button>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}