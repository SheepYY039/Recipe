{"version":3,"sources":["initialValues.js","Recipe/Card.js","Recipe/CustomScrollBars.js","Recipe/Recipe.js","Nav/NavItems.js","Nav/NavPrint.js","Nav/Nav.js","Recipe/Pagination.js","App.js","serviceWorker.js","index.js","Nav/Nav.module.css","Recipe/Recipe.module.css"],"names":["module","exports","search","cardsPerPage","dishTypes","dietLabels","name","apiName","description","cuisineTypes","healthLabels","Card","styled","div","CustomScrollbars","props","context","rest","state","scrollTop","scrollHeight","clientHeight","top","handleUpdate","bind","handleScrollFrame","renderView","renderTrackVertical","renderThumbVertical","values","this","refs","shadowTop","shadowBottom","shadowTopOpacity","Math","min","bottomScrollTop","shadowBottomOpacity","max","css","opacity","style","finalStyle","display","width","className","thumbStyle","setState","backgroundColor","Props","ref","onScrollFrame","onUpdate","autoHide","Component","Recipe","title","calories","image","ingredients","recipe","card","flipOnHover","flipOnClick","flipDirection","front","elementType","animationDuration","frontContent","h1Container","mode","forceSingleModeWidth","height","justifyContent","alignItems","textTransform","src","alt","back","recipeContent","map","ingredient","i","key","text","NavItems","index","time","navLinkFade","keyframes","NavListItem","li","NavPrint","isMobile","navItems","navItem","id","React","Nav","window","innerWidth","useState","isOpened","setIsOpened","logo","navLinks","navActive","onClick","burger","toggle","line1","line2","line3","PaginationFooter","totalCards","paginate","pageNumbers","ceil","push","marginTop","marginBottom","number","href","color","Modal","setAppElement","initialValues","require","App","APP_KEY","recipes","setRecipes","setSearch","query","setQuery","isHovered","setIsHovered","setCards","loading","setLoading","currentPage","setCurrentPage","setCardsPerPage","modalIsOpen","setModalIsOpen","indexOfFirstCard","indexOfLastCard","inputClass","buttonClass","searchRange","setSearchRange","choose","useEffect","a","console","log","fetch","response","json","data","hits","getRecipes","updateSearch","e","target","value","MyRadio","label","useField","field","FormControlLabel","control","GreenRadio","withStyles","root","green","checked","Radio","MyCheckBox","GreenCheckbox","Checkbox","classes","yup","required","pets","of","makeStyles","theme","typography","button","palette","background","paper","padding","spacing","fontSize","input","sliderRoot","formControl","margin","minWidth","popover","pointerEvents","useStyles","handleSliderChange","event","newValue","handleInputChange","Number","valuetext","onSubmit","preventDefault","trim","onMouseEnter","onMouseLeave","type","onChange","placeholder","icon","faSearch","Button","count","Pagination","pageNumber","isOpen","onRequestClose","overlay","marginLeft","setSubmitting","resetForm","MealType","tempSearchRange","dietLabel","healthLabel","HealthLabel","length","element","getAdvancedSearch","isSubmitting","errors","handleBlur","marginRight","TextField","variant","fullWidth","Grid","container","item","xs","Slider","getAriaValueText","aria-labelledby","valueLabelDisplay","step","onBlur","inputProps","InputLabelProps","shrink","arrayHelpers","as","row","disabled","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f76b3aa6.chunk.js","sourcesContent":["module.exports = {\n  search: \"\",\n  cardsPerPage: 10,\n  // cardsPerPage: `${cardsPerPage}`,\n  dishTypes: [\n    \"Bread\",\n    \"Cereals\",\n    \"Condiments and sauces\",\n    \"Drinks\",\n    \"Desserts\",\n    \"Main course\",\n    \"Pancake\",\n    \"Preps\",\n    \"Preserve\",\n    \"Salad\",\n    \"Sandwiches\",\n    \"Side dish\",\n    \"Soup\",\n    \"Starter\",\n    \"Sweets\",\n  ],\n  dietLabels: [\n    {\n      name: \"Balanced\",\n      apiName: \"balanced\",\n      description: \"Protein/Fat/Carb values in 15/35/50 ratio\",\n    },\n    // {\n    //   name: \"High-Fiber\",\n    //   apiName: \"high-fiber\",\n    //   description: \"More than 5g fiber per serving\",\n    // },\n    {\n      name: \"High-Protein\",\n      apiName: \"high-protein\",\n      description: \"More than 50% of total calories from proteins\",\n    },\n    {\n      name: \"Low-Carb\",\n      apiName: \"low-carb\",\n      description: \"Less than 20% of total calories from carbs\",\n    },\n    {\n      name: \"Low-Fat\",\n      apiName: \"low-fat\",\n      description: \"Less than 15% of total calories from fat\",\n    },\n    // {\n    //   name: \"Low-Sodium\",\n    //   apiName: \"low-sodium\",\n    //   description: \"Less than 140mg Na per serving\",\n    // },\n  ],\n  cuisineTypes: [\n    \"American\",\n    \"Asian\",\n    \"British\",\n    \"Caribbean\",\n    \"Central Europe\",\n    \"Chinese\",\n    \"Eastern Europe\",\n    \"French\",\n    \"Indian\",\n    \"Italian\",\n    \"Japanese\",\n    \"Kosher\",\n    \"Mediterranean\",\n    \"Mexican\",\n    \"Middle Eastern\",\n    \"Nordic\",\n    \"South American\",\n    \"South East Asian\",\n  ],\n  healthLabels: [\n    {\n      name: \"Alcohol-free\",\n      apiName: \"alcohol-free\",\n      description: \"No alcohol used or contained\",\n    },\n    // {\n    //   name: \"Celery-free\",\n    //   apiName: \"celery-free\",\n    //   description: \"does not contain celery or derivatives\",\n    // },\n    // {\n    //   name: \"Crustacean-free\",\n    //   apiName: \"crustacean-free\",\n    //   description:\n    //     \"does not contain crustaceans (shrimp, lobster etc.) or derivatives\",\n    // },\n    // {\n    //   name: \"Dairy\",\n    //   apiName: \"dairy-free\",\n    //   description: \"No dairy; no lactose\",\n    // },\n    // {\n    //   name: \"Eggs\",\n    //   apiName: \"egg-free\",\n    //   description: \"No eggs or products containing eggs\",\n    // },\n    // {\n    //   name: \"Fish\",\n    //   apiName: \"fish-free\",\n    //   description: \"No fish or fish derivatives\",\n    // },\n    // {\n    //   name: \"FODMAP free\",\n    //   apiName: \"fodmap-free\",\n    //   description: \"Does not contain FODMAP foods\",\n    // },\n    // {\n    //   name: \"Gluten\",\n    //   apiName: \"gluten-free\",\n    //   description: \"No ingredients containing gluten\",\n    // },\n    // {\n    //   name: \"Keto\",\n    //   apiName: \"keto-friendly\",\n    //   description: \"Maximum 7 grams of net carbs per serving\",\n    // },\n    // {\n    //   name: \"Kidney friendly\",\n    //   apiName: \"kidney-friendly\",\n    //   description:\n    //     \"per serving – phosphorus less than 250 mg AND potassium less than 500 mg AND sodium: less than 500 mg\",\n    // },\n    // {\n    //   name: \"Kosher\",\n    //   apiName: \"kosher\",\n    //   description:\n    //     \"contains only ingredients allowed by the kosher diet. However it does not guarantee kosher preparation of the ingredients themselves\",\n    // },\n    // {\n    //   name: \"Low potassium\",\n    //   apiName: \"low-potassium\",\n    //   description: \"Less than 150mg per serving\",\n    // },\n    // {\n    //   name: \"Lupine-free\",\n    //   apiName: \"lupine-free\",\n    //   description: \"does not contain lupine or derivatives\",\n    // },\n    // {\n    //   name: \"Mustard-free\",\n    //   apiName: \"mustard-free\",\n    //   description: \"does not contain mustard or derivatives\",\n    // },\n    // {\n    //   name: \"n/a\",\n    //   apiName: \"low-fat-abs\",\n    //   description: \"Less than 3g of fat per serving\",\n    // },\n    // {\n    //   name: \"No oil added\",\n    //   apiName: \"No-oil-added\",\n    //   description:\n    //     \"No oil added except to what is contained in the basic ingredients\",\n    // },\n    {\n      name: \"No-sugar\",\n      apiName: \"low-sugar\",\n      description:\n        \"No simple sugars – glucose, dextrose, galactose, fructose, sucrose, lactose, maltose\",\n    },\n    // {\n    //   name: \"Paleo\",\n    //   apiName: \"paleo\",\n    //   description:\n    //     \"Excludes what are perceived to be agricultural products; grains, legumes, dairy products, potatoes, refined salt, refined sugar, and processed oils\",\n    // },\n    {\n      name: \"Peanuts\",\n      apiName: \"peanut-free\",\n      description: \"No peanuts or products containing peanuts\",\n    },\n    // {\n    //   name: \"Pescatarian\",\n    //   apiName: \"pecatarian\",\n    //   description:\n    //     \"Does not contain meat or meat based products, can contain dairy and fish\",\n    // },\n    // {\n    //   name: \"Pork-free\",\n    //   apiName: \"pork-free\",\n    //   description: \"does not contain pork or derivatives\",\n    // },\n    // {\n    //   name: \"Red meat-free\",\n    //   apiName: \"red-meat-free\",\n    //   description:\n    //     \"does not contain beef, lamb, pork, duck, goose, game, horse, and other types of red meat or products containing red meat.\",\n    // },\n    // {\n    //   name: \"Sesame-free\",\n    //   apiName: \"sesame-free\",\n    //   description: \"does not contain sesame seed or derivatives\",\n    // },\n    // {\n    //   name: \"Shellfish\",\n    //   apiName: \"shellfish-free\",\n    //   description: \"No shellfish or shellfish derivatives\",\n    // },\n    // {\n    //   name: \"Soy\",\n    //   apiName: \"soy-free\",\n    //   description: \"No soy or products containing soy\",\n    // },\n    {\n      name: \"Sugar-conscious\",\n      apiName: \"sugar-conscious\",\n      description: \"Less than 4g of sugar per serving\",\n    },\n    {\n      name: \"Tree Nuts\",\n      apiName: \"tree-nut-free\",\n      description: \"No tree nuts or products containing tree nuts\",\n    },\n    {\n      name: \"Vegan\",\n      apiName: \"vegan\",\n      description: \"No meat, poultry, fish, dairy, eggs or honey\",\n    },\n    {\n      name: \"Vegetarian\",\n      apiName: \"vegetarian\",\n      description: \"No meat, poultry, or fish\",\n    },\n    // {\n    //   name: \"Wheat-free\",\n    //   apiName: \"wheat-free\",\n    //   description: \"No wheat, can have gluten though\",\n    // },\n  ],\n};\n","import styled from \"styled-components\";\n\nexport const Card = styled.div`\n  height: 100%;\n  width: 100%;\n\n  border-radius: 10px;\n\n  background-color: #e7ffe6;\n\n  box-shadow: 0px 5px 20px rgb(71, 71, 71);\n\n  align-items: center;\n  position: relative;\n  display: inline-block;\n\n  curser: pointer;\n  transition: transform 300ms ease-in-out;\n`;\n\nexport default Card;\n","import css from \"dom-css\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Scrollbars } from \"react-custom-scrollbars\";\nimport \"./ScrollBar.css\";\n\nexport default class CustomScrollbars extends Component {\n  constructor(props, context, ...rest) {\n    super(props, context, ...rest);\n    this.state = {\n      scrollTop: 0,\n      scrollHeight: 0,\n      clientHeight: 0,\n      top: 0,\n    };\n    this.handleUpdate = this.handleUpdate.bind(this);\n    this.handleScrollFrame = this.handleScrollFrame.bind(this);\n    this.renderView = this.renderView.bind(this);\n    this.renderTrackVertical = this.renderTrackVertical.bind(this);\n    this.renderThumbVertical = this.renderThumbVertical.bind(this);\n  }\n\n  handleUpdate(values) {\n    const { shadowTop, shadowBottom } = this.refs;\n    const { scrollTop, scrollHeight, clientHeight } = values;\n    const shadowTopOpacity = (1 / 20) * Math.min(scrollTop, 20);\n    const bottomScrollTop = scrollHeight - clientHeight;\n    const shadowBottomOpacity =\n      (1 / 20) * (bottomScrollTop - Math.max(scrollTop, bottomScrollTop - 20));\n    css(shadowTop, { opacity: shadowTopOpacity });\n    css(shadowBottom, { opacity: shadowBottomOpacity });\n  }\n\n  renderTrackVertical({ style, ...props }) {\n    const finalStyle = {\n      ...style,\n      display: \"block\",\n      width: \"16px\",\n    };\n    return <div style={finalStyle} {...props} className=\"track-vertical\" />;\n  }\n\n  renderThumbVertical({ style, ...props }) {\n    const thumbStyle = {\n      ...style,\n      display: \"block\",\n    };\n    return <div style={{ thumbStyle }} {...props} className=\"thumb-vertical\" />;\n  }\n\n  handleScrollFrame(values) {\n    const { top } = values;\n    this.setState({ top });\n  }\n\n  renderView({ style, ...props }) {\n    const customStyle = {\n      backgroundColor: \"#D6F7DE\",\n    };\n    return <div {...props} style={{ ...style, ...customStyle }} />;\n  }\n\n  render() {\n    const { style, ...props } = this.props;\n    const Props = {\n      ...props,\n      ref: \"scrollbars\",\n      renderView: this.renderView,\n      onScrollFrame: this.handleScrollFrame,\n      renderTrackVertical: this.renderTrackVertical,\n      renderThumbVertical: this.renderThumbVertical,\n      onUpdate: this.handleUpdate,\n      autoHide: true,\n    };\n    return (\n      <div className=\"containerStyle\">\n        <Scrollbars {...Props} />\n        <div ref=\"shadowTop\" className=\"shadowTopStyle\" />\n        <div ref=\"shadowBottom\" className=\"shadowBottomStyle\" />\n      </div>\n    );\n  }\n}\n\nCustomScrollbars.propTypes = {\n  style: PropTypes.object,\n};\n","import React from \"react\";\nimport style from \"./Recipe.module.css\";\nimport Card from \"./Card\";\nimport CustomScrollBars from \"./CustomScrollBars\";\nimport { Textfit } from \"react-textfit\";\n\nimport Flippy, { FrontSide, BackSide } from \"react-flippy\";\n\nconst Recipe = ({ title, calories, image, ingredients }) => {\n  return (\n    // TODO Write a function or style to resize h1 to fit div\n    <div className={style.recipe}>\n      <Flippy\n        className={style.card}\n        flipOnHover={false}\n        flipOnClick={true}\n        flipDirection=\"horizontal\"\n        // *style={{ zIndex: 0 }}\n      >\n        <FrontSide\n          className={style.front}\n          elementType={Card}\n          animationDuration={300}\n        >\n          <div className={style.frontContent}>\n            <div className={style.h1Container}>\n              <Textfit\n                mode=\"single\"\n                forceSingleModeWidth={false}\n                style={{\n                  height: \"69px\",\n                  width: \"100%\",\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  textTransform: \"capitalize\",\n                }}\n              >\n                {title}\n              </Textfit>\n            </div>\n\n            <img src={image} alt={title} />\n          </div>\n        </FrontSide>\n\n        <BackSide\n          className={`${style.back} ${style.card}`}\n          animationDuration={300}\n        >\n          <div className={style.recipeContent}>\n            <h3>Ingredients</h3>\n            <CustomScrollBars>\n              <div\n                style={{\n                  height: \"100%\",\n                  display: \"flex\",\n                }}\n              >\n                <ol>\n                  {ingredients.map((ingredient, i) => {\n                    return (\n                      <li\n                        style={{ textTransform: \"lowercase\" }}\n                        key={[i, \"-\", ingredient]}\n                      >\n                        {ingredient.text}\n                      </li>\n                    );\n                  })}\n                </ol>\n              </div>\n            </CustomScrollBars>\n            <p>\n              Calories: <strong>{calories}</strong> cal\n            </p>\n          </div>\n        </BackSide>\n      </Flippy>\n    </div>\n  );\n};\n\nexport default Recipe;\n","import React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\n\nconst NavItems = ({ name, index }) => {\n  const time = `${index}` / 7 + 0.3 + \"s\";\n\n  var navLinkFade = keyframes`\n  0% { opacity: 0; transform: translate(50px); }\n  100% { opacity: 1; transform: translateX(0px); }\n  `;\n  const NavListItem = styled.li`\n    animation: ${navLinkFade} 0.5s ${time} forwards ease;\n  `;\n\n  return <NavListItem key={index}>{name}</NavListItem>;\n};\n\nexport default NavItems;\n","import React from \"react\";\nimport NavItems from \"./NavItems\";\n\nexport default class NavPrint extends React.Component {\n  render() {\n    if (this.props.isMobile) {\n      return this.props.navItems.map((navItem) => (\n        <NavItems name={navItem.name} index={navItem.id} />\n      ));\n    } else {\n      return this.props.navItems.map((navItem) => (\n        <li key={navItem.id}>{navItem.name}</li>\n      ));\n    }\n  }\n}\n","import React, { useState } from \"react\";\nimport style from \"./Nav.module.css\";\nimport NavPrint from \"./NavPrint\";\n\nconst Nav = () => {\n  const isMobile = window.innerWidth < 768;\n\n  const navItems = [\n    { id: 1, name: \"Home\" },\n    { id: 2, name: \"About\" },\n    { id: 3, name: \"Recipe\" },\n    { id: 4, name: \"Contact\" },\n  ];\n\n  const [isOpened, setIsOpened] = useState(false);\n\n  function navSlide() {\n    if (isOpened) {\n      setIsOpened(false);\n    } else {\n      setIsOpened(true);\n    }\n  }\n\n  return (\n    <nav>\n      <div className={style.logo}>\n        <h4>Ingredients</h4>\n      </div>\n\n      <ul\n        className={\n          isOpened === true\n            ? `${style.navLinks} ${style.navActive}`\n            : style.navLinks\n        }\n      >\n        <NavPrint navItems={navItems} isMobile={isMobile} />\n      </ul>\n\n      <div\n        onClick={navSlide}\n        className={\n          isOpened === false ? style.burger : `${style.burger} ${style.toggle}`\n        }\n      >\n        <div className={style.line1}></div>\n        <div className={style.line2}></div>\n        <div className={style.line3}></div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Nav;\n","import React from \"react\";\n\nconst PaginationFooter = ({ cardsPerPage, totalCards, paginate }) => {\n  const pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(totalCards / cardsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  return (\n    <nav style={{ backgroundColor: \"white\" }}>\n      <ul\n        className=\"pagination \"\n        style={{ marginTop: \"auto\", marginBottom: \"auto\" }}\n      >\n        {pageNumbers.map((number) => (\n          <li key={number} className=\"page-item\">\n            <a\n              onClick={() => paginate(number)}\n              href=\"!#\"\n              className=\"page-link\"\n              style={{ backgroundColor: \"white\", color: \"#49d290\" }}\n            >\n              {number}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nexport default PaginationFooter;\n","import React, { useEffect, useState } from \"react\";\n\nimport Recipe from \"./Recipe/Recipe\";\nimport Nav from \"./Nav/Nav\";\nimport PaginationFooter from \"./Recipe/Pagination\";\n\nimport \"./App.css\";\n\nimport \"typeface-roboto\";\n\nimport Modal from \"react-modal\";\nimport * as yup from \"yup\";\nimport { Formik, Form, useField, FieldArray } from \"formik\";\nimport {\n  TextField,\n  Button,\n  Checkbox,\n  Radio,\n  FormControlLabel,\n  Slider,\n  Grid,\n  RadioGroup,\n} from \"@material-ui/core\";\nimport { green } from \"@material-ui/core/colors\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\nModal.setAppElement(\"#root\");\nlet initialValues = require(\"./initialValues\");\nconst App = () => {\n  const APP_ID = \"65eff37b\";\n  const APP_KEY = \"013e642e140af7db99a3663be34125e2\";\n\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [query, setQuery] = useState(\"chicken\");\n  const [isHovered, setIsHovered] = useState(false);\n  const [cards, setCards] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [cardsPerPage, setCardsPerPage] = useState(10);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  let indexOfFirstCard = 0;\n  let indexOfLastCard = cardsPerPage;\n  let inputClass = \"search-bar\";\n  let buttonClass = \"search-button\";\n  initialValues[\"cardsPerPage\"] = cardsPerPage;\n\n  const [searchRange, setSearchRange] = useState(\n    `&from=${indexOfFirstCard}&to=${indexOfLastCard}`\n  );\n  let choose = \"\";\n\n  //use Effect\n  useEffect(() => {\n    async function getRecipes() {\n      // get current posts\n      console.log(\n        `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}${searchRange}`\n      );\n      setLoading(true);\n      // || use await for data that doesn't come back instantly\n      const response = await fetch(\n        `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}${searchRange}`\n      );\n      const data = await response.json();\n      setRecipes(data.hits);\n      setCards(data);\n      console.log(data);\n      setLoading(false);\n    }\n    getRecipes();\n  }, [query, searchRange]);\n\n  const totalCards = 100;\n\n  //change page\n  const paginate = (pageNumber) => {\n    setCurrentPage(pageNumber);\n    indexOfLastCard = pageNumber * cardsPerPage;\n    indexOfFirstCard = indexOfLastCard - cardsPerPage;\n    setSearchRange(`&from=${indexOfFirstCard}&to=${indexOfLastCard}`);\n  };\n\n  //updates search query string when typing\n  const updateSearch = (e) => {\n    setSearch(e.target.value);\n  };\n\n  const getSearch = (e) => {\n    // || prevent page refresh\n    e.preventDefault();\n    if (search.trim() !== \"\") {\n      setQuery(search);\n      setSearch(\"\");\n    }\n  };\n\n  const getAdvancedSearch = (e) => {\n    if (search.trim() !== \"\") {\n      setQuery(search);\n      setSearch(\"\");\n    }\n\n    let tempSearchRange = ``;\n\n    if (cardsPerPage !== 10) {\n      indexOfLastCard = currentPage * cardsPerPage;\n      indexOfFirstCard = indexOfLastCard - cardsPerPage;\n\n      tempSearchRange += `&from=${indexOfFirstCard}&to=${indexOfLastCard}`;\n    }\n\n    if (choose.dietLabel !== \"\") {\n      console.log(choose.dietLabel);\n      const dietLabel = choose.dietLabel;\n      tempSearchRange += `&diet=${dietLabel}`;\n      console.log(searchRange);\n    }\n\n    if (choose.healthLabel !== \"\") {\n      console.log(choose.healthLabel);\n      const HealthLabel = choose.healthLabel;\n      for (let index = 0; index < HealthLabel.length; index++) {\n        const element = HealthLabel[index];\n        tempSearchRange += `&health=${element}`;\n      }\n    }\n    setSearchRange(tempSearchRange);\n    setModalIsOpen(false);\n    console.log(choose);\n  };\n\n  //search bar hover function\n  if (isHovered) {\n    inputClass = \"search-bar-expand search-bar\";\n    buttonClass = \"search-button search-button-expand\";\n  } else {\n    inputClass = \"search-bar\";\n    buttonClass = \"search-button\";\n  }\n\n  //MyRadio\n  const MyRadio = ({ label, ...props }) => {\n    const [field, meta] = useField(props);\n    return (\n      <FormControlLabel\n        {...props}\n        {...field}\n        control={<GreenRadio />}\n        label={label}\n      />\n    );\n  };\n\n  //Green Radio\n  const GreenRadio = withStyles({\n    root: {\n      color: green[400],\n      \"&$checked\": {\n        color: green[600],\n      },\n    },\n    checked: {},\n  })((props) => <Radio color=\"default\" {...props} />);\n\n  //My Checkbox\n  const MyCheckBox = ({ label, ...props }) => {\n    const [field, meta] = useField(props);\n\n    return (\n      <FormControlLabel\n        {...field}\n        {...props}\n        control={<GreenCheckbox />}\n        label={label}\n      />\n    );\n  };\n\n  //Green Checkbox\n  const GreenCheckbox = withStyles({\n    root: {\n      color: green[400],\n      \"&$checked\": {\n        color: green[600],\n      },\n    },\n    checked: {},\n  })((props) => <Checkbox color=\"default\" {...props} />);\n\n  //Validation Schema\n  const validationSchema = yup.object({\n    // || passing validation to search using yup\n    search: yup.string().required().max(10),\n    pets: yup.array().of(\n      yup.object({\n        name: yup.string().required(),\n      })\n    ),\n  });\n\n  //use Styles\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      ...theme.typography.button,\n      backgroundColor: theme.palette.background.paper,\n      padding: theme.spacing(1),\n      fontSize: \"1.5em\",\n    },\n    input: {\n      width: 42,\n    },\n    sliderRoot: {\n      width: \"50%\",\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 240,\n    },\n    popover: {\n      pointerEvents: \"none\",\n    },\n    paper: {\n      padding: theme.spacing(1),\n    },\n  }));\n\n  const classes = useStyles();\n\n  //slider change\n  const handleSliderChange = (event, newValue) => {\n    setCardsPerPage(newValue);\n  };\n\n  //input change next to slider\n  const handleInputChange = (event) => {\n    setCardsPerPage(\n      event.target.value === \"\" ? \"\" : Number(event.target.value)\n    );\n  };\n\n  //Slider Value Text sync function\n  function valuetext(value) {\n    return `${value}`;\n  }\n\n  return (\n    <div className=\"App\">\n      <Nav />\n      <div className=\"search-box\">\n        <p>Showing Results for:</p>\n        <h4 style={{ textTransform: \"uppercase\" }}>{query}</h4>\n        <form\n          onSubmit={getSearch}\n          className=\"search-form\"\n          onMouseEnter={() => setIsHovered(true)}\n          onMouseLeave={() => setIsHovered(false)}\n        >\n          <input\n            type=\"text\"\n            className={inputClass}\n            value={search}\n            onChange={updateSearch}\n            placeholder=\"Type to search\"\n          />\n          <button className={buttonClass} type=\"submit\">\n            <FontAwesomeIcon icon={faSearch} />\n          </button>\n        </form>\n        <Button onClick={() => setModalIsOpen(true)}>Advanced Search</Button>\n      </div>\n\n      <div className=\"recipes\">\n        {/* // || .map function used for looping arrays */}\n        {recipes.map((recipe, count) => (\n          <Recipe\n            key={recipe.recipe.label + count}\n            title={recipe.recipe.label}\n            calories={recipe.recipe.calories}\n            image={recipe.recipe.image}\n            ingredients={recipe.recipe.ingredients}\n            loading={loading}\n          />\n        ))}\n      </div>\n      <footer>\n        <PaginationFooter\n          cardsPerPage={cardsPerPage}\n          totalCards={totalCards}\n          paginate={paginate}\n        />\n      </footer>\n\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={() => setModalIsOpen(false)}\n        style={{\n          overlay: { backgroundColor: \"rgba(0,0,0,0.7)\" },\n        }}\n      >\n        <div\n          className=\"ModalHeader\"\n          style={{ display: \"flex\", marginLeft: \"7%\" }}\n        >\n          <h2>Advanced Search</h2>\n        </div>\n\n        <div className=\"ModalContent\">\n          <Formik\n            initialValues={initialValues}\n            // || validation using yup\n            // validationSchema={validationSchema}\n            onSubmit={(data, { setSubmitting, resetForm }) => {\n              setSubmitting(true);\n              // *make async call\n              choose = data;\n              console.log(choose.MealType);\n              getAdvancedSearch();\n              console.log(\"Submit: \", data);\n              setSubmitting(false);\n              resetForm(true);\n            }}\n            className=\"advanced-search-form\"\n          >\n            {({ values, errors, isSubmitting, handleBlur }) => (\n              <Form\n                style={{ margin: \"10px\", marginLeft: \"7%\", marginRight: \"7%\" }}\n              >\n                <div style={{ width: \"70%\" }}>\n                  <div className={classes.root}>{\"Search: \"}</div>\n                  <TextField\n                    variant=\"outlined\"\n                    id=\"search\"\n                    label=\"Search\"\n                    type=\"search\"\n                    placeholder=\"Chicken\"\n                    fullWidth\n                    onChange={updateSearch}\n                  />\n                </div>\n\n                <div className={classes.root}>{\"Items per Page: \"}</div>\n\n                <Grid container spacing={2} alignItems=\"center\">\n                  <Grid item xs={9}>\n                    <Slider\n                      name=\"cardsPerPage\"\n                      value={\n                        typeof cardsPerPage === \"number\" ? cardsPerPage : 0\n                      }\n                      onChange={handleSliderChange}\n                      // defaultValue={cardsPerPage}\n                      getAriaValueText={valuetext}\n                      aria-labelledby=\"item-slider\"\n                      valueLabelDisplay=\"auto\"\n                      step={1}\n                      min={10}\n                      max={50}\n                    />\n                  </Grid>\n                  <Grid item xs={3}>\n                    <TextField\n                      // defaultValue={cardsPerPage}\n                      name=\"cardsPerPage\"\n                      value={cardsPerPage}\n                      onChange={handleInputChange}\n                      onBlur={handleBlur}\n                      type=\"number\"\n                      inputProps={{\n                        step: 1,\n                        min: 10,\n                        max: 50,\n                        \"aria-labelledby\": \"item-slider\",\n                      }}\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                    />\n                  </Grid>\n                </Grid>\n\n                {/* Radio Button starts here */}\n                {/* <div className={classes.root}>{\"Meal Type: \"}</div>\n                <RadioGroup row>\n                  <MyRadio\n                    name=\"MealType\"\n                    type=\"radio\"\n                    value=\"Breakfast\"\n                    as={Radio}\n                    label=\"Breakfast\"\n                  />\n                  <MyRadio\n                    name=\"MealType\"\n                    type=\"radio\"\n                    value=\"Lunch\"\n                    as={Radio}\n                    label=\"Lunch\"\n                  />\n                  <MyRadio\n                    name=\"MealType\"\n                    type=\"radio\"\n                    value=\"Dinner\"\n                    as={Radio}\n                    label=\"Dinner\"\n                  />\n                  <MyRadio\n                    name=\"MealType\"\n                    type=\"radio\"\n                    value=\"Snack\"\n                    as={Radio}\n                    label=\"Snack\"\n                  />\n                </RadioGroup> */}\n\n                {/* Radio Buttons ends here */}\n                {/* multiple checkboxes starts here */}\n                {/* <div className={classes.root}>{\"Dish Type: \"}</div>\n                <FieldArray name=\"Dish Type\">\n                  {(arrayHelpers) =>\n                    values.dishTypes.map((dishType) => {\n                      return (\n                        <MyCheckBox\n                          key={dishType}\n                          name=\"dishType\"\n                          type=\"checkbox\"\n                          value={dishType}\n                          as={Checkbox}\n                          label={dishType}\n                        />\n                      );\n                    })\n                  }\n                </FieldArray> */}\n                {/* multiple checkboxes ends here */}\n\n                {/* <div className={classes.root}>{\"Cuisine Type: \"}</div>\n                <FieldArray name=\"CuisineTypes\">\n                  {(arrayHelpers) =>\n                    values.cuisineTypes.map((cuisineType) => {\n                      return (\n                        <MyRadio\n                          key={cuisineType}\n                          name=\"cuisineType\"\n                          type=\"radio\"\n                          value={cuisineType}\n                          as={Radio}\n                          label={cuisineType}\n                        />\n                      );\n                    })\n                  }\n                </FieldArray> */}\n\n                {/* Radio Button starts here */}\n                <div className={classes.root}>{\"Diet: \"}</div>\n                <FieldArray name=\"Diet\">\n                  {(arrayHelpers) =>\n                    values.dietLabels.map((dietLabel) => {\n                      return (\n                        <MyRadio\n                          key={dietLabel.apiName}\n                          name=\"dietLabel\"\n                          type=\"radio\"\n                          value={dietLabel.apiName}\n                          as={Radio}\n                          label={dietLabel.name}\n                        />\n                      );\n                    })\n                  }\n                </FieldArray>\n                {/* Radio Buttons ends here */}\n\n                <div className={classes.root}>{\"Health: \"}</div>\n                <FieldArray row name=\"Health\">\n                  {(arrayHelpers) =>\n                    values.healthLabels.map((healthLabel) => {\n                      return (\n                        <MyCheckBox\n                          key={healthLabel.apiName}\n                          name=\"healthLabel\"\n                          type=\"checkbox\"\n                          value={healthLabel.apiName}\n                          as={Checkbox}\n                          label={healthLabel.name}\n                        />\n                      );\n                    })\n                  }\n                </FieldArray>\n\n                <div>\n                  <Button disabled={isSubmitting} type=\"submit\">\n                    Submit\n                  </Button>\n                </div>\n                {/* <pre>{JSON.stringify(values, null, 2)}</pre> */}\n                {/* <pre>{JSON.stringify(errors, null, 2)}</pre> */}\n              </Form>\n            )}\n          </Formik>\n        </div>\n        <div>\n          <Button onClick={() => setModalIsOpen(false)}>Close</Button>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Nav_logo__3VcWi\",\"navLinks\":\"Nav_navLinks__3gD_b\",\"burger\":\"Nav_burger__2AvS2\",\"navActive\":\"Nav_navActive__sVhrA\",\"toggle\":\"Nav_toggle__1QjkD\",\"line1\":\"Nav_line1__4KVw8\",\"line2\":\"Nav_line2__y1ipb\",\"line3\":\"Nav_line3__3WzVA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"Recipe_recipe__PpRHs\",\"h1Container\":\"Recipe_h1Container__32QF7\",\"card\":\"Recipe_card__3wnRq\",\"front\":\"Recipe_front__1ERwT\",\"back\":\"Recipe_back__3B47I\",\"frontContent\":\"Recipe_frontContent__dmiEu\",\"recipeContent\":\"Recipe_recipeContent__28xlM\"};"],"sourceRoot":""}